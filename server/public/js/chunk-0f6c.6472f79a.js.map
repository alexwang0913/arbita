{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./src/views/charts/VueEcharts.vue?1130","webpack:///./src/views/charts/vue-echarts/BarChart.vue?a406","webpack:///src/views/charts/vue-echarts/BarChart.vue","webpack:///./src/views/charts/vue-echarts/BarChart.vue?896f","webpack:///./src/views/charts/vue-echarts/BarChart.vue","webpack:///./src/views/charts/vue-echarts/DoughnutChart.vue?1a85","webpack:///src/views/charts/vue-echarts/DoughnutChart.vue","webpack:///./src/views/charts/vue-echarts/DoughnutChart.vue?7440","webpack:///./src/views/charts/vue-echarts/DoughnutChart.vue","webpack:///./src/views/charts/vue-echarts/LineChart.vue?b7d6","webpack:///src/views/charts/vue-echarts/LineChart.vue","webpack:///./src/views/charts/vue-echarts/LineChart.vue?82e1","webpack:///./src/views/charts/vue-echarts/LineChart.vue","webpack:///./src/views/charts/vue-echarts/PieChart.vue?1fa7","webpack:///src/views/charts/vue-echarts/PieChart.vue","webpack:///./src/views/charts/vue-echarts/PieChart.vue?c754","webpack:///./src/views/charts/vue-echarts/PieChart.vue","webpack:///./src/views/charts/vue-echarts/FunnelChart.vue?8c2a","webpack:///src/views/charts/vue-echarts/FunnelChart.vue","webpack:///./src/views/charts/vue-echarts/FunnelChart.vue?f520","webpack:///./src/views/charts/vue-echarts/FunnelChart.vue","webpack:///src/views/charts/VueEcharts.vue","webpack:///./src/views/charts/VueEcharts.vue?5d4a","webpack:///./src/views/charts/VueEcharts.vue","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js"],"names":["echarts","__webpack_require__","createListSimply","_model","defaultEmphasis","FunnelSeries","extendSeriesModel","type","init","option","superApply","this","arguments","legendDataProvider","getRawData","_defaultLabelLine","getInitialData","ecModel","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","emphasis","show","label","getDataParams","dataIndex","data","getData","params","superCall","valueDim","mapDimension","sum","getSum","percent","get","toFixed","$vars","push","defaultOption","zlevel","z","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","lineStyle","width","itemStyle","borderColor","borderWidth","_default","module","exports","zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","axisDim","dim","rect","getRect","rectBound","x","y","height","idx","onZero","axisOffset","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","graphic","extendComponentView","render","group","removeAll","add","Rect","shape","style","defaults","fill","getItemStyle","silent","registerPreprocessor","xAxis","yAxis","_symbol","createSymbol","_number","parsePercent","_labelHelper","getDefaultLabel","SymbolClz","seriesScope","Group","call","updateData","symbolProto","prototype","getSymbolSize","symbolSize","getItemVisual","Array","slice","getScale","driftSymbol","dx","dy","parent","drift","_createSymbol","symbolType","keepAspect","color","symbolPath","attr","culling","scale","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","setDraggable","draggable","cursor","seriesModel","hostModel","isInit","updateProps","_updateCommon","fadeIn","target","opacity","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","strokeNoScale","hoverItemStyle","symbolRotate","symbolOffset","labelModel","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","itemModel","getItemModel","getModel","getShallow","extend","elStyle","setColor","symbolInnerColor","setStyle","liftZ","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","getName","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","incremental","ratio","animateTo","onNormal","on","fadeOut","cb","keepLabel","text","inherits","BaseBarSeries","dependencies","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","_config","createListFromArray","__DEV__","SeriesModel","getSource","clipOverflow","step","smooth","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","animationEasing","progressive","hoverLayerThreshold","Infinity","linearMap","getViewRect","api","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","getSortedIndices","valueArr","mapArray","val","indices","isAscending","i","len","count","a","b","labelLayout","each","textAlign","textX","textY","linePoints","labelPosition","labelLineModel","getItemLayout","points","isLabelInside","x1","y1","x2","labelLineLen","y2","verticalAlign","inside","payload","eachSeriesByType","viewRect","sizeExtent","dataExtent","getDataExtent","itemHeight","getLinePoints","offY","x0","itemWidth","reverse","nextIdx","start","end","setItemLayout","concat","getMarkerPosition","value","coordSys","pt","dataToPoint","clampData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","barMinHeight","barMinAngle","large","progressiveChunkMode","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","resetRange","mergeOption","restoreData","getCoordSysModel","queryComponents","mainType","index","gridIndex","id","gridId","getAxisType","merge","extraOption","ChartView","FunnelPiece","polygon","Polygon","Polyline","Text","ignore","hoverIgnore","normalIgnore","funnelPieceProto","opacityAccessPath","firstCreate","setShape","itemStyleModel","visualColor","lineJoin","_updateLabel","labelText","origin","labelHoverModel","labelLineHoverModel","useInsideStyle","textVerticalAlign","stroke","getLineStyle","FunnelView","oldData","_data","diff","funnelPiece","setItemGraphicEl","update","newIdx","oldIdx","piePiece","getItemGraphicEl","remove","execute","dispose","_util","isObject","map","indexOf","_layout","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","_dataStackHelper","getStackedDimension","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","otherAxes","onZeroAxisIndex","hasOwnProperty","canOnZeroToAxis","updateAxisTransform","coordBase","axisExtent","getExtent","axisExtentSum","coord","toLocalCoord","axisPointerEnabled","_rect","_updateScale","resize","ignoreContainLabel","gridRect","axesList","adjustAxes","extent","inverse","setExtent","labelUnionRect","margin","getAxis","axisType","axisIndex","axesMapOnDim","name","getAxes","getCartesian","xAxisIndex","yAxisIndex","key","coordList","getCartesians","convertToPixel","finder","_findConvertTarget","cartesian","convertFromPixel","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","componentIndex","containPoint","point","axisPositionUsed","axesCount","eachComponent","createAxisCreator","isCategory","onBand","addAxis","unionExtent","unionExtentFromData","eachSeries","isCartesian2D","axesModels","findAxesModels","getTooltipAxes","baseAxes","baseAxis","getOtherAxis","axesTypes","create","grids","dimensions","register","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","Clazz","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","clazz","_helper","setLabel","Model","barItemStyle","Path","BAR_BORDER_WIDTH_QUERY","extendChartView","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","animationModel","hasValue","el","elementCreator","updateStyle","newIndex","oldIndex","removeRect","removeSector","createLarge","noop","eachItemGraphicEl","cartesian2d","isUpdate","rectShape","animateProperty","animateTarget","polar","isRadial","clockwise","startAngle","endAngle","sector","Sector","sectorShape","r","r0","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isPolar","getBarItemStyle","labelPositionOutside","rawLayout","lineWidth","abs","LargePath","buildPath","ctx","startPoint","__startPoint","valueIdx","__valueIdx","moveTo","lineTo","setLargeStyle","getVisual","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","tooltip","axisLine","axisTick","axisLabel","rotate","showMinLabel","showMaxLabel","fontSize","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","timeAxis","logAxis","logBase","seriesType","defaultSymbolType","legendSymbol","performRawSeries","reset","setVisual","symbolKeepAspect","isSeriesFiltered","hasCallback","dataEach","rawValue","getRawValue","setItemVisual","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","createRenderPlanner","isDimensionStacked","plan","isLargeRender","dims","dimLen","stackResultDim","getCalculationInfo","progress","segCount","Float32Array","tmpIn","tmpOut","isNaN","setLayout","layoutMode","containLabel","backgroundColor","_barGrid","largeLayout","registerLayout","curry","registerVisual","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","categories","getOrdinalMeta","mergeAll","registerSubTypeDefaulter","prepareDataCoordInfo","valueOrigin","stacked","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDim","baseDataOffset","coordDim","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","dataColor","funnelLayout","dataFilter","registerProcessor","makeStyleMapper","excludes","getBorderLineDash","lineDash","_vm","_h","$createElement","_c","_self","attrs","fluid","grid-list-xl","py-0","row","wrap","heading","$t","contentCustomClass","colClasses","fullBlock","staticRenderFns","BarChartvue_type_template_id_0753b3d5_render","staticStyle","options","bar","BarChartvue_type_template_id_0753b3d5_staticRenderFns","BarChartvue_type_script_lang_js_","components","ECharts","chart_config","danger","legend","formatter","series","vue_echarts_BarChartvue_type_script_lang_js_","component","Object","componentNormalizer","__file","BarChart","DoughnutChartvue_type_template_id_4510e9c4_render","pie","DoughnutChartvue_type_template_id_4510e9c4_staticRenderFns","DoughnutChartvue_type_script_lang_js_","primary","info","success","warning","radius","avoidLabelOverlap","normal","textStyle","fontWeight","vue_echarts_DoughnutChartvue_type_script_lang_js_","DoughnutChart_component","DoughnutChart","LineChartvue_type_template_id_a472318c_render","line","LineChartvue_type_template_id_a472318c_staticRenderFns","LineChartvue_type_script_lang_js_","markPoint","markLine","vue_echarts_LineChartvue_type_script_lang_js_","LineChart_component","LineChart","PieChartvue_type_template_id_53226534_render","PieChartvue_type_template_id_53226534_staticRenderFns","PieChartvue_type_script_lang_js_","center","shadowColor","animationType","animationDelay","random","vue_echarts_PieChartvue_type_script_lang_js_","PieChart_component","PieChart","FunnelChartvue_type_template_id_3cf3f52e_render","funnel","FunnelChartvue_type_template_id_3cf3f52e_staticRenderFns","FunnelChartvue_type_script_lang_js_","calculable","vue_echarts_FunnelChartvue_type_script_lang_js_","FunnelChart_component","FunnelChart","VueEchartsvue_type_script_lang_js_","charts_VueEchartsvue_type_script_lang_js_","VueEcharts_component","__webpack_exports__","_dataProvider","retrieveRawValue","labelDims","vals","join","Cartesian","constructor","getAxesByScale","axisX","axisY","contain","containData","reserved","out","xScale","yScale","xAxisExtent","yAxisExtent","parse","collect","result","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","getCoordinateSystems","coordSysKey","makeKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","snap","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","clone","labelOption","tooltipAxisPointerLabelShow","crossStyle","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","isArray","getAxisInfo","status","isBlank","dimAxisMapper","_axes","_dimList","scaleType","toLowerCase","filter","_dataCoordConvert","input","method","dimList","output","vec2","fixClipWithShadow","vec2Min","vec2Max","scaleAndAdd","v2Copy","copy","v","cp0","cp1","isPointNull","p","drawSegment","segLen","allLen","dir","smoothMin","smoothMax","drawMono","apply","drawNonMono","prevIdx","k","prevP","ctrlLen","bezierCurveTo","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","sub","dist","getBoundingBox","smoothConstraint","ptMin","ptMax","brush","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","normalStyle","fixPosition","textPosition","Axis","coordExtent","getGlobalExtent","asc","ret","clamp","visualSymbol","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","diffData","newData","diffResult","cmd","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","getRawIndex","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","next","stackedOnCurrent","stackedOnNext","SymbolDraw","lineAnimationDiff","modelUtil","_poly","round","isPointsSame","points1","points2","p1","p2","getSmooth","getAxisExtentWithGap","halfBandWidth","getBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","forSymbol","xExtent","yExtent","expandSize","clipPath","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","dimIndex","dimension","dimName","dimInfo","getDimensionInfo","colorStops","stops","stop","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","LinearGradient","getIsIgnoreFunc","isAuto","canShowAllSymbolForCategory","categoryDataDim","labelMap","getViewLabels","labelItem","tickValue","availSize","dataLen","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isEmpty","isIgnoreFunc","__temp","_step","_newPolygon","setClipPath","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","stackedOnSeries","getAreaStyle","_valueOrigin","queryDataIndex","__points","updatedDataInfo","diffStatus","ptIdx","animators","during","AxisBuilder","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","groupTransition","_splitAreaColors","_splitLine","splitLineModel","lineColors","lineCount","ticksCoords","getTicksCoords","tickModel","tickCoord","colorIndex","Line","subPixelOptimizeLine","anid","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","createHashMap","cIndex","prev","set","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","SymbolCtor","symbolEl","isPersistent","updateLayout","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","useHoverLayer","traverse","enableAnimation","formatUtil","isRadianAroundZero","remRadian","matrixUtil","_vector","v2ApplyTransform","applyTransform","makeAxisEventDataBase","eventData","componentType","dumbGroup","updateTransform","_transform","transform","_dumbGroup","hasBuilder","builders","matrix","pt1","pt2","lineCap","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","sqrt","pos","cos","sin","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","axisNameAvailableWidth","textStyleModel","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","isFinite","textFont","getFont","truncateOpt","nameTruncateMaxWidth","truncatedText","truncateText","minChar","tooltipOpt","formatterParams","textEl","__fullText","__truncatedText","isSilent","content","setTextStyle","textFill","getTextColor","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","getBoundingRect","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","tickLen","tickEl","axisLabelShow","labelMargin","labels","labelRotation","rawCategoryData","formattedLabel","rawLabel","itemLabelModel","textColor","samplers","average","frame","nearest","indexSampler","modifyOutputEnd","sampler","rate","setData","downSample"],"mappings":"iGAAA,IAAAA,EAAAC,EAAA,QAEAC,EAAAD,EAAA,QAEAE,EAAAF,EAAA,QAEAG,EAAAD,EAAAC,gBAoBAC,EAAAL,EAAAM,mBACAC,KAAA,gBACAC,KAAA,SAAAC,GACAJ,EAAAK,WAAAC,KAAA,OAAAC,WAGAD,KAAAE,mBAAA,WACA,OAAAF,KAAAG,cAIAH,KAAAI,kBAAAN,IAEAO,eAAA,SAAAP,EAAAQ,GACA,OAAAf,EAAAS,MAAA,WAEAI,kBAAA,SAAAN,GAEAL,EAAAK,EAAA,sBACA,IAAAS,EAAAT,EAAAU,UACAC,EAAAX,EAAAY,SAAAF,UAEAD,EAAAI,KAAAJ,EAAAI,MAAAb,EAAAc,MAAAD,KACAF,EAAAE,KAAAF,EAAAE,MAAAb,EAAAY,SAAAE,MAAAD,MAGAE,cAAA,SAAAC,GACA,IAAAC,EAAAf,KAAAgB,UACAC,EAAAvB,EAAAwB,UAAAlB,KAAA,gBAAAc,GACAK,EAAAJ,EAAAK,aAAA,SACAC,EAAAN,EAAAO,OAAAH,GAIA,OAFAF,EAAAM,QAAAF,IAAAN,EAAAS,IAAAL,EAAAL,GAAAO,EAAA,KAAAI,QAAA,KACAR,EAAAS,MAAAC,KAAA,WACAV,GAEAW,eACAC,OAAA,EAEAC,EAAA,EAEAC,iBAAA,EACAC,KAAA,GACAC,IAAA,GACAC,MAAA,GACAC,OAAA,GAMAC,QAAA,KACAC,QAAA,OACAC,KAAA,aAEAC,IAAA,EACAC,YAAA,SACA5B,OACAD,MAAA,EACA8B,SAAA,SAGAjC,WACAG,MAAA,EACA+B,OAAA,GACAC,WAEAC,MAAA,EACAhD,KAAA,UAGAiD,WAEAC,YAAA,OACAC,YAAA,GAEArC,UACAE,OACAD,MAAA,OAKAqC,EAAAtD,EACAuD,EAAAC,QAAAF,0BC9GA,IAAAG,EAAA7D,EAAA,QA+BA,SAAA8D,EAAAC,EAAAC,EAAAC,GACAA,QACA,IAAAC,EAAAH,EAAAI,iBACAC,EAAAJ,EAAAI,KACAN,KACAO,EAAAD,EAAAE,kBAAA,GACAC,EAAAH,EAAAjB,SACAqB,EAAAH,EAAA,SAAAE,EACAE,EAAAL,EAAAM,IACAC,EAAAT,EAAAU,UACAC,GAAAF,EAAAG,EAAAH,EAAAG,EAAAH,EAAArB,MAAAqB,EAAAI,EAAAJ,EAAAI,EAAAJ,EAAAK,QACAC,GACAvC,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,EACAqC,OAAA,GAEAC,EAAAnB,EAAA9B,IAAA,aACAkD,EAAA,MAAAX,GAAAI,EAAA,GAAAM,EAAAN,EAAA,GAAAM,IAAAN,EAAA,GAAAM,EAAAN,EAAA,GAAAM,GAEA,GAAAd,EAAA,CACA,IAAAgB,EAAAhB,EAAAiB,cAAAjB,EAAAkB,YAAA,IACAH,EAAAH,EAAA,WAAAO,KAAAC,IAAAD,KAAAE,IAAAL,EAAAD,EAAA,IAAAA,EAAA,IAIAtB,EAAAX,UAAA,MAAAsB,EAAAW,EAAAH,EAAAT,IAAAK,EAAA,SAAAJ,EAAAW,EAAAH,EAAAT,IAAAK,EAAA,IAEAf,EAAA6B,SAAAH,KAAAI,GAAA,SAAAnB,EAAA,KAEA,IAAAoB,GACAlD,KAAA,EACAE,OAAA,EACAH,MAAA,EACAE,MAAA,GAEAkB,EAAAgC,eAAAhC,EAAAiC,cAAAjC,EAAAkC,cAAAH,EAAAtB,GACAT,EAAAmC,YAAA5B,EAAAe,EAAAH,EAAAV,IAAAa,EAAAH,EAAA,aAEAjB,EAAA9B,IAAA,qBACA4B,EAAAiC,eAAAjC,EAAAiC,eAGAlC,EAAAqC,SAAAjC,EAAAkC,YAAAnC,EAAA9B,IAAA,uBACA4B,EAAAgC,gBAAAhC,EAAAgC,gBAIA,IAAAM,EAAApC,EAAA9B,IAAA,oBAIA,OAHA4B,EAAAsC,YAAA,QAAA5B,GAAA4B,IAEAtC,EAAAuC,GAAA,EACAvC,EAGAF,EAAAE,iCCvFA,IAAA/D,EAAAC,EAAA,QAEA6D,EAAA7D,EAAA,QAEAsG,EAAAtG,EAAA,QAEAA,EAAA,QAEAA,EAAA,QAqBAD,EAAAwG,qBACAjG,KAAA,OACAkG,OAAA,SAAAzC,EAAA/C,GACAN,KAAA+F,MAAAC,YAEA3C,EAAA7B,IAAA,SACAxB,KAAA+F,MAAAE,IAAA,IAAAL,EAAAM,MACAC,MAAA9C,EAAAI,iBAAAS,UACAkC,MAAAjD,EAAAkD,UACAC,KAAAjD,EAAA7B,IAAA,oBACS6B,EAAAkD,gBACTC,QAAA,EACAb,IAAA,QAKAtG,EAAAoH,qBAAA,SAAA3G,GAEAA,EAAA4G,OAAA5G,EAAA6G,QAAA7G,EAAA0D,OACA1D,EAAA0D,iCCjDA,IAAAL,EAAA7D,EAAA,QAEAsH,EAAAtH,EAAA,QAEAuH,EAAAD,EAAAC,aAEAjB,EAAAtG,EAAA,QAEAwH,EAAAxH,EAAA,QAEAyH,EAAAD,EAAAC,aAEAC,EAAA1H,EAAA,SAEA2H,EAAAD,EAAAC,gBAgCA,SAAAC,EAAAnG,EAAAwD,EAAA4C,GACAvB,EAAAwB,MAAAC,KAAArH,MACAA,KAAAsH,WAAAvG,EAAAwD,EAAA4C,GAGA,IAAAI,EAAAL,EAAAM,UASAC,EAAAP,EAAAO,cAAA,SAAA1G,EAAAwD,GACA,IAAAmD,EAAA3G,EAAA4G,cAAApD,EAAA,cACA,OAAAmD,aAAAE,MAAAF,EAAAG,UAAAH,OAGA,SAAAI,EAAAJ,GACA,OAAAA,EAAA,KAAAA,EAAA,MAGA,SAAAK,EAAAC,EAAAC,GACAjI,KAAAkI,OAAAC,MAAAH,EAAAC,GAGAV,EAAAa,cAAA,SAAAC,EAAAtH,EAAAwD,EAAAmD,EAAAY,GAEAtI,KAAAgG,YACA,IAAAuC,EAAAxH,EAAA4G,cAAApD,EAAA,SAOAiE,EAAA3B,EAAAwB,GAAA,SAAAE,EAAAD,GACAE,EAAAC,MACA9C,GAAA,IACA+C,SAAA,EACAC,MAAAb,EAAAJ,KAGAc,EAAAL,MAAAJ,EACA/H,KAAA4I,YAAAP,EACArI,KAAAiG,IAAAuC,IAQAjB,EAAAsB,oBAAA,SAAAC,GACA9I,KAAA+I,QAAA,GAAAC,cAAAF,IAaAvB,EAAA0B,cAAA,WACA,OAAAjJ,KAAA+I,QAAA,IAQAxB,EAAAO,SAAA,WACA,OAAA9H,KAAA+I,QAAA,GAAAJ,OAOApB,EAAA2B,UAAA,WACAlJ,KAAA+I,QAAA,GAAAI,QAAA,aAOA5B,EAAA6B,SAAA,WACApJ,KAAA+I,QAAA,GAAAI,QAAA,WAQA5B,EAAA8B,KAAA,SAAAxH,EAAAC,GACA,IAAA0G,EAAAxI,KAAA+I,QAAA,GACAP,EAAA3G,SACA2G,EAAA1G,KAGAyF,EAAA+B,aAAA,SAAAC,GACA,IAAAf,EAAAxI,KAAA+I,QAAA,GACAP,EAAAe,YACAf,EAAAgB,OAAAD,EAAA,kBAqBAhC,EAAAD,WAAA,SAAAvG,EAAAwD,EAAA4C,GACAnH,KAAAwG,QAAA,EACA,IAAA6B,EAAAtH,EAAA4G,cAAApD,EAAA,oBACAkF,EAAA1I,EAAA2I,UACAhC,EAAAD,EAAA1G,EAAAwD,GACAoF,EAAAtB,IAAArI,KAAA4I,YAEA,GAAAe,EAAA,CACA,IAAArB,EAAAvH,EAAA4G,cAAApD,EAAA,oBAEAvE,KAAAoI,cAAAC,EAAAtH,EAAAwD,EAAAmD,EAAAY,OACG,CACH,IAAAE,EAAAxI,KAAA+I,QAAA,GACAP,EAAAhC,QAAA,EACAZ,EAAAgE,YAAApB,GACAG,MAAAb,EAAAJ,IACK+B,EAAAlF,GAKL,GAFAvE,KAAA6J,cAAA9I,EAAAwD,EAAAmD,EAAAP,GAEAwC,EAAA,CACAnB,EAAAxI,KAAA+I,QAAA,OACAe,EAAA3C,KAAA2C,OACAC,GACApB,MAAAH,EAAAG,MAAAd,SAEAiC,IAAAC,EAAA3D,OACA4D,QAAAxB,EAAApC,MAAA4D,UAEAxB,EAAAG,OAAA,KACAmB,IAAAtB,EAAApC,MAAA4D,QAAA,GACApE,EAAAqE,UAAAzB,EAAAuB,EAAAN,EAAAlF,GAGAvE,KAAAkK,aAAAT,GAIA,IAAAU,GAAA,aACAC,GAAA,wBACAC,GAAA,SACAC,GAAA,oBAQA/C,EAAAsC,cAAA,SAAA9I,EAAAwD,EAAAmD,EAAAP,GACA,IAAAqB,EAAAxI,KAAA+I,QAAA,GACAU,EAAA1I,EAAA2I,UACAnB,EAAAxH,EAAA4G,cAAApD,EAAA,SAEA,UAAAiE,EAAA5I,MACA4I,EAAA+B,UACAC,eAAA,IAIA,IAAA3H,EAAAsE,KAAAtE,UACA4H,EAAAtD,KAAAsD,eACAC,EAAAvD,KAAAuD,aACAC,EAAAxD,KAAAwD,aACAC,EAAAzD,KAAAyD,WACAC,EAAA1D,KAAA0D,gBACAC,EAAA3D,KAAA2D,eACAC,EAAA5D,KAAA4D,YAEA,IAAA5D,GAAApG,EAAAiK,cAAA,CACA,IAAAC,EAAA9D,KAAA8D,UAAA9D,EAAA8D,UAAAlK,EAAAmK,aAAA3G,GAGA1B,EAAAoI,EAAAE,SAAAhB,GAAA5D,cAAA,UACAkE,EAAAQ,EAAAE,SAAAf,GAAA7D,eACAmE,EAAAO,EAAAG,WAAA,gBACAT,EAAAM,EAAAG,WAAA,gBACAR,EAAAK,EAAAE,SAAAd,GACAQ,EAAAI,EAAAE,SAAAb,GACAQ,EAAAG,EAAAG,WAAA,kBACAL,EAAAE,EAAAG,WAAA,eAEAX,EAAAtH,EAAAkI,UAAqCZ,GAGrC,IAAAa,EAAA9C,EAAApC,MACAoC,EAAAC,KAAA,YAAAiC,GAAA,GAAA5F,KAAAI,GAAA,QAEAyF,GACAnC,EAAAC,KAAA,YAAA1B,EAAA4D,EAAA,GAAAjD,EAAA,IAAAX,EAAA4D,EAAA,GAAAjD,EAAA,MAGAqD,GAAAvC,EAAAC,KAAA,SAAAsC,GAEAvC,EAAA+C,SAAAhD,EAAApB,KAAAqE,kBACAhD,EAAAiD,SAAA5I,GACA,IAAAmH,EAAAjJ,EAAA4G,cAAApD,EAAA,WAEA,MAAAyF,IACAsB,EAAAtB,WAGA,IAAA0B,EAAA3K,EAAA4G,cAAApD,EAAA,SACAoH,EAAAnD,EAAAoD,WAEA,MAAAF,EACA,MAAAC,IACAnD,EAAAoD,WAAApD,EAAA7C,GACA6C,EAAA7C,IAAA+F,GAEG,MAAAC,IACHnD,EAAA7C,GAAAgG,EACAnD,EAAAoD,WAAA,MAGA,IAAAC,EAAA1E,KAAA0E,aASA,SAAAC,EAAAvH,EAAAhB,GACA,OAAAsI,EAAA9K,EAAAgL,QAAAxH,GAAA0C,EAAAlG,EAAAwD,GATAqB,EAAAoG,cAAAV,EAAAb,EAAAG,EAAAC,GACAoB,aAAAxC,EACAyC,eAAA3H,EACA4H,YAAAL,EACAM,YAAA,EACAC,UAAA9D,IAOAC,EAAA8D,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACA9D,EAAA+D,WAAA9B,EAGA7E,EAAA4G,cAAAhE,GACA,IAAAG,EAAAb,EAAAJ,GAEA,GAAAoD,GAAArB,EAAAgD,qBAAA,CACA,IAAAC,EAAA,WAGA,IAAA1M,KAAA2M,YAAA,CAIA,IAAAC,EAAAjE,EAAA,GAAAA,EAAA,GACA3I,KAAA6M,WACAlE,OAAA7D,KAAAC,IAAA,IAAA4D,EAAA,GAAAA,EAAA,MAAA7D,KAAAC,IAAA,IAAA4D,EAAA,GAAAA,EAAA,KAAAiE,KACO,oBAGPE,EAAA,WACA9M,KAAA2M,aAIA3M,KAAA6M,WACAlE,SACO,mBAGPH,EAAAuE,GAAA,YAAAL,GAAAK,GAAA,WAAAD,GAAAC,GAAA,WAAAL,GAAAK,GAAA,SAAAD,KAUAvF,EAAAyF,QAAA,SAAAC,EAAA1J,GACA,IAAAiF,EAAAxI,KAAA+I,QAAA,GAEA/I,KAAAwG,OAAAgC,EAAAhC,QAAA,IAEAjD,MAAA2J,aAAA1E,EAAApC,MAAA+G,KAAA,MACAvH,EAAAgE,YAAApB,GACApC,OACA4D,QAAA,GAEArB,OAAA,MACG3I,KAAAkK,aAAAlK,KAAAc,UAAAmM,IAGH9J,EAAAiK,SAAAlG,EAAAtB,EAAAwB,OACA,IAAApE,EAAAkE,EACAjE,EAAAC,QAAAF,0BC5WA,IAAAqK,EAAA/N,EAAA,QAoBA0D,EAAAqK,EAAAhC,QACAzL,KAAA,aACA0N,cAAA,gBACAC,cAAA,OAKAC,eAAA,WAEA,QAAAxN,KAAAwB,IAAA,UAAAxB,KAAAwB,IAAA,gBAMAiM,wBAAA,WAEA,IAAAC,EAAA1N,KAAAwB,IAAA,wBACAmM,EAAA3N,KAAAwB,IAAA,kBAMA,OAJAmM,EAAAD,IACAA,EAAAC,GAGAD,KAIAzK,EAAAC,QAAAF,2BCjDA,IAAA4K,EAAAtO,EAAA,QAIAuO,GAFAD,EAAAE,QAEAxO,EAAA,SAEAyO,EAAAzO,EAAA,QAoBA0D,EAAA+K,EAAA1C,QACAzL,KAAA,cACA0N,cAAA,gBACAjN,eAAA,SAAAP,EAAAQ,GACA,OAAAuN,EAAA7N,KAAAgO,YAAAhO,OAEA4B,eACAC,OAAA,EACAC,EAAA,EACA2B,iBAAA,cACA1B,iBAAA,EACA+I,gBAAA,EAMAmD,cAAA,EAEArN,OACA6B,SAAA,OAIAE,WACAC,MAAA,EACAhD,KAAA,SAUAsO,MAAA,EAEAC,QAAA,EACAC,eAAA,KACAC,OAAA,cACA3G,WAAA,EACAgD,aAAA,KACA4D,YAAA,EAKAC,cAAA,OAEAC,cAAA,EAEAC,SAAA,OACAC,gBAAA,SAEAC,YAAA,EACAC,oBAAAC,OAIA5L,EAAAC,QAAAF,0BCtFA,IAAAI,EAAA9D,EAAA,QAEAwH,EAAAxH,EAAA,QAEAyH,EAAAD,EAAAC,aACA+H,EAAAhI,EAAAgI,UAoBA,SAAAC,EAAAtF,EAAAuF,GACA,OAAA5L,EAAA6L,cAAAxF,EAAAyF,sBACAtM,MAAAoM,EAAAG,WACA7K,OAAA0K,EAAAI,cAIA,SAAAC,EAAAtO,EAAAuB,GAQA,IAPA,IAAAnB,EAAAJ,EAAAK,aAAA,SACAkO,EAAAvO,EAAAwO,SAAApO,EAAA,SAAAqO,GACA,OAAAA,IAEAC,KACAC,EAAA,cAAApN,EAEAqN,EAAA,EAAAC,EAAA7O,EAAA8O,QAAqCF,EAAAC,EAASD,IAC9CF,EAAAE,KAYA,MARA,oBAAArN,EACAmN,EAAAnN,QACG,SAAAA,GACHmN,EAAAnN,KAAA,SAAAwN,EAAAC,GACA,OAAAL,EAAAJ,EAAAQ,GAAAR,EAAAS,GAAAT,EAAAS,GAAAT,EAAAQ,KAIAL,EAGA,SAAAO,EAAAjP,GACAA,EAAAkP,KAAA,SAAA1L,GACA,IAOA2L,EACAC,EACAC,EACAC,EAVApF,EAAAlK,EAAAmK,aAAA3G,GACAqG,EAAAK,EAAAE,SAAA,SACAmF,EAAA1F,EAAApJ,IAAA,YACA+O,EAAAtF,EAAAE,SAAA,aACA/H,EAAArC,EAAAyP,cAAAjM,GACAkM,EAAArN,EAAAqN,OACAC,EAAA,UAAAJ,GAAA,WAAAA,GAAA,WAAAA,EAMA,GAAAI,EACAP,GAAAM,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SACAL,GAAAK,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SACAP,EAAA,SACAG,IAAAF,EAAAC,IAAAD,EAAAC,QACK,CACL,IAAAO,EACAC,EACAC,EACAC,EAAAP,EAAA/O,IAAA,UAEA,SAAA8O,GAEAK,GAAAF,EAAA,MAAAA,EAAA,SACAG,GAAAH,EAAA,MAAAA,EAAA,SACAI,EAAAF,EAAAG,EACAX,EAAAU,EAAA,EACAX,EAAA,UAGAS,GAAAF,EAAA,MAAAA,EAAA,SACAG,GAAAH,EAAA,MAAAA,EAAA,SACAI,EAAAF,EAAAG,EACAX,EAAAU,EAAA,EACAX,EAAA,QAGA,IAAAa,EAAAH,EACAP,IAAAM,EAAAC,IAAAC,EAAAE,IACAX,EAAAW,EAGA3N,EAAAxC,OACAyP,aACAjM,EAAA+L,EACA9L,EAAA+L,EACAY,cAAA,SACAd,YACAe,OAAAP,KAKA,SAAA1N,EAAA1C,EAAA0O,EAAAkC,GACA5Q,EAAA6Q,iBAAA,kBAAA1H,GACA,IAAA1I,EAAA0I,EAAAzI,UACAG,EAAAJ,EAAAK,aAAA,SACAkB,EAAAmH,EAAAjI,IAAA,QACA4P,EAAArC,EAAAtF,EAAAuF,GACAS,EAAAJ,EAAAtO,EAAAuB,GACA+O,GAAAtK,EAAA0C,EAAAjI,IAAA,WAAA4P,EAAAxO,OAAAmE,EAAA0C,EAAAjI,IAAA,WAAA4P,EAAAxO,QACA0O,EAAAvQ,EAAAwQ,cAAApQ,GACA6D,EAAAyE,EAAAjI,IAAA,OACAuD,EAAA0E,EAAAjI,IAAA,OAEA,MAAAwD,IACAA,EAAAF,KAAAE,IAAAsM,EAAA,OAGA,MAAAvM,IACAA,EAAAuM,EAAA,IAGA,IAAA9O,EAAAiH,EAAAjI,IAAA,eACAe,EAAAkH,EAAAjI,IAAA,OACAgQ,GAAAJ,EAAA9M,OAAA/B,GAAAxB,EAAA8O,QAAA,IAAA9O,EAAA8O,QACAxL,EAAA+M,EAAA/M,EAEAoN,EAAA,SAAAlN,EAAAmN,GAEA,IAEAC,EAFAnC,EAAAzO,EAAAS,IAAAL,EAAAoD,IAAA,EACAqN,EAAA9C,EAAAU,GAAAxK,EAAAD,GAAAsM,GAAA,GAGA,OAAA7O,GACA,WACAmP,EAAAP,EAAAhN,EACA,MAEA,aACAuN,EAAAP,EAAAhN,GAAAgN,EAAAxO,MAAAgP,GAAA,EACA,MAEA,YACAD,EAAAP,EAAAhN,EAAAgN,EAAAxO,MAAAgP,EACA,MAGA,QAAAD,EAAAD,IAAAC,EAAAC,EAAAF,KAGA,cAAApP,IAEAkP,KACAjP,KACA8B,GAAA+M,EAAA9M,OACAmL,IAAAoC,WAGA,QAAAlC,EAAA,EAAmBA,EAAAF,EAAA/M,OAAoBiN,IAAA,CACvC,IAAApL,EAAAkL,EAAAE,GACAmC,EAAArC,EAAAE,EAAA,GACA1E,EAAAlK,EAAAmK,aAAA3G,GACAD,EAAA2G,EAAAzJ,IAAA,oBAEA,MAAA8C,EACAA,EAAAkN,GAEAlN,EAAAyC,EAAAzC,EAAA8M,EAAA9M,QAEA,cAAAhC,IACAgC,OAIA,IAAAyN,EAAAN,EAAAlN,EAAAF,GACA2N,EAAAP,EAAAK,EAAAzN,EAAAC,GACAD,GAAAC,EAAA/B,EACAxB,EAAAkR,cAAA1N,GACAkM,OAAAsB,EAAAG,OAAAF,EAAAnK,QAAAgK,aAIA7B,EAAAjP,KAIAkC,EAAAC,QAAAF,wBCrMA,IAAA+K,EAAAzO,EAAA,QAEAuO,EAAAvO,EAAA,QAoBA0D,EAAA+K,EAAA1C,QACAzL,KAAA,sBACAS,eAAA,SAAAP,EAAAQ,GACA,OAAAuN,EAAA7N,KAAAgO,YAAAhO,OAEAmS,kBAAA,SAAAC,GACA,IAAAC,EAAArS,KAAAyD,iBAEA,GAAA4O,EAAA,CAEA,IAAAC,EAAAD,EAAAE,YAAAF,EAAAG,UAAAJ,IACArR,EAAAf,KAAAgB,UACAyR,EAAA1R,EAAA2R,UAAA,UACAC,EAAA5R,EAAA2R,UAAA,QACAE,EAAAP,EAAAQ,cAAAC,eAAA,IAEA,OADAR,EAAAM,IAAAH,EAAAE,EAAA,EACAL,EAGA,OAAAS,UAEAnR,eACAC,OAAA,EAEAC,EAAA,EAEA2B,iBAAA,cACA1B,iBAAA,EAMAiR,aAAA,EAEAC,YAAA,EAEAC,OAAA,EACAvF,eAAA,IACAgB,YAAA,IACAwE,qBAAA,MAWAtQ,aACAnC,eAIAuC,EAAAC,QAAAF,0BC9EA,IAAAG,EAAA7D,EAAA,QAEA8T,EAAA9T,EAAA,QAEA+T,EAAA/T,EAAA,QAEAgU,EAAAhU,EAAA,QAoBAiU,EAAAH,EAAA/H,QACAzL,KAAA,kBAKA8D,KAAA,KAKA7D,KAAA,WACA0T,EAAAxT,WAAAC,KAAA,OAAAC,WACAD,KAAAwT,cAMAC,YAAA,WACAF,EAAAxT,WAAAC,KAAA,cAAAC,WACAD,KAAAwT,cAMAE,YAAA,WACAH,EAAAxT,WAAAC,KAAA,cAAAC,WACAD,KAAAwT,cAOAG,iBAAA,WACA,OAAA3T,KAAAM,QAAAsT,iBACAC,SAAA,OACAC,MAAA9T,KAAAF,OAAAiU,UACAC,GAAAhU,KAAAF,OAAAmU,SACK,MAIL,SAAAC,EAAAnQ,EAAAjE,GAEA,OAAAA,EAAAF,OAAAE,EAAAiB,KAAA,oBAGAoC,EAAAgR,MAAAZ,EAAA/L,UAAA8L,GACA,IAAAc,GAIA3B,OAAA,GAEAY,EAAA,IAAAE,EAAAW,EAAAE,GACAf,EAAA,IAAAE,EAAAW,EAAAE,GACA,IAAApR,EAAAuQ,EACAtQ,EAAAC,QAAAF,0BCtFA,IAAA4C,EAAAtG,EAAA,QAEA6D,EAAA7D,EAAA,QAEA+U,EAAA/U,EAAA,QA0BA,SAAAgV,EAAAvT,EAAAwD,GACAqB,EAAAwB,MAAAC,KAAArH,MACA,IAAAuU,EAAA,IAAA3O,EAAA4O,QACAhU,EAAA,IAAAoF,EAAA6O,SACAtH,EAAA,IAAAvH,EAAA8O,KAMA,SAAAhI,IACAlM,EAAAmU,OAAAnU,EAAAoU,YACAzH,EAAAwH,OAAAxH,EAAAyH,YAGA,SAAA9H,IACAtM,EAAAmU,OAAAnU,EAAAqU,aACA1H,EAAAwH,OAAAxH,EAAA0H,aAZA7U,KAAAiG,IAAAsO,GACAvU,KAAAiG,IAAAzF,GACAR,KAAAiG,IAAAkH,GACAnN,KAAAsH,WAAAvG,EAAAwD,GAAA,GAYAvE,KAAA+M,GAAA,WAAAL,GAAAK,GAAA,SAAAD,GAAAC,GAAA,YAAAL,GAAAK,GAAA,WAAAD,GAGA,IAAAgI,EAAAR,EAAA9M,UACAuN,GAAA,uBAEAD,EAAAxN,WAAA,SAAAvG,EAAAwD,EAAAyQ,GACA,IAAAT,EAAAvU,KAAA+I,QAAA,GACAU,EAAA1I,EAAA2I,UACAuB,EAAAlK,EAAAmK,aAAA3G,GACAnB,EAAArC,EAAAyP,cAAAjM,GACAyF,EAAAjJ,EAAAmK,aAAA3G,GAAA/C,IAAAuT,GACA/K,EAAA,MAAAA,EAAA,EAAAA,EAEAuK,EAAAhK,aAEAyK,GACAT,EAAAU,UACAxE,OAAArN,EAAAqN,SAEA8D,EAAA9I,UACAzB,QAAA,IAEApE,EAAAqE,UAAAsK,GACAnO,OACA4D,YAEKP,EAAAlF,IAELqB,EAAAgE,YAAA2K,GACAnO,OACA4D,WAEA7D,OACAsK,OAAArN,EAAAqN,SAEKhH,EAAAlF,GAIL,IAAA2Q,EAAAjK,EAAAE,SAAA,aACAgK,EAAApU,EAAA4G,cAAApD,EAAA,SACAgQ,EAAA9I,SAAAtI,EAAAkD,UACA+O,SAAA,QACA9O,KAAA6O,GACGD,EAAA3O,cAAA,cACHgO,EAAAhI,WAAA2I,EAAA/J,SAAA,YAAA5E,eAEAvG,KAAAqV,aAAAtU,EAAAwD,GAEAqB,EAAA4G,cAAAxM,OAGA8U,EAAAO,aAAA,SAAAtU,EAAAwD,GACA,IAAA/D,EAAAR,KAAA+I,QAAA,GACAuM,EAAAtV,KAAA+I,QAAA,GACAU,EAAA1I,EAAA2I,UACAuB,EAAAlK,EAAAmK,aAAA3G,GACAnB,EAAArC,EAAAyP,cAAAjM,GACAyL,EAAA5M,EAAAxC,MACAuU,EAAApU,EAAA4G,cAAApD,EAAA,SACAqB,EAAAgE,YAAApJ,GACA2F,OACAsK,OAAAT,EAAAK,YAAAL,EAAAK,aAEG5G,EAAAlF,GACHqB,EAAAgE,YAAA0L,GACAlP,OACAhC,EAAA4L,EAAA5L,EACAC,EAAA2L,EAAA3L,IAEGoF,EAAAlF,GACH+Q,EAAA7M,MACAxD,SAAA+K,EAAA/K,SACAsQ,QAAAvF,EAAA5L,EAAA4L,EAAA3L,GACAsB,GAAA,KAEA,IAAAiF,EAAAK,EAAAE,SAAA,SACAqK,EAAAvK,EAAAE,SAAA,kBACAoF,EAAAtF,EAAAE,SAAA,aACAsK,EAAAxK,EAAAE,SAAA,sBACAgK,EAAApU,EAAA4G,cAAApD,EAAA,SACAqB,EAAAoG,cAAAsJ,EAAAlP,MAAAkP,EAAA/I,cAAkE3B,EAAA4K,GAClEvJ,aAAAlL,EAAA2I,UACAwC,eAAA3H,EACA4H,YAAApL,EAAAgL,QAAAxH,GACA8H,UAAA8I,EACAO,iBAAA1F,EAAAiB,SAEAf,UAAAF,EAAAE,UACAyF,kBAAA3F,EAAAgB,gBAEAsE,EAAAX,OAAAW,EAAAT,cAAAjK,EAAApJ,IAAA,QACA8T,EAAAV,aAAAY,EAAAhU,IAAA,QACAhB,EAAAmU,OAAAnU,EAAAqU,cAAAtE,EAAA/O,IAAA,QACAhB,EAAAoU,aAAAa,EAAAjU,IAAA,QAEAhB,EAAAiL,UACAmK,OAAAT,IAEA3U,EAAAiL,SAAA8E,EAAApF,SAAA,aAAA0K,gBACArV,EAAA+L,WAAAkJ,EAAAtK,SAAA,aAAA0K,gBAGA1S,EAAAiK,SAAAkH,EAAA1O,EAAAwB,OACA,IAAA0O,EAAAzB,EAAAhJ,QACAzL,KAAA,SACAkG,OAAA,SAAA2D,EAAAnJ,EAAA0O,GACA,IAAAjO,EAAA0I,EAAAzI,UACA+U,EAAA/V,KAAAgW,MACAjQ,EAAA/F,KAAA+F,MACAhF,EAAAkV,KAAAF,GAAA9P,IAAA,SAAA1B,GACA,IAAA2R,EAAA,IAAA5B,EAAAvT,EAAAwD,GACAxD,EAAAoV,iBAAA5R,EAAA2R,GACAnQ,EAAAE,IAAAiQ,KACKE,OAAA,SAAAC,EAAAC,GACL,IAAAC,EAAAR,EAAAS,iBAAAF,GACAC,EAAAjP,WAAAvG,EAAAsV,GACAtQ,EAAAE,IAAAsQ,GACAxV,EAAAoV,iBAAAE,EAAAE,KACKE,OAAA,SAAAlS,GACL,IAAAgS,EAAAR,EAAAS,iBAAAjS,GACAwB,EAAA0Q,OAAAF,KACKG,UACL1W,KAAAgW,MAAAjV,GAEA0V,OAAA,WACAzW,KAAA+F,MAAAC,YACAhG,KAAAgW,MAAA,MAEAW,QAAA,eAEA3T,EAAA8S,EACA7S,EAAAC,QAAAF,0BCvLA,IAAA4K,EAAAtO,EAAA,QAIAsX,GAFAhJ,EAAAE,QAEAxO,EAAA,SAEAuX,EAAAD,EAAAC,SACA5G,EAAA2G,EAAA3G,KACA6G,EAAAF,EAAAE,IACAC,EAAAH,EAAAG,QAGAC,GAFAJ,EAAApR,SAEAlG,EAAA,SAEA2P,EAAA+H,EAAA/H,cAEAgI,EAAA3X,EAAA,QAEA4X,EAAAD,EAAAC,mBACAC,EAAAF,EAAAE,gBACAC,EAAAH,EAAAG,gBACAC,EAAAJ,EAAAI,uBAEAC,EAAAhY,EAAA,QAEAiY,EAAAjY,EAAA,QAEAkY,EAAAlY,EAAA,QAEAmY,EAAAnY,EAAA,QAEAoY,EAAAD,EAAAC,oBAkCA,SAAAC,EAAArU,EAAAD,EAAA/C,GACA,OAAAgD,EAAAqQ,qBAAAtQ,EAGA,SAAAuU,EAAAvU,EAAA/C,EAAA0O,GAKAhP,KAAA6X,cAMA7X,KAAA8X,eAMA9X,KAAA+X,YAMA/X,KAAAgY,aAEAhY,KAAAiY,eAAA5U,EAAA/C,EAAA0O,GAEAhP,KAAAkY,MAAA7U,EA/DA/D,EAAA,QAkEA,IAAA6Y,EAAAP,EAAApQ,UA8BA,SAAA4Q,EAAAC,EAAAC,EAAA5U,GACAA,EAAAE,gBAAA,WAEA,OAAA2U,UAMA,IACAA,EADAC,EAAAH,EAAAC,GAEAhV,EAAAI,EAAAwU,MACA1T,EAAAlB,EAAA9B,IAAA,mBACAiX,EAAAnV,EAAA9B,IAAA,4BAEA,GAAAgD,EAKA,SAAAiU,GASA,QAAAlU,KAAAiU,EACA,GAAAA,EAAAE,eAAAnU,IAAAoU,EAAAH,EAAAjU,IAAA,CACAgU,EAAAC,EAAAjU,GACA,YAXAoU,EAAAH,EAAAC,MACAF,EAAAC,EAAAC,IAeA,SAAAE,EAAAjV,GACA,OAAAA,GAAA,aAAAA,EAAA9D,MAAA,SAAA8D,EAAA9D,MAAAuX,EAAAzT,GAiWA,SAAAkV,EAAAlV,EAAAmV,GACA,IAAAC,EAAApV,EAAAqV,YACAC,EAAAF,EAAA,GAAAA,EAAA,GAEApV,EAAAkB,cAAA,MAAAlB,EAAAM,IAAA,SAAAiV,GACA,OAAAA,EAAAJ,GACG,SAAAI,GACH,OAAAD,EAAAC,EAAAJ,GAEAnV,EAAAwV,aAAA,MAAAxV,EAAAM,IAAA,SAAAiV,GACA,OAAAA,EAAAJ,GACG,SAAAI,GACH,OAAAD,EAAAC,EAAAJ,GAhbAV,EAAAvY,KAAA,OACAuY,EAAAgB,oBAAA,EAEAhB,EAAAjU,QAAA,WACA,OAAAlE,KAAAoZ,OAGAjB,EAAA/B,OAAA,SAAA9V,EAAA0O,GACA,IAAAqJ,EAAArY,KAAA+X,SAEA/X,KAAAqZ,aAAA/Y,EAAAN,KAAAkY,OAEAjI,EAAAoI,EAAAjU,EAAA,SAAAsC,GACA0Q,EAAA1Q,EAAAiC,MAAAjC,EAAAwR,SAEAjI,EAAAoI,EAAAhU,EAAA,SAAAsC,GACAyQ,EAAAzQ,EAAAgC,MAAAhC,EAAAuR,SAEAjI,EAAAoI,EAAAjU,EAAA,SAAAsC,GACA0R,EAAAC,EAAA,IAAA3R,KAEAuJ,EAAAoI,EAAAhU,EAAA,SAAAsC,GACAyR,EAAAC,EAAA,IAAA1R,KAIA3G,KAAAsZ,OAAAtZ,KAAAkY,MAAAlJ,IAkDAmJ,EAAAmB,OAAA,SAAAjW,EAAA2L,EAAAuK,GACA,IAAAC,EAAAvK,EAAA5L,EAAA6L,sBACAtM,MAAAoM,EAAAG,WACA7K,OAAA0K,EAAAI,cAEApP,KAAAoZ,MAAAI,EACA,IAAAC,EAAAzZ,KAAAgY,UAwBA,SAAA0B,IACAzJ,EAAAwJ,EAAA,SAAA/V,GACA,IAAAoP,EAAApP,EAAAoP,eACA6G,EAAA7G,GAAA,EAAA0G,EAAA5W,QAAA,EAAA4W,EAAAlV,QACAC,EAAAb,EAAAkW,QAAA,IACAlW,EAAAmW,UAAAF,EAAApV,GAAAoV,EAAA,EAAApV,IACAqU,EAAAlV,EAAAoP,EAAA0G,EAAApV,EAAAoV,EAAAnV,KA7BAqV,KAEAH,GAAAlW,EAAA7B,IAAA,kBACAyO,EAAAwJ,EAAA,SAAA/V,GACA,IAAAA,EAAAwU,MAAA1W,IAAA,qBACA,IAAAsY,EAAAzC,EAAA3T,GAEA,GAAAoW,EAAA,CACA,IAAA9V,EAAAN,EAAAoP,eAAA,iBACAiH,EAAArW,EAAAwU,MAAA1W,IAAA,oBACAgY,EAAAxV,IAAA8V,EAAA9V,GAAA+V,EAEA,QAAArW,EAAAjB,SACA+W,EAAAnV,GAAAyV,EAAAxV,OAAAyV,EACW,SAAArW,EAAAjB,WACX+W,EAAApV,GAAA0V,EAAAlX,MAAAmX,OAKAL,MAmBAvB,EAAA6B,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAna,KAAA+X,SAAAkC,GAEA,SAAAE,EAAA,CACA,SAAAD,EAEA,QAAAE,KAAAD,EACA,GAAAA,EAAAzB,eAAA0B,GACA,OAAAD,EAAAC,GAKA,OAAAD,EAAAD,KAQA/B,EAAAkC,QAAA,WACA,OAAAra,KAAAgY,UAAAnQ,SAcAsQ,EAAAmC,aAAA,SAAAC,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,IAAAC,EAAA,IAAAF,EAAA,IAAAC,EACA,OAAAxa,KAAA6X,WAAA4C,GAGA5D,EAAA0D,KACAC,EAAAD,EAAAC,WACAD,gBAIA,QAAA5K,EAAA,EAAA+K,EAAA1a,KAAA8X,YAA+CnI,EAAA+K,EAAAhY,OAAsBiN,IACrE,GAAA+K,EAAA/K,GAAAqK,QAAA,KAAAlG,QAAAyG,GAAAG,EAAA/K,GAAAqK,QAAA,KAAAlG,QAAA0G,EACA,OAAAE,EAAA/K,IAKAwI,EAAAwC,cAAA,WACA,OAAA3a,KAAA8X,YAAAjQ,SAQAsQ,EAAAyC,eAAA,SAAAta,EAAAua,EAAAzI,GACA,IAAArI,EAAA/J,KAAA8a,mBAAAxa,EAAAua,GAEA,OAAA9Q,EAAAgR,UAAAhR,EAAAgR,UAAAxI,YAAAH,GAAArI,EAAArG,KAAAqG,EAAArG,KAAAkB,cAAAmF,EAAArG,KAAAmB,YAAAuN,IAAA,MAQA+F,EAAA6C,iBAAA,SAAA1a,EAAAua,EAAAzI,GACA,IAAArI,EAAA/J,KAAA8a,mBAAAxa,EAAAua,GAEA,OAAA9Q,EAAAgR,UAAAhR,EAAAgR,UAAAE,YAAA7I,GAAArI,EAAArG,KAAAqG,EAAArG,KAAAwX,YAAAnR,EAAArG,KAAAwV,aAAA9G,IAAA,MAOA+F,EAAA2C,mBAAA,SAAAxa,EAAAua,GACA,IAKAE,EACArX,EANA+F,EAAAoR,EAAApR,YACA0R,EAAAN,EAAAM,YAAA1R,KAAA2R,uBAAA,YACAC,EAAAR,EAAAQ,YAAA5R,KAAA2R,uBAAA,YACA/X,EAAAwX,EAAAxX,UACAiY,EAAAtb,KAAA8X,YAIA,GAAArO,EACAsR,EAAAtR,EAAAhG,iBACAsT,EAAAuE,EAAAP,GAAA,IAAAA,EAAA,WACG,GAAAI,GAAAE,EACHN,EAAA/a,KAAAsa,aAAAa,EAAAI,eAAAF,EAAAE,qBACG,GAAAJ,EACHzX,EAAA1D,KAAAga,QAAA,IAAAmB,EAAAI,qBACG,GAAAF,EACH3X,EAAA1D,KAAAga,QAAA,IAAAqB,EAAAE,qBAEA,GAAAlY,EAAA,CACA,IAAAG,EAAAH,EAAAI,iBAEAD,IAAAxD,OACA+a,EAAA/a,KAAA8X,YAAA,IAIA,OACAiD,YACArX,SASAyU,EAAAqD,aAAA,SAAAC,GACA,IAAAxC,EAAAjZ,KAAA8X,YAAA,GAEA,GAAAmB,EACA,OAAAA,EAAAuC,aAAAC,IASAtD,EAAAF,eAAA,SAAA5U,EAAA/C,EAAA0O,GACA,IAAA0M,GACA1Z,MAAA,EACAE,OAAA,EACAD,KAAA,EACAE,QAAA,GAEAkW,GACAjU,KACAC,MAEAsX,GACAvX,EAAA,EACAC,EAAA,GAMA,GAHA/D,EAAAsb,cAAA,QAAAC,EAAA,KAAA7b,MACAM,EAAAsb,cAAA,QAAAC,EAAA,KAAA7b,OAEA2b,EAAAvX,IAAAuX,EAAAtX,EAIA,OAFArE,KAAA+X,iBACA/X,KAAAgY,cAqBA,SAAA6D,EAAA5B,GACA,gBAAA3W,EAAAiB,GACA,GAAAoT,EAAArU,EAAAD,EAAA/C,GAAA,CAIA,IAAAwD,EAAAR,EAAA9B,IAAA,YAEA,MAAAyY,EAEA,QAAAnW,GAAA,WAAAA,IAEAA,EAAA,SAEA4X,EAAA5X,KACAA,EAAA,QAAAA,EAAA,iBAKA,SAAAA,GAAA,UAAAA,IAEAA,EAAA,OAEA4X,EAAA5X,KACAA,EAAA,SAAAA,EAAA,iBAKA4X,EAAA5X,IAAA,EACA,IAAAJ,EAAA,IAAA6T,EAAA0C,EAAA/C,EAAA5T,IAAA,KAAAA,EAAA9B,IAAA,QAAAsC,GACAgY,EAAA,aAAApY,EAAA9D,KACA8D,EAAAqY,OAAAD,GAAAxY,EAAA9B,IAAA,eACAkC,EAAAkW,QAAAtW,EAAA9B,IAAA,WAEA8B,EAAAI,OAEAA,EAAAwU,MAAA5U,EAEAI,EAAAF,KAAAxD,KAEA0D,EAAAoQ,MAAAvP,EAEAvE,KAAAgY,UAAArW,KAAA+B,GAEA2U,EAAA4B,GAAA1V,GAAAb,EACAiY,EAAA1B,OAhEAja,KAAA+X,SAAAM,EAEApI,EAAAoI,EAAAjU,EAAA,SAAAsC,EAAA6T,GACAtK,EAAAoI,EAAAhU,EAAA,SAAAsC,EAAA6T,GACA,IAAAC,EAAA,IAAAF,EAAA,IAAAC,EACAO,EAAA,IAAAzD,EAAAmD,GACAM,EAAAvX,KAAAxD,KACA+a,EAAA7C,MAAA7U,EACArD,KAAA6X,WAAA4C,GAAAM,EAEA/a,KAAA8X,YAAAnW,KAAAoZ,GAEAA,EAAAiB,QAAAtV,GACAqU,EAAAiB,QAAArV,IACK3G,OACFA,OA4DHmY,EAAAkB,aAAA,SAAA/Y,EAAA+C,GA2BA,SAAA4Y,EAAAlb,EAAA2C,EAAA+F,GACAwG,EAAAlP,EAAAK,aAAAsC,EAAAM,KAAA,YAAAA,GACAN,EAAAiF,MAAAuT,oBAGAnb,EAAA2W,EAAA3W,EAAAiD,MA9BAiM,EAAAjQ,KAAAgY,UAAA,SAAAtU,GACAA,EAAAiF,MAAAkR,UAAAhL,YAEAvO,EAAA6b,WAAA,SAAA1S,GACA,GAAA2S,EAAA3S,GAAA,CACA,IAAA4S,EAAAC,EAAA7S,EAAAnJ,GACA6a,EAAAkB,EAAA,GACAhB,EAAAgB,EAAA,GAEA,IAAA1E,EAAAwD,EAAA9X,EAAA/C,KAAAqX,EAAA0D,EAAAhY,EAAA/C,GACA,OAGA,IAAAya,EAAA/a,KAAAsa,aAAAa,EAAAI,eAAAF,EAAAE,gBACAxa,EAAA0I,EAAAzI,UACA0F,EAAAqU,EAAAf,QAAA,KACArT,EAAAoU,EAAAf,QAAA,KAEA,SAAAjZ,EAAAnB,OACAqc,EAAAlb,EAAA2F,EAAA+C,GACAwS,EAAAlb,EAAA4F,EAAA8C,MAGGzJ,OAiBHmY,EAAAoE,eAAA,SAAAvY,GACA,IAAAwY,KACAhE,KAOA,OANAvI,EAAAjQ,KAAA2a,gBAAA,SAAAI,GACA,IAAA0B,EAAA,MAAAzY,GAAA,SAAAA,EAAA+W,EAAAf,QAAAhW,GAAA+W,EAAAlI,cACA0F,EAAAwC,EAAA2B,aAAAD,GACA1F,EAAAyF,EAAAC,GAAA,GAAAD,EAAA7a,KAAA8a,GACA1F,EAAAyB,EAAAD,GAAA,GAAAC,EAAA7W,KAAA4W,MAGAiE,WACAhE,cAwBA,IAAAmE,GAAA,iBAKA,SAAAL,EAAA7S,EAAAnJ,GACA,OAAAwW,EAAA6F,EAAA,SAAA1C,GACA,IAAA3W,EAAAmG,EAAA2R,uBAAAnB,GAAA,GACA,OAAA3W,IAQA,SAAA8Y,EAAA3S,GACA,sBAAAA,EAAAjI,IAAA,oBAGAoW,EAAAgF,OAAA,SAAAtc,EAAA0O,GACA,IAAA6N,KAuBA,OAtBAvc,EAAAsb,cAAA,gBAAAvY,EAAAkB,GACA,IAAAf,EAAA,IAAAoU,EAAAvU,EAAA/C,EAAA0O,GACAxL,EAAA4W,KAAA,QAAA7V,EAGAf,EAAA8V,OAAAjW,EAAA2L,GAAA,GACA3L,EAAAI,iBAAAD,EACAqZ,EAAAlb,KAAA6B,KAGAlD,EAAA6b,WAAA,SAAA1S,GACA,GAAA2S,EAAA3S,GAAA,CAIA,IAAA4S,EAAAC,EAAA7S,EAAAnJ,GACA6a,EAAAkB,EAAA,GACAhB,EAAAgB,EAAA,GACAhZ,EAAA8X,EAAAxH,mBACAnQ,EAAAH,EAAAI,iBACAgG,EAAAhG,iBAAAD,EAAA8W,aAAAa,EAAAI,eAAAF,EAAAE,mBAEAsB,GAIAjF,EAAAkF,WAAAlF,EAAApQ,UAAAsV,WAAAxF,EAAA9P,UAAAsV,WACAtF,EAAAuF,SAAA,cAAAnF,GACA,IAAA5U,EAAA4U,EACA3U,EAAAC,QAAAF,wBC3kBA,IAAA4K,EAAAtO,EAAA,QAIAD,GAFAuO,EAAAE,QAEAxO,EAAA,SAEA0d,EAAA1d,EAAA,QAwBA2d,EAAA5d,EAAAwG,qBACAjG,KAAA,OAKAsd,aAAA,KAMAC,iBAAA,KAKArX,OAAA,SAAAxC,EAAAhD,EAAA0O,EAAAkC,GAMAlR,KAAAmd,kBAAAH,EAAAI,SAAA9Z,GACA2Z,EAAAld,WAAAC,KAAA,SAAAC,WACAod,EAAArd,KAAAsD,EAAAhD,EAAA0O,EAAAkC,GAAA,IAWAmM,kBAAA,SAAA/Z,EAAAhD,EAAA0O,EAAAkC,EAAAoM,GACAD,EAAArd,KAAAsD,EAAAhD,EAAA0O,EAAAkC,GAAA,IAMAuF,OAAA,SAAAnW,EAAA0O,GACA,IAAAuO,EAAAvd,KAAAkd,aACAK,KAAA9G,OAAAzH,GACAiO,EAAAld,WAAAC,KAAA,SAAAC,YAMA0W,QAAA,SAAArW,EAAA0O,GACAwO,EAAAxd,KAAAgP,GACAiO,EAAAld,WAAAC,KAAA,UAAAC,cAIA,SAAAod,EAAAI,EAAAna,EAAAhD,EAAA0O,EAAAkC,EAAAwM,GACA,IAAAC,EAAAV,EAAAW,oBAAAH,EAAAN,kBAEA,GAAAQ,EAAA,CAIA,IAAAE,EAAAb,EAAAc,oBAAAxa,GACAua,GAAAJ,EAAAP,eAAAO,EAAAP,aAAA,IAAAS,IAAA7X,OAAAxC,EAAAua,EAAA7O,EAAA0O,GAAAF,EAAAC,EAAAzO,IAGA,SAAAwO,EAAAC,EAAAnd,EAAA0O,GACA,IAAAuO,EAAAE,EAAAP,aACAK,KAAA5G,QAAArW,EAAA0O,GACAyO,EAAAP,aAAA,KAGA,IAAAa,KAEAd,EAAAe,yBAAA,SAAApe,EAAAqe,GACAF,EAAAne,GAAAqe,GAGAhB,EAAAW,oBAAA,SAAAhe,GACA,OAAAA,GAAAme,EAAAne,IAGA,IAAAoD,EAAAia,EACAha,EAAAC,QAAAF,0BCpHA,IAAA4K,EAAAtO,EAAA,QAIAD,GAFAuO,EAAAE,QAEAxO,EAAA,SAEA6D,EAAA7D,EAAA,QAEAsG,EAAAtG,EAAA,QAEA4e,EAAA5e,EAAA,QAEA6e,EAAAD,EAAAC,SAEAC,EAAA9e,EAAA,QAEA+e,EAAA/e,EAAA,QAEAgf,EAAAhf,EAAA,QAoBAif,GAAA,8BAGApb,EAAAkI,OAAA+S,EAAA5W,UAAA6W,GAEA,IAAArb,EAAA3D,EAAAmf,iBACA5e,KAAA,MACAkG,OAAA,SAAA2D,EAAAnJ,EAAA0O,GACAhP,KAAAye,gBAAAhV,GAEA,IAAAiV,EAAAjV,EAAAjI,IAAA,oBAMA,MAJA,gBAAAkd,GAAA,UAAAA,IACA1e,KAAA2e,aAAA3e,KAAA4e,aAAAnV,EAAAnJ,EAAA0O,GAAAhP,KAAA6e,cAAApV,EAAAnJ,EAAA0O,IAGAhP,KAAA+F,OAEA+Y,yBAAA,SAAArV,EAAAnJ,EAAA0O,GACAhP,KAAA+e,SAEA/e,KAAAye,gBAAAhV,IAEAuV,kBAAA,SAAA/d,EAAAwI,EAAAnJ,EAAA0O,GAEAhP,KAAAif,wBAAAhe,EAAAwI,IAEAgV,gBAAA,SAAAhV,GACA,IAAAyV,EAAAzV,EAAA0V,gBAAAjM,OAEA,MAAAlT,KAAA2e,cAAAO,EAAAlf,KAAA2e,gBACA3e,KAAA2e,aAAAO,EAEAlf,KAAA+e,WAGAF,cAAA,SAAApV,EAAAnJ,EAAA0O,GACA,IAKAoQ,EALArZ,EAAA/F,KAAA+F,MACAhF,EAAA0I,EAAAzI,UACA+U,EAAA/V,KAAAgW,MACAiD,EAAAxP,EAAAhG,iBACAgZ,EAAAxD,EAAApG,cAGA,gBAAAoG,EAAArZ,KACAwf,EAAA3C,EAAA3J,eACK,UAAAmG,EAAArZ,OACLwf,EAAA,UAAA3C,EAAAzY,KAGA,IAAAqb,EAAA5V,EAAAgD,qBAAAhD,EAAA,KACA1I,EAAAkV,KAAAF,GAAA9P,IAAA,SAAAnF,GACA,GAAAC,EAAAue,SAAAxe,GAAA,CAIA,IAAAmK,EAAAlK,EAAAmK,aAAApK,GACAsC,EAAAsP,EAAAuG,EAAArZ,MAAAmB,EAAAD,EAAAmK,GACAsU,EAAAC,EAAAvG,EAAArZ,MAAAmB,EAAAD,EAAAmK,EAAA7H,EAAAgc,EAAAC,GACAte,EAAAoV,iBAAArV,EAAAye,GACAxZ,EAAAE,IAAAsZ,GACAE,EAAAF,EAAAxe,EAAAD,EAAAmK,EAAA7H,EAAAqG,EAAA2V,EAAA,UAAAnG,EAAArZ,SACKwW,OAAA,SAAAsJ,EAAAC,GACL,IAAAJ,EAAAxJ,EAAAS,iBAAAmJ,GAEA,GAAA5e,EAAAue,SAAAI,GAAA,CAKA,IAAAzU,EAAAlK,EAAAmK,aAAAwU,GACAtc,EAAAsP,EAAAuG,EAAArZ,MAAAmB,EAAA2e,EAAAzU,GAEAsU,EACA3Z,EAAAgE,YAAA2V,GACApZ,MAAA/C,GACSic,EAAAK,GAETH,EAAAC,EAAAvG,EAAArZ,MAAAmB,EAAA2e,EAAAzU,EAAA7H,EAAAgc,EAAAC,GAAA,GAGAte,EAAAoV,iBAAAuJ,EAAAH,GAEAxZ,EAAAE,IAAAsZ,GACAE,EAAAF,EAAAxe,EAAA2e,EAAAzU,EAAA7H,EAAAqG,EAAA2V,EAAA,UAAAnG,EAAArZ,WAlBAmG,EAAA0Q,OAAA8I,KAmBK9I,OAAA,SAAA3V,GACL,IAAAye,EAAAxJ,EAAAS,iBAAA1V,GAEA,gBAAAmY,EAAArZ,KACA2f,GAAAK,EAAA9e,EAAAue,EAAAE,GAEAA,GAAAM,EAAA/e,EAAAue,EAAAE,KAEK7I,UACL1W,KAAAgW,MAAAjV,GAEA6d,aAAA,SAAAnV,EAAAnJ,EAAA0O,GACAhP,KAAA+e,SAEAe,EAAArW,EAAAzJ,KAAA+F,QAEAkZ,wBAAA,SAAAhe,EAAAwI,GACAqW,EAAArW,EAAAzJ,KAAA+F,OAAA,IAEA4Q,QAAAxT,EAAA4c,KACAtJ,OAAA,SAAAnW,GACAN,KAAA+e,OAAAze,IAEAye,OAAA,SAAAze,GACA,IAAAyF,EAAA/F,KAAA+F,MACAhF,EAAAf,KAAAgW,MAEA1V,KAAAkB,IAAA,cAAAT,IAAAf,KAAA2e,aACA5d,EAAAif,kBAAA,SAAAT,GACA,WAAAA,EAAA3f,KACAigB,EAAAN,EAAAze,UAAAR,EAAAif,GAEAK,EAAAL,EAAAze,UAAAR,EAAAif,KAIAxZ,EAAAC,YAGAhG,KAAAgW,MAAA,QAIAwJ,GACAS,YAAA,SAAAlf,EAAAD,EAAAmK,EAAA7H,EAAA0P,EAAAuM,EAAAa,GACA,IAAAjc,EAAA,IAAA2B,EAAAM,MACAC,MAAAhD,EAAAkI,UAA6BjI,KAG7B,GAAAic,EAAA,CACA,IAAAc,EAAAlc,EAAAkC,MACAia,EAAAtN,EAAA,iBACAuN,KACAF,EAAAC,GAAA,EACAC,EAAAD,GAAAhd,EAAAgd,GACAxa,EAAAsa,EAAA,2BAAAjc,GACAkC,MAAAka,GACOhB,EAAAve,GAGP,OAAAmD,GAEAqc,MAAA,SAAAvf,EAAAD,EAAAmK,EAAA7H,EAAAmd,EAAAlB,EAAAa,GAKA,IAAAM,EAAApd,EAAAqd,WAAArd,EAAAsd,SACAC,EAAA,IAAA/a,EAAAgb,QACAza,MAAAhD,EAAAkD,UACAma,aACOpd,KAGP,GAAAic,EAAA,CACA,IAAAwB,EAAAF,EAAAxa,MACAia,EAAAG,EAAA,eACAF,KACAQ,EAAAT,GAAAG,EAAA,EAAAnd,EAAAqd,WACAJ,EAAAD,GAAAhd,EAAAgd,GACAxa,EAAAsa,EAAA,2BAAAS,GACAxa,MAAAka,GACOhB,EAAAve,GAGP,OAAA6f,IAIA,SAAAf,EAAA9e,EAAAue,EAAAE,GAEAA,EAAAnZ,MAAA+G,KAAA,KACAvH,EAAAgE,YAAA2V,GACApZ,OACAvD,MAAA,IAEGyc,EAAAve,EAAA,WACHye,EAAArX,QAAAqX,EAAArX,OAAAuO,OAAA8I,KAIA,SAAAM,EAAA/e,EAAAue,EAAAE,GAEAA,EAAAnZ,MAAA+G,KAAA,KACAvH,EAAAgE,YAAA2V,GACApZ,OACA2a,EAAAvB,EAAApZ,MAAA4a,KAEG1B,EAAAve,EAAA,WACHye,EAAArX,QAAAqX,EAAArX,OAAAuO,OAAA8I,KAIA,IAAA7M,GACAuN,YAAA,SAAAlf,EAAAD,EAAAmK,GACA,IAAA7H,EAAArC,EAAAyP,cAAA1P,GACAkgB,EAAAC,EAAAhW,EAAA7H,GAEA8d,EAAA9d,EAAAR,MAAA,OACAue,EAAA/d,EAAAkB,OAAA,OACA,OACAF,EAAAhB,EAAAgB,EAAA8c,EAAAF,EAAA,EACA3c,EAAAjB,EAAAiB,EAAA8c,EAAAH,EAAA,EACApe,MAAAQ,EAAAR,MAAAse,EAAAF,EACA1c,OAAAlB,EAAAkB,OAAA6c,EAAAH,IAGAV,MAAA,SAAAvf,EAAAD,EAAAmK,GACA,IAAA7H,EAAArC,EAAAyP,cAAA1P,GACA,OACAsgB,GAAAhe,EAAAge,GACAC,GAAAje,EAAAie,GACAN,GAAA3d,EAAA2d,GACAD,EAAA1d,EAAA0d,EACAL,WAAArd,EAAAqd,WACAC,SAAAtd,EAAAsd,YAKA,SAAAjB,EAAAF,EAAAxe,EAAAD,EAAAmK,EAAA7H,EAAAqG,EAAAqJ,EAAAwO,GACA,IAAA/Y,EAAAxH,EAAA4G,cAAA7G,EAAA,SACAkJ,EAAAjJ,EAAA4G,cAAA7G,EAAA,WACAoU,EAAAjK,EAAAE,SAAA,aACAoB,EAAAtB,EAAAE,SAAA,sBAAAoW,kBAEAD,GACA/B,EAAAtK,SAAA,IAAAC,EAAA1T,IAAA,uBAGA+d,EAAAhV,SAAApH,EAAAkD,UACAC,KAAAiC,EACAyB,WACGkL,EAAAqM,oBACH,IAAAxW,EAAAE,EAAAG,WAAA,UACAL,GAAAwU,EAAA9W,KAAA,SAAAsC,GACA,IAAAyW,EAAA1O,EAAA1P,EAAAkB,OAAA,iBAAAlB,EAAAR,MAAA,iBAEA0e,GACAnD,EAAAoB,EAAAnZ,MAAAmG,EAAAtB,EAAA1C,EAAAkB,EAAA3I,EAAA0gB,GAGA5b,EAAA4G,cAAA+S,EAAAhT,GAIA,SAAA0U,EAAAhW,EAAAwW,GACA,IAAAC,EAAAzW,EAAAzJ,IAAA+c,IAAA,EACA,OAAAzZ,KAAAE,IAAA0c,EAAA5c,KAAA6c,IAAAF,EAAA7e,OAAAkC,KAAA6c,IAAAF,EAAAnd,SAGA,IAAAsd,EAAAtD,EAAAjT,QACAzL,KAAA,WACAuG,OACAsK,WAEAoR,UAAA,SAAAC,EAAA3b,GAOA,IAJA,IAAAsK,EAAAtK,EAAAsK,OACAsR,EAAA/hB,KAAAgiB,aACAC,EAAAjiB,KAAAkiB,WAEAvS,EAAA,EAAmBA,EAAAc,EAAA/N,OAAmBiN,GAAA,EACtCoS,EAAA/hB,KAAAkiB,YAAAzR,EAAAd,EAAAsS,GACAH,EAAAK,OAAAJ,EAAA,GAAAA,EAAA,IACAD,EAAAM,OAAA3R,EAAAd,GAAAc,EAAAd,EAAA,OAKA,SAAAmQ,EAAArW,EAAA1D,EAAA4G,GAEA,IAAA5L,EAAA0I,EAAAzI,UACA+gB,KACAE,EAAAlhB,EAAA2R,UAAA,2BACAqP,EAAA,EAAAE,GAAAlhB,EAAA2R,UAAA,kBACA,IAAA6M,EAAA,IAAAqC,GACAzb,OACAsK,OAAA1P,EAAA2R,UAAA,gBAEA/F,gBACAqV,aAAAD,EACAG,WAAAD,IAEAlc,EAAAE,IAAAsZ,GACA8C,EAAA9C,EAAA9V,EAAA1I,GAGA,SAAAshB,EAAA9C,EAAA9V,EAAA1I,GACA,IAAA+B,EAAA/B,EAAAuhB,UAAA,gBAAAvhB,EAAAuhB,UAAA,SACAzf,EAAA4G,EAAA0B,SAAA,aAAA5E,cAAA,wBACAgZ,EAAAhV,SAAA1H,GACA0c,EAAAnZ,MAAAE,KAAA,KACAiZ,EAAAnZ,MAAAwP,OAAA9S,EACAyc,EAAAnZ,MAAAsb,UAAA3gB,EAAA2R,UAAA,YAGAzP,EAAAC,QAAAF,0BCrVA,IAAAG,EAAA7D,EAAA,QAoBAsC,GACAjB,MAAA,EACAkB,OAAA,EACAC,EAAA,EAEA8X,SAAA,EAEAQ,KAAA,GAEAmI,aAAA,MAEAC,WAAA,KACAC,cACAC,SAAA,KACAC,SAAA,MACAC,YAAA,KAGAC,iBAEAC,QAAA,GAEAtc,QAAA,EAEAuc,cAAA,EACAC,SACAriB,MAAA,GAEA4c,eACA0F,UACAtiB,MAAA,EACA6D,QAAA,EACAiU,gBAAA,KACA9V,WACA4F,MAAA,OACA3F,MAAA,EACAhD,KAAA,SAGAyO,QAAA,eACA3G,YAAA,QAEAwb,UACAviB,MAAA,EAEAsQ,QAAA,EAEAvO,OAAA,EACAC,WACAC,MAAA,IAGAugB,WACAxiB,MAAA,EAEAsQ,QAAA,EACAmS,OAAA,EAEAC,aAAA,KAEAC,aAAA,KACAvJ,OAAA,EAEAwJ,SAAA,IAEAC,WACA7iB,MAAA,EACAgC,WACA4F,OAAA,QACA3F,MAAA,EACAhD,KAAA,UAGA6jB,WACA9iB,MAAA,EACA+iB,WACAnb,OAAA,oDAIAob,KACAA,EAAAC,aAAAzgB,EAAAgR,OAEA0P,aAAA,EAQAC,cAAA,KAIAN,WACA7iB,MAAA,GAEAuiB,UAEAa,gBAAA,EACAC,SAAA,QAEAb,WACAa,SAAA,SAECpiB,GACD+hB,EAAAM,UAAA9gB,EAAAgR,OAGA0P,aAAA,KAsBAK,YAAA,GAOCtiB,GACD+hB,EAAAQ,SAAAhhB,EAAAkD,UACAsC,OAAA,EACA3D,IAAA,UACAD,IAAA,WACC4e,EAAAM,WACDN,EAAAS,QAAAjhB,EAAAkD,UACAsC,OAAA,EACA0b,QAAA,IACCV,EAAAM,WACD,IAAAjhB,EAAA2gB,EACA1gB,EAAAC,QAAAF,wBCxJA,SAAAA,EAAAshB,EAAAC,EAAAC,GAEA,OACAF,aAEAG,kBAAA,EACAC,MAAA,SAAAjb,EAAAnJ,EAAA0O,GACA,IAAAjO,EAAA0I,EAAAzI,UACAqH,EAAAoB,EAAAjI,IAAA,WAAA+iB,EACA7c,EAAA+B,EAAAjI,IAAA,cACA8G,EAAAmB,EAAAjI,IAAA,oBAQA,GAPAT,EAAA4jB,WACAH,gBAAAnc,EACAgG,OAAAhG,EACAX,aACAkd,iBAAAtc,KAGAhI,EAAAukB,iBAAApb,GAAA,CAIA,IAAAqb,EAAA,oBAAApd,EA+BA,OACAqd,SAAAhkB,EAAAiK,eAAA8Z,EAAAC,EAAA,MA9BA,SAAAA,EAAAhkB,EAAAwD,GACA,uBAAAmD,EAAA,CACA,IAAAsd,EAAAvb,EAAAwb,YAAA1gB,GAEAtD,EAAAwI,EAAA5I,cAAA0D,GACAxD,EAAAmkB,cAAA3gB,EAAA,aAAAmD,EAAAsd,EAAA/jB,IAGA,GAAAF,EAAAiK,cAAA,CACA,IAAAC,EAAAlK,EAAAmK,aAAA3G,GACA4gB,EAAAla,EAAAG,WAAA,aACAga,EAAAna,EAAAG,WAAA,iBACAia,EAAApa,EAAAG,WAAA,uBAEA,MAAA+Z,GACApkB,EAAAmkB,cAAA3gB,EAAA,SAAA4gB,GAGA,MAAAC,GAEArkB,EAAAmkB,cAAA3gB,EAAA,aAAA6gB,GAGA,MAAAC,GACAtkB,EAAAmkB,cAAA3gB,EAAA,mBAAA8gB,OAYApiB,EAAAC,QAAAF,0BC9EA,IAAA4T,EAAAtX,EAAA,QAEAwX,EAAAF,EAAAE,IAEAwO,EAAAhmB,EAAA,QAEAmY,EAAAnY,EAAA,QAEAimB,EAAA9N,EAAA8N,mBAoBA,SAAAviB,EAAAshB,GACA,OACAA,aACAkB,KAAAF,IACAZ,MAAA,SAAAjb,GACA,IAAA1I,EAAA0I,EAAAzI,UACAqR,EAAA5I,EAAAhG,iBACA0b,EAAA1V,EAAA0V,gBACAsG,EAAAtG,EAAAjM,MAEA,GAAAb,EAAA,CAIA,IAAAqT,EAAA5O,EAAAzE,EAAAyK,WAAA,SAAA9Y,GACA,OAAAjD,EAAAK,aAAA4C,KACO6D,MAAA,KACP8d,EAAAD,EAAAhjB,OACAkjB,EAAA7kB,EAAA8kB,mBAAA,wBA0CA,OAxCAN,EAAAxkB,EAAA2kB,EAAA,MAGAA,EAAA,GAAAE,GAGAL,EAAAxkB,EAAA2kB,EAAA,MAGAA,EAAA,GAAAE,GA+BAD,IACAG,YA7BA,SAAAA,EAAA7kB,EAAAF,GAIA,IAHA,IAAAglB,EAAA9kB,EAAA+Q,IAAA/Q,EAAA8Q,MACAtB,EAAAgV,GAAA,IAAAO,aAAAD,EAAAJ,GAEAhW,EAAA1O,EAAA8Q,MAAAU,EAAA,EAAAwT,KAAAC,KAAuEvW,EAAA1O,EAAA+Q,IAAgBrC,IAAA,CACvF,IAAA8L,EAEA,OAAAkK,EAAA,CACA,IAAAvhB,EAAArD,EAAAS,IAAAkkB,EAAA,GAAA/V,GACA8L,GAAA0K,MAAA/hB,IAAAiO,EAAAE,YAAAnO,EAAA,KAAA8hB,OACW,CACX9hB,EAAA6hB,EAAA,GAAAllB,EAAAS,IAAAkkB,EAAA,GAAA/V,GAAA,IACAtL,EAAA4hB,EAAA,GAAAllB,EAAAS,IAAAkkB,EAAA,GAAA/V,GAEA8L,GAAA0K,MAAA/hB,KAAA+hB,MAAA9hB,IAAAgO,EAAAE,YAAA0T,EAAA,KAAAC,GAGAT,GACAhV,EAAAgC,KAAAgJ,IAAA,GAAA1I,IACAtC,EAAAgC,KAAAgJ,IAAA,GAAA1I,KAEAhS,EAAAkR,cAAAtC,EAAA8L,KAAA5T,UAAAkL,UAIA0S,GAAA1kB,EAAAqlB,UAAA,eAAA3V,MAUAxN,EAAAC,QAAAF,0BC/FA1D,EAAA,QAEA,IAAA8T,EAAA9T,EAAA,QAsBA0D,EAAAoQ,EAAA/H,QACAzL,KAAA,OACA0N,cAAA,iBACA+Y,WAAA,MAKA5iB,iBAAA,KACA7B,eACAjB,MAAA,EACAkB,OAAA,EACAC,EAAA,EACAE,KAAA,MACAC,IAAA,GACAC,MAAA,MACAC,OAAA,GAEAmkB,cAAA,EAGAC,gBAAA,gBACAxjB,YAAA,EACAD,YAAA,UAIAG,EAAAC,QAAAF,0BCnDA,IAAA3D,EAAAC,EAAA,QAEA6D,EAAA7D,EAAA,QAEAknB,EAAAlnB,EAAA,QAEA8D,EAAAojB,EAAApjB,OACAqjB,EAAAD,EAAAC,YAEAnnB,EAAA,QAEAA,EAAA,QAEAA,EAAA,QAEAA,EAAA,QAqBAD,EAAAqnB,eAAAvjB,EAAAwjB,MAAAvjB,EAAA,QAEA/D,EAAAqnB,eAAAD,GACApnB,EAAAunB,gBACAtC,WAAA,MACAI,MAAA,SAAAjb,GAEAA,EAAAzI,UAAA2jB,UAAA,uDC3CA,IAAAxhB,EAAA7D,EAAA,QAEAqkB,EAAArkB,EAAA,QAEA8T,EAAA9T,EAAA,QAEA0X,EAAA1X,EAAA,QAEAunB,EAAA7P,EAAA6P,gBACAC,EAAA9P,EAAA8P,iBAEAC,EAAAznB,EAAA,QAqBA0nB,GAAA,iCASA,SAAAhkB,EAAAikB,EAAAC,EAAAC,EAAAC,GACAjkB,EAAA8M,KAAA+W,EAAA,SAAA/M,GACAiN,EAAA7b,QAIAzL,KAAAqnB,EAAA,QAAAhN,EACAoN,qBAAA,SAAAvnB,EAAAQ,GACA,IAAA+lB,EAAArmB,KAAAqmB,WACAiB,EAAAjB,EAAAQ,EAAA/mB,MACAynB,EAAAjnB,EAAAknB,WACArkB,EAAAgR,MAAArU,EAAAynB,EAAA/lB,IAAAyY,EAAA,SACA9W,EAAAgR,MAAArU,EAAAE,KAAAynB,oBACA3nB,EAAAF,KAAAunB,EAAAF,EAAAnnB,GAEAumB,GACAS,EAAAhnB,EAAAwnB,EAAAjB,IAOAqB,cAAA,WACA,IAAAC,EAAA3nB,KAAAF,OAEA,aAAA6nB,EAAA/nB,OACAI,KAAA4nB,cAAAb,EAAAc,kBAAA7nB,QAQA8nB,cAAA,SAAAC,GACA,IAAAjoB,EAAAE,KAAAF,OAGA,gBAAAA,EAAAF,KACA,OAAAmoB,EACAjoB,EAAAiB,KAGAf,KAAA4nB,cAAAI,YAGAC,eAAA,WACA,OAAAjoB,KAAA4nB,eAEAhmB,cAAAuB,EAAA+kB,aAAwCvE,EAAA1J,EAAA,QAAAmN,IAAA,OAGxChU,EAAA+U,yBAAAlB,EAAA,OAAA9jB,EAAAwjB,MAAAQ,EAAAF,IAGAhkB,EAAAC,QAAAF,0BCjGA,IAAAyU,EAAAnY,EAAA,QAEAimB,EAAA9N,EAAA8N,mBAEA3O,EAAAtX,EAAA,QAEAwX,EAAAF,EAAAE,IA0BA,SAAAsR,EAAA/V,EAAAtR,EAAAsnB,GACA,IAWAC,EAXA7L,EAAApK,EAAAQ,cACAoR,EAAA5R,EAAAqK,aAAAD,GACA8L,EAAAC,EAAAvE,EAAAoE,GACAI,EAAAhM,EAAAzY,IACA0kB,EAAAzE,EAAAjgB,IACA7C,EAAAJ,EAAAK,aAAAsnB,GACAC,EAAA5nB,EAAAK,aAAAqnB,GACAG,EAAA,MAAAF,GAAA,WAAAA,EAAA,IACAhD,EAAA5O,EAAAzE,EAAAyK,WAAA,SAAA+L,GACA,OAAA9nB,EAAAK,aAAAynB,KAGAjD,EAAA7kB,EAAA8kB,mBAAA,wBAgBA,OAdAyC,GAAA/C,EAAAxkB,EAAA2kB,EAAA,OAIAA,EAAA,GAAAE,IAGA0C,GAAA/C,EAAAxkB,EAAA2kB,EAAA,OAIAA,EAAA,GAAAE,IAIAkD,iBAAApD,EACA6C,aACAG,eACAD,cACAH,YACAnnB,WACAwnB,UACAC,iBACAG,qBAAAhoB,EAAA8kB,mBAAA,yBAIA,SAAA2C,EAAAvE,EAAAoE,GACA,IAAAE,EAAA,EACA5O,EAAAsK,EAAAtb,MAAAoQ,YAkBA,MAhBA,UAAAsP,EACAE,EAAA5O,EAAA,GACG,QAAA0O,EACHE,EAAA5O,EAAA,GAIAA,EAAA,KACA4O,EAAA5O,EAAA,GAEAA,EAAA,OACA4O,EAAA5O,EAAA,IAKA4O,EAGA,SAAAS,EAAAC,EAAA5W,EAAAtR,EAAAwD,GACA,IAAA6N,EAAAW,IAEAkW,EAAAX,UACAlW,EAAArR,EAAAS,IAAAT,EAAA8kB,mBAAA,wBAAAthB,IAGA4hB,MAAA/T,KACAA,EAAA6W,EAAAV,YAGA,IAAAK,EAAAK,EAAAL,eACAM,KAGA,OAFAA,EAAAN,GAAA7nB,EAAAS,IAAAynB,EAAAN,QAAApkB,GACA2kB,EAAA,EAAAN,GAAAxW,EACAC,EAAAE,YAAA2W,GAGAhmB,EAAAklB,uBACAllB,EAAA8lB,0CCpHA,IAAA3pB,EAAAC,EAAA,QAEAA,EAAA,QAEAA,EAAA,QAEA,IAAA6pB,EAAA7pB,EAAA,QAEA8pB,EAAA9pB,EAAA,QAEA+pB,EAAA/pB,EAAA,SAoBAD,EAAAunB,eAAAuC,EAAA,WACA9pB,EAAAqnB,eAAA0C,GACA/pB,EAAAiqB,kBAAAD,EAAA,iCChCA/pB,EAAA,QAEAA,EAAA,8BCFA,IAAAiqB,EAAAjqB,EAAA,QAoBAiiB,EAAAgI,IAAA,sEACA,2IACAvmB,GACAue,gBAAA,SAAAiI,GACA,IAAApjB,EAAAmb,EAAAvhB,KAAAwpB,GAEA,GAAAxpB,KAAAypB,kBAAA,CACA,IAAAC,EAAA1pB,KAAAypB,oBACAC,IAAAtjB,EAAAsjB,YAGA,OAAAtjB,IAGAnD,EAAAC,QAAAF,4CClCA,IAAA8C,EAAA,WAA0B,IAAA6jB,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,kBAAAA,EAAA,eAAwDE,OAAOC,MAAA,GAAAC,eAAA,GAAAC,OAAA,MAAwCL,EAAA,YAAiBE,OAAOI,IAAA,GAAAC,KAAA,MAAoBP,EAAA,YAAiBE,OAAOM,QAAAX,EAAAY,GAAA,oBAAAC,mBAAA,kBAAAC,WAAA,eAAAC,WAAA,KAA0HZ,EAAA,iBAAAA,EAAA,YAAqCE,OAAOM,QAAAX,EAAAY,GAAA,yBAAAC,mBAAA,kBAAAC,WAAA,eAAAC,WAAA,KAA+HZ,EAAA,sBAAAA,EAAA,YAA0CE,OAAOM,QAAAX,EAAAY,GAAA,qBAAAC,mBAAA,kBAAAC,WAAA,eAAAC,WAAA,KAA2HZ,EAAA,kBAAAA,EAAA,YAAsCE,OAAOM,QAAAX,EAAAY,GAAA,oBAAAC,mBAAA,kBAAAC,WAAA,eAAAC,WAAA,KAA0HZ,EAAA,qBAAAA,EAAA,YAAyCE,OAAOI,IAAA,GAAAC,KAAA,MAAoBP,EAAA,YAAiBE,OAAOM,QAAAX,EAAAY,GAAA,uBAAAC,mBAAA,kBAAAC,WAAA,OAAAC,WAAA,KAAqHZ,EAAA,iCAC7kCa,KCDAC,EAAA,WAA0B,IAAAjB,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBe,aAAajoB,MAAA,OAAA0B,OAAA,SAAgC0lB,OAAQc,QAAAnB,EAAAoB,QACnKC,mDCUAC,GACA7Q,KAAA,eACA8Q,YACAC,UAAA,MAEApqB,KALA,WAMA,OACAgqB,KACA/H,SACA7Z,QAAA,QAEAZ,OAAA6iB,EAAA,KAAA7iB,MAAA8iB,QACAC,QACAvqB,MAAA,aAEA2F,OACA9G,KAAA,WACAikB,aAAA,EACA9iB,MAAA,4CAEA4F,OACA/G,KAAA,QACAujB,WACAoI,UAAA,cAGAC,SAEApR,KAAA,WACAxa,KAAA,MACAmB,MAAA,4BCzCoS0qB,EAAA,cCOpSC,EAAAC,OAAAC,EAAA,KAAAD,CACAF,EACAb,EACAI,GACA,EACA,KACA,KACA,MAIAU,EAAAZ,QAAAe,OAAA,eACA,IAAAC,EAAAJ,UCnBAK,EAAA,WAA0B,IAAApC,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBe,aAAajoB,MAAA,OAAA0B,OAAA,SAAgC0lB,OAAQc,QAAAnB,EAAAqC,QACnKC,KCUAC,cACAhB,YACAC,UAAA,MAEApqB,KAJA,WAKA,OACAirB,KACAzF,gBAAA,cACAvD,SACA7Z,QAAA,OACAoiB,UAAA,6BAEAhjB,OACA6iB,EAAA,KAAA7iB,MAAA4jB,QACAf,EAAA,KAAA7iB,MAAA8iB,OACAD,EAAA,KAAA7iB,MAAA6jB,KACAhB,EAAA,KAAA7iB,MAAA8jB,QACAjB,EAAA,KAAA7iB,MAAA+jB,SAEAd,SAEApR,KAAA,gBACAxa,KAAA,MACA2sB,QAAA,aACAC,mBAAA,EACAzrB,OAEAqR,MAAA,KACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAxZ,OACA6rB,QACA9rB,MAAA,EACA8B,SAAA,UAEA/B,UACAC,MAAA,EACA+rB,WACAnJ,SAAA,KACAoJ,WAAA,UAIAnsB,WACAisB,QACA9rB,MAAA,WCzEySisB,EAAA,ECOzSC,EAAAlB,OAAAC,EAAA,KAAAD,CACAiB,EACAb,EACAE,GACA,EACA,KACA,KACA,MAIAY,EAAA/B,QAAAe,OAAA,oBACA,IAAAiB,EAAAD,UCnBAE,EAAA,WAA0B,IAAApD,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBe,aAAajoB,MAAA,OAAA0B,OAAA,SAAgC0lB,OAAQc,QAAAnB,EAAAqD,SACnKC,KCUAC,cACA9S,KAAA,eACA8Q,YACAC,UAAA,MAEApqB,KALA,WAMA,OACAisB,MACAhK,SACA7Z,QAAA,QAEAZ,OAAA6iB,EAAA,KAAA7iB,MAAA8iB,OAAAD,EAAA,KAAA7iB,MAAA4jB,SACAzlB,OACA9G,KAAA,WACAikB,aAAA,EACA9iB,MAAA,4CAEA4F,OACA/G,KAAA,QACAujB,WACAoI,UAAA,cAGAD,QACAvqB,MAAA,wBAEAyqB,SAEApR,KAAA,WACAxa,KAAA,OACAmB,MAAA,sBACAosB,WACApsB,OAAAnB,KAAA,MAAAwa,KAAA,QAAAxa,KAAA,MAAAwa,KAAA,SAEAgT,UACArsB,OAAAnB,KAAA,UAAAwa,KAAA,eAIAA,KAAA,WACAxa,KAAA,OACAmB,MAAA,gBACAosB,WACApsB,OAAAqZ,KAAA,MAAAhI,OAAA,EAAA1L,MAAA,EAAAC,OAAA,OAEAymB,UACArsB,OAAAnB,KAAA,UAAAwa,KAAA,oBCzDqSiT,EAAA,ECOrSC,EAAA3B,OAAAC,EAAA,KAAAD,CACA0B,EACAN,EACAE,GACA,EACA,KACA,KACA,MAIAK,EAAAxC,QAAAe,OAAA,gBACA,IAAA0B,EAAAD,UCnBAE,EAAA,WAA0B,IAAA7D,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBe,aAAavmB,OAAA,SAAiB0lB,OAAQc,QAAAnB,EAAAqC,QACpJyB,KCUAC,GACAxC,YACAC,UAAA,MAEApqB,KAJA,WAKA,OACAirB,KACAzF,gBAAA,cACAvD,SACA7Z,QAAA,OACAoiB,UAAA,6BAEAiB,mBAAA,EACAjkB,OACA6iB,EAAA,KAAA7iB,MAAA4jB,QACAf,EAAA,KAAA7iB,MAAA8iB,OACAD,EAAA,KAAA7iB,MAAA+jB,SAEAd,SAEApR,KAAA,gBACAxa,KAAA,MACA2sB,OAAA,MACAoB,QAAA,aACA5sB,OAEAqR,MAAA,IACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAhI,MAAA,IACAgI,KAAA,cAGAxZ,OACA6rB,QACAC,WACAnkB,MAAA,sBAIA1F,WACA4pB,QACAmB,YAAA,uBAGAC,cAAA,QACAnf,gBAAA,aACAof,eAAA,SAAAvpB,GACA,UAAAO,KAAAipB,gBChEoSC,EAAA,ECOpSC,EAAAtC,OAAAC,EAAA,KAAAD,CACAqC,EACAR,EACAC,GACA,EACA,KACA,KACA,MAIAQ,EAAAnD,QAAAe,OAAA,eACA,IAAAqC,EAAAD,UCnBAE,EAAA,WAA0B,IAAAxE,EAAA3pB,KAAa4pB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBe,aAAajoB,MAAA,OAAA0B,OAAA,SAAgC0lB,OAAQc,QAAAnB,EAAAyE,WACnKC,KCUAC,cACApD,YACAC,UAAA,MAEApqB,KAJA,WAKA,OACAqtB,QACApL,SACA7Z,QAAA,QAEAmiB,QACAvqB,MACA,YACA,YACA,YACA,YACA,cAGAwtB,YAAA,EACAhmB,OACA6iB,EAAA,KAAA7iB,MAAA4jB,QACAf,EAAA,KAAA7iB,MAAA8iB,OACAD,EAAA,KAAA7iB,MAAA8jB,QACAjB,EAAA,KAAA7iB,MAAA6jB,KACAhB,EAAA,KAAA7iB,MAAA+jB,SAEAd,SAEApR,KAAA,QACAxa,KAAA,SACAoC,KAAA,MACAC,IAAA,GAEAE,OAAA,GACAS,MAAA,MAEAoC,IAAA,EACAD,IAAA,IACA3C,QAAA,KACAC,QAAA,OACAC,KAAA,aACAC,IAAA,EACA3B,OACA6rB,QACA9rB,MAAA,EACA8B,SAAA,UAEA/B,UACAgsB,WACAnJ,SAAA,MAIA/iB,WACAisB,QACA/pB,OAAA,GACAC,WACAC,MAAA,EACAhD,KAAA,WAIAiD,WACA4pB,QACA3pB,YAAA,OACAC,YAAA,IAGAhC,OACAqR,MAAA,GAAAgI,KAAA,cACAhI,MAAA,GAAAgI,KAAA,cACAhI,MAAA,GAAAgI,KAAA,cACAhI,MAAA,GAAAgI,KAAA,cACAhI,MAAA,IAAAgI,KAAA,qBCrFuSoU,EAAA,ECOvSC,EAAA9C,OAAAC,EAAA,KAAAD,CACA6C,EACAL,EACAE,GACA,EACA,KACA,KACA,MAIAI,EAAA3D,QAAAe,OAAA,kBACA,IAAA6C,EAAAD,UCyCAE,GACAzD,YACAY,WACAoC,WACApB,gBACAS,YACAmB,gBClE0RE,EAAA,ECO1RC,EAAAlD,OAAAC,EAAA,KAAAD,CACAiD,EACA9oB,EACA6kB,GACA,EACA,KACA,KACA,MAIAkE,EAAA/D,QAAAe,OAAA,iBACAiD,EAAA,WAAAD,iCCnBA,IAAAE,EAAAzvB,EAAA,QAEA0vB,EAAAD,EAAAC,iBA0BA,SAAA/nB,EAAAlG,EAAAD,GACA,IAAAmuB,EAAAluB,EAAAK,aAAA,qBACAwO,EAAAqf,EAAAvsB,OAEA,OAAAkN,EACA,OAAAof,EAAAjuB,EAAAD,EAAAmuB,EAAA,IACG,GAAArf,EAAA,CAGH,IAFA,IAAAsf,KAEAvf,EAAA,EAAmBA,EAAAsf,EAAAvsB,OAAsBiN,IAAA,CACzC,IAAAH,EAAAwf,EAAAjuB,EAAAD,EAAAmuB,EAAAtf,IACAuf,EAAAvtB,KAAA6N,GAGA,OAAA0f,EAAAC,KAAA,MAIAjsB,EAAA+D,wCC9CA,IAAA9D,EAAA7D,EAAA,QAEA8vB,EAAA9vB,EAAA,QAoBA,SAAAgY,EAAA8C,GACAgV,EAAA/nB,KAAArH,KAAAoa,GAGA9C,EAAA9P,WACA6nB,YAAA/X,EACA1X,KAAA,cAMAkd,YAAA,SAOAjK,YAAA,WACA,OAAA7S,KAAAsvB,eAAA,eAAAtvB,KAAAsvB,eAAA,YAAAtvB,KAAAga,QAAA,MAQAwB,aAAA,SAAAC,GACA,IAAA8T,EAAAvvB,KAAAga,QAAA,KACAwV,EAAAxvB,KAAAga,QAAA,KACA,OAAAuV,EAAAE,QAAAF,EAAArW,aAAAuC,EAAA,MAAA+T,EAAAC,QAAAD,EAAAtW,aAAAuC,EAAA,MAQAiU,YAAA,SAAA3uB,GACA,OAAAf,KAAAga,QAAA,KAAA0V,YAAA3uB,EAAA,KAAAf,KAAAga,QAAA,KAAA0V,YAAA3uB,EAAA,KAQAwR,YAAA,SAAAxR,EAAA4uB,EAAAC,GACA,IAAAlpB,EAAA1G,KAAAga,QAAA,KACArT,EAAA3G,KAAAga,QAAA,KAIA,OAHA4V,QACAA,EAAA,GAAAlpB,EAAA9B,cAAA8B,EAAA7B,YAAA9D,EAAA,KACA6uB,EAAA,GAAAjpB,EAAA/B,cAAA+B,EAAA9B,YAAA9D,EAAA,KACA6uB,GAQApd,UAAA,SAAAzR,EAAA6uB,GACA,IAAAC,EAAA7vB,KAAAga,QAAA,KAAArR,MACAmnB,EAAA9vB,KAAAga,QAAA,KAAArR,MACAonB,EAAAF,EAAA9W,YACAiX,EAAAF,EAAA/W,YACA3U,EAAAyrB,EAAAI,MAAAlvB,EAAA,IACAsD,EAAAyrB,EAAAG,MAAAlvB,EAAA,IAIA,OAHA6uB,QACAA,EAAA,GAAA9qB,KAAAE,IAAAF,KAAAC,IAAAD,KAAAE,IAAA+qB,EAAA,GAAAA,EAAA,IAAA3rB,GAAAU,KAAAC,IAAAgrB,EAAA,GAAAA,EAAA,KACAH,EAAA,GAAA9qB,KAAAE,IAAAF,KAAAC,IAAAD,KAAAE,IAAAgrB,EAAA,GAAAA,EAAA,IAAA3rB,GAAAS,KAAAC,IAAAirB,EAAA,GAAAA,EAAA,KACAJ,GAQA3U,YAAA,SAAAQ,EAAAmU,GACA,IAAAlpB,EAAA1G,KAAAga,QAAA,KACArT,EAAA3G,KAAAga,QAAA,KAIA,OAHA4V,QACAA,EAAA,GAAAlpB,EAAAwU,YAAAxU,EAAAwS,aAAAuC,EAAA,KACAmU,EAAA,GAAAjpB,EAAAuU,YAAAvU,EAAAuS,aAAAuC,EAAA,KACAmU,GAOAlT,aAAA,SAAAhZ,GACA,OAAA1D,KAAAga,QAAA,MAAAtW,EAAAM,IAAA,WAGAb,EAAAiK,SAAAkK,EAAA8X,GACA,IAAApsB,EAAAsU,EACArU,EAAAC,QAAAF,wBCzHA,IAAAG,EAAA7D,EAAA,QAEA8e,EAAA9e,EAAA,QAoBA2Q,EAAA9M,EAAA8M,KACA0W,EAAAxjB,EAAAwjB,MAGA,SAAAuJ,EAAA5vB,EAAA0O,GACA,IAAAmhB,GAcAC,YACAC,gBAAA,EAMAC,oBACAC,gBAKA,OAHAC,EAAAL,EAAA7vB,EAAA0O,GAEAmhB,EAAAE,gBAAAI,EAAAN,EAAA7vB,GACA6vB,EAGA,SAAAK,EAAAL,EAAA7vB,EAAA0O,GACA,IAAA0hB,EAAApwB,EAAAqwB,aAAA,WACAC,EAAAtwB,EAAAqwB,aAAA,eAEAE,EAAAD,EAAApvB,IAAA,eACAsvB,KAEA7gB,EAAAjB,EAAA+hB,uBAAA,SAAA1e,GAEA,GAAAA,EAAA8G,mBAAA,CAIA,IAAA6X,EAAAC,EAAA5e,EAAA6F,OACAgZ,EAAAf,EAAAG,iBAAAU,MACAb,EAAAI,YAAAS,GAAA3e,EAGA,IAAA8e,EAAA9e,EAAA6F,MACAkZ,EAAAD,EAAAhmB,SAAA,UAAAulB,GAIA,GAHAzgB,EAAAoC,EAAAgI,UAAAsM,EAAA0K,GAAA,SAGAhf,EAAAkK,gBAAAmU,GAEAU,EAAA5vB,IAAA,SAGA,IAAA8vB,EAAA,SAAAF,EAAA5vB,IAAA,WACA+vB,EAAA,UAAAH,EAAA5vB,IAAA,oBACAgwB,EAAAnf,EAAAkK,eAAA6U,EAAA5vB,IAAA,sBAEA8vB,GAAAC,IACAthB,EAAAuhB,EAAAhV,SAAAmK,EAAA0K,GAAAE,GAAA,QAAAD,IAGAC,GACAthB,EAAAuhB,EAAAhZ,UAAAmO,EAAA0K,EAAA,cAMA,SAAAA,EAAAI,EAAAC,EAAAhuB,GACA,IAAAma,EAAAna,EAAAwU,MAAA/M,SAAA,cAAAylB,GACAe,EAAA9T,EAAArc,IAAA,QAEA,GAAAmwB,IAAA,SAAAA,GAAAF,GAAAG,EAAA/T,IAAA,CAIA,MAAA6T,IACAA,EAAA7T,EAAArc,IAAA,mBAGAqc,EAAA4T,EAAAI,EAAAnuB,EAAA0tB,EAAAR,EAAAtwB,EAAAmxB,EAAAC,GAAA7T,EACA,IAAAiU,EAAAjU,EAAArc,IAAA,QACAiZ,EAAAwW,EAAAvtB,EAAAwU,OACA6Z,EAAAL,GAAAI,GAAA,aAAApuB,EAAA9D,KAEAoyB,EAAA7B,EAAAC,SAAA3V,IACAA,MACA/W,OACA2O,WACAwL,mBACA6T,iBACAK,gBACAD,OACAG,UAAAL,EAAA/T,GACAqU,iBAEAhB,EAAAzW,GAAAuX,EACA7B,EAAAE,gBAAA0B,EACA,IAAAI,EAAAC,EAAAvB,EAAAntB,GAEA,SAAAyuB,EAAA,CACA,IAAAE,EAAAvB,EAAAqB,KAAArB,EAAAqB,IACA/B,cAEAiC,EAAAjC,SAAA3V,GAAAuX,EACAK,EAAAC,OAAAzB,EAAAsB,GAAAG,OACAN,EAAAK,iBAMA,SAAAR,EAAAnuB,EAAA0tB,EAAAR,EAAAtwB,EAAAmxB,EAAAC,GACA,IAAAa,EAAAnB,EAAAjmB,SAAA,eACAqnB,KACAviB,GAAA,4HAAAwiB,GACAD,EAAAC,GAAAtvB,EAAAuvB,MAAAH,EAAA/wB,IAAAixB,MAKAD,EAAAV,KAAA,aAAApuB,EAAA9D,QAAA8xB,EAGA,UAAAa,EAAA/wB,IAAA,UACAgxB,EAAA5yB,KAAA,QAGA,IAAA+yB,EAAAH,EAAA5xB,QAAA4xB,EAAA5xB,UAIA,GAFA,MAAA+xB,EAAAhyB,OAAAgyB,EAAAhyB,MAAA,GAEA,UAAA8wB,EAAA,CAEA,IAAAmB,EAAAL,EAAA/wB,IAAA,cAIA,GAHAmxB,EAAAhyB,KAAA,MAAAiyB,MAGAlB,EAAA,CACA,IAAAmB,EAAAL,EAAA7vB,UAAA4vB,EAAA/wB,IAAA,cACAqxB,GAAA1vB,EAAAkD,SAAAssB,EAAAE,EAAAnG,YAIA,OAAAhpB,EAAAwU,MAAA/M,SAAA,kBAAAiT,EAAAoU,EAAA5B,EAAAtwB,IAGA,SAAAmwB,EAAAN,EAAA7vB,GAEAA,EAAA6b,WAAA,SAAA1S,GAEA,IAAA4I,EAAA5I,EAAAhG,iBACAqvB,EAAArpB,EAAAjI,IAAA,sBACAuxB,EAAAtpB,EAAAjI,IAAA,mBAEA6Q,GAAA,SAAAygB,IAAA,IAAAA,GAAA,SAAAA,IAAA,IAAAC,IAAA,IAAAtpB,EAAAjI,IAAA,wBAIAyO,EAAAkgB,EAAAG,iBAAAW,EAAA5e,EAAA6F,QAAA,SAAA8Z,GACA,IAAAtuB,EAAAsuB,EAAAtuB,KAEA2O,EAAA2H,QAAAtW,EAAAM,OAAAN,IACAsuB,EAAAE,aAAAvwB,KAAA8H,GACA,MAAAuoB,EAAAgB,kBAAAhB,EAAAgB,gBAAA,GACAhB,EAAAgB,iBAAAvpB,EAAAzI,UAAA6O,YAGG7P,MAkBH,SAAAoyB,EAAAvB,EAAAntB,GAIA,IAHA,IAAAJ,EAAAI,EAAAwU,MACAlU,EAAAN,EAAAM,IAEA2L,EAAA,EAAiBA,EAAAkhB,EAAAnuB,OAAwBiN,IAAA,CACzC,IAAAsjB,EAAApC,EAAAlhB,OAEA,GAAAujB,EAAAD,EAAAjvB,EAAA,UAAAV,EAAA0Q,KAAAkf,EAAAD,EAAAjvB,EAAA,aAAAV,EAAAiY,iBAAA2X,EAAAD,EAAAjvB,EAAA,YAAAV,EAAA8W,MACA,OAAAzK,GAKA,SAAAujB,EAAAC,EAAAC,GACA,cAAAD,GAAAhwB,EAAAkwB,QAAAF,IAAAhwB,EAAA4T,QAAAoc,EAAAC,IAAA,GAAAD,IAAAC,EAGA,SAAAhW,EAAA9Z,GACA,IAAA0uB,EAAAsB,EAAAhwB,GAEA,GAAA0uB,EAAA,CAIA,IAAAnU,EAAAmU,EAAAnU,iBACAlV,EAAAqpB,EAAAtuB,KAAAiF,MACA7I,EAAA+d,EAAA/d,OACAyzB,EAAA1V,EAAArc,IAAA,UACA4Q,EAAAyL,EAAArc,IAAA,SAEA,MAAA4Q,IACAA,EAAAzJ,EAAAsnB,MAAA7d,IAGA,IAAA6f,EAAAL,EAAA/T,GAGA,MAAA0V,IACAzzB,EAAAyzB,OAAAtB,EAAA,eAGA,IAAAtY,EAAAhR,EAAAoQ,YAAAlR,QACA8R,EAAA,GAAAA,EAAA,IAAAA,EAAA9H,WAGA,MAAAO,GAEAA,EAAAuH,EAAA,MAEAvH,EAAAuH,EAAA,IAGAvH,EAAAuH,EAAA,KACAvH,EAAAuH,EAAA,IAGA7Z,EAAAsS,QAEA6f,IACAnyB,EAAAyzB,OAAAvB,EAAAtuB,KAAAiF,MAAA6qB,UAAA,gBAIA,SAAAF,EAAAhwB,GACA,IAAAgtB,GAAAhtB,EAAAhD,QAAAqwB,aAAA,oBAA6EL,iBAC7E,OAAAA,KAAAF,SAAAa,EAAA3tB,IAGA,SAAAwa,EAAAxa,GACA,IAAA0uB,EAAAsB,EAAAhwB,GACA,OAAA0uB,KAAAnU,iBAGA,SAAA+T,EAAA/T,GACA,QAAAA,EAAArc,IAAA,eAQA,SAAAyvB,EAAA/Y,GACA,OAAAA,EAAAtY,KAAA,KAAAsY,EAAAlE,GAGA9Q,EAAAgtB,UACAhtB,EAAAka,WACAla,EAAAowB,cACApwB,EAAA4a,sBACA5a,EAAA+tB,gCCpTA,IAAA9tB,EAAA7D,EAAA,QA0BA,SAAAm0B,EAAAzvB,GACA,OAAAhE,KAAA0zB,MAAA1vB,GAQA,IAAAorB,EAAA,SAAAhV,GACApa,KAAA0zB,SACA1zB,KAAA2zB,YAKA3zB,KAAAoa,QAAA,IAGAgV,EAAA5nB,WACA6nB,YAAAD,EACAxvB,KAAA,YAOAoa,QAAA,SAAAhW,GACA,OAAAhE,KAAA0zB,MAAA1vB,IAOAqW,QAAA,WACA,OAAAlX,EAAA2T,IAAA9W,KAAA2zB,SAAAF,EAAAzzB,OAMAsvB,eAAA,SAAAsE,GAEA,OADAA,IAAAC,cACA1wB,EAAA2wB,OAAA9zB,KAAAqa,UAAA,SAAA3W,GACA,OAAAA,EAAAiF,MAAA/I,OAAAg0B,KAQA5X,QAAA,SAAAtY,GACA,IAAAM,EAAAN,EAAAM,IACAhE,KAAA0zB,MAAA1vB,GAAAN,EAEA1D,KAAA2zB,SAAAhyB,KAAAqC,IAQAa,YAAA,SAAA2K,GACA,OAAAxP,KAAA+zB,kBAAAvkB,EAAA,gBAQA0L,YAAA,SAAA1L,GACA,OAAAxP,KAAA+zB,kBAAAvkB,EAAA,gBAEAukB,kBAAA,SAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAl0B,KAAA2zB,SACAQ,EAAAH,aAAApsB,YAEA+H,EAAA,EAAmBA,EAAAukB,EAAAxxB,OAAoBiN,IAAA,CACvC,IAAA3L,EAAAkwB,EAAAvkB,GACAjM,EAAA1D,KAAA0zB,MAAA1vB,GACAmwB,EAAAnwB,GAAAN,EAAAuwB,GAAAD,EAAAhwB,IAGA,OAAAmwB,IAGA,IAAAnxB,EAAAosB,EACAnsB,EAAAC,QAAAF,wBCtHA,IAAAsb,EAAAhf,EAAA,QAEA80B,EAAA90B,EAAA,QAEA+0B,EAAA/0B,EAAA,QAqBAg1B,EAAAF,EAAApvB,IACAuvB,EAAAH,EAAArvB,IACAyvB,EAAAJ,EAAAI,YACAC,EAAAL,EAAAM,KAEAC,KACAC,KACAC,KAEA,SAAAC,EAAAC,GACA,OAAA5O,MAAA4O,EAAA,KAAA5O,MAAA4O,EAAA,IAGA,SAAAC,EAAAlT,EAAArR,EAAAsB,EAAAkjB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlnB,EAAAC,EAAAI,GAoBA,eAAAJ,KAGAknB,EAAAC,MAAAv1B,KAAAC,WAFAu1B,EAAAD,MAAAv1B,KAAAC,WA8CA,SAAAq1B,EAAAxT,EAAArR,EAAAsB,EAAAkjB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlnB,EAAAC,EAAAI,GAIA,IAHA,IAAAinB,EAAA,EACAlxB,EAAAwN,EAEA2jB,EAAA,EAAiBA,EAAAT,EAAYS,IAAA,CAC7B,IAAAX,EAAAtkB,EAAAlM,GAEA,GAAAA,GAAA2wB,GAAA3wB,EAAA,EACA,MAGA,GAAAuwB,EAAAC,GAAA,CACA,GAAAvmB,EAAA,CACAjK,GAAA4wB,EACA,SAGA,MAGA,GAAA5wB,IAAAwN,EACA+P,EAAAqT,EAAA,qBAAAJ,EAAA,GAAAA,EAAA,SAEA,GAAA5mB,EAAA,GACA,IAAAwnB,EAAAllB,EAAAglB,GACAzxB,EAAA,MAAAoK,EAAA,IAEAwnB,GAAAb,EAAA/wB,GAAA2xB,EAAA3xB,IAAAmK,EACAsmB,EAAAG,EAAAe,GACAf,EAAA5wB,GAAA2xB,EAAA3xB,GAAA4xB,EACAnB,EAAAI,EAAAE,GACAF,EAAA7wB,GAAA+wB,EAAA/wB,GAAA4xB,EACA9T,EAAA+T,cAAAjB,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,SAEAjT,EAAAM,OAAA2S,EAAA,GAAAA,EAAA,IAIAU,EAAAlxB,EACAA,GAAA4wB,EAGA,OAAAO,EASA,SAAAF,EAAA1T,EAAArR,EAAAsB,EAAAkjB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlnB,EAAAC,EAAAI,GAIA,IAHA,IAAAinB,EAAA,EACAlxB,EAAAwN,EAEA2jB,EAAA,EAAiBA,EAAAT,EAAYS,IAAA,CAC7B,IAAAX,EAAAtkB,EAAAlM,GAEA,GAAAA,GAAA2wB,GAAA3wB,EAAA,EACA,MAGA,GAAAuwB,EAAAC,GAAA,CACA,GAAAvmB,EAAA,CACAjK,GAAA4wB,EACA,SAGA,MAGA,GAAA5wB,IAAAwN,EACA+P,EAAAqT,EAAA,qBAAAJ,EAAA,GAAAA,EAAA,IACAN,EAAAG,EAAAG,QAEA,GAAA5mB,EAAA,GACA,IAAA2D,EAAAvN,EAAA4wB,EACAW,EAAArlB,EAAAqB,GAEA,GAAAtD,EAEA,MAAAsnB,GAAAhB,EAAArkB,EAAAqB,IACAA,GAAAqjB,EACAW,EAAArlB,EAAAqB,GAIA,IAAAikB,EAAA,GACAJ,EAAAllB,EAAAglB,GACAK,EAAArlB,EAAAqB,GAEA,IAAAgkB,GAAAhB,EAAAgB,GACArB,EAAAI,EAAAE,OACS,CAOT,IAAAiB,EACAC,EAEA,GARAnB,EAAAgB,KAAAtnB,IACAsnB,EAAAf,GAGAX,EAAA8B,IAAAvB,EAAAmB,EAAAH,GAIA,MAAAvnB,GAAA,MAAAA,EAAA,CACA,IAAApK,EAAA,MAAAoK,EAAA,IACA4nB,EAAAlxB,KAAA6c,IAAAoT,EAAA/wB,GAAA2xB,EAAA3xB,IACAiyB,EAAAnxB,KAAA6c,IAAAoT,EAAA/wB,GAAA8xB,EAAA9xB,SAEAgyB,EAAA5B,EAAA+B,KAAApB,EAAAY,GACAM,EAAA7B,EAAA+B,KAAApB,EAAAe,GAIAC,EAAAE,KAAAD,GACAxB,EAAAK,EAAAE,EAAAJ,GAAAxmB,GAAA,EAAA4nB,IAIAzB,EAAAM,IAAAS,GACAd,EAAAK,IAAAQ,GACAd,EAAAO,IAAAQ,GACAd,EAAAM,IAAAO,GACAtT,EAAA+T,cAAAjB,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,IAEAP,EAAAI,EAAAG,EAAAJ,EAAAxmB,EAAA4nB,QAEAjU,EAAAM,OAAA2S,EAAA,GAAAA,EAAA,IAIAU,EAAAlxB,EACAA,GAAA4wB,EAGA,OAAAO,EAGA,SAAAU,EAAA3lB,EAAA4lB,GACA,IAAAC,GAAAznB,SACA0nB,IAAA1nB,UAEA,GAAAwnB,EACA,QAAA1mB,EAAA,EAAmBA,EAAAc,EAAA/N,OAAmBiN,IAAA,CACtC,IAAA2C,EAAA7B,EAAAd,GAEA2C,EAAA,GAAAgkB,EAAA,KACAA,EAAA,GAAAhkB,EAAA,IAGAA,EAAA,GAAAgkB,EAAA,KACAA,EAAA,GAAAhkB,EAAA,IAGAA,EAAA,GAAAikB,EAAA,KACAA,EAAA,GAAAjkB,EAAA,IAGAA,EAAA,GAAAikB,EAAA,KACAA,EAAA,GAAAjkB,EAAA,IAKA,OACAtN,IAAAqxB,EAAAC,EAAAC,EACAxxB,IAAAsxB,EAAAE,EAAAD,GAIA,IAAA7hB,EAAA6J,EAAAjT,QACAzL,KAAA,cACAuG,OACAsK,UACAtC,OAAA,EACAkoB,kBAAA,EACAjoB,eAAA,KACAI,cAAA,GAEApI,OACAE,KAAA,KACAsP,OAAA,QAEA4gB,MAAAnC,EAAA/V,EAAA9W,UAAAgvB,OACA3U,UAAA,SAAAC,EAAA3b,GACA,IAAAsK,EAAAtK,EAAAsK,OACAd,EAAA,EACAC,EAAAa,EAAA/N,OACAytB,EAAAiG,EAAA3lB,EAAAtK,EAAAkwB,kBAEA,GAAAlwB,EAAAqI,aAAA,CAEA,KAAYoB,EAAA,EAASA,IACrB,IAAAklB,EAAArkB,EAAAb,EAAA,IACA,MAIA,KAAYD,EAAAC,EAASD,IACrB,IAAAmlB,EAAArkB,EAAAd,IACA,MAKA,MAAAA,EAAAC,EACAD,GAAAqlB,EAAAlT,EAAArR,EAAAd,EAAAC,IAAA,EAAAugB,EAAAnrB,IAAAmrB,EAAAprB,IAAAoB,EAAAgI,OAAAhI,EAAAiI,eAAAjI,EAAAqI,cAAA,KAIAgG,EAAA8J,EAAAjT,QACAzL,KAAA,aACAuG,OACAsK,UAEAgmB,mBACAtoB,OAAA,EACAuoB,gBAAA,EACAL,kBAAA,EACAjoB,eAAA,KACAI,cAAA,GAEAgoB,MAAAnC,EAAA/V,EAAA9W,UAAAgvB,OACA3U,UAAA,SAAAC,EAAA3b,GACA,IAAAsK,EAAAtK,EAAAsK,OACAgmB,EAAAtwB,EAAAswB,gBACA9mB,EAAA,EACAC,EAAAa,EAAA/N,OACA0L,EAAAjI,EAAAiI,eACAuoB,EAAAP,EAAA3lB,EAAAtK,EAAAkwB,kBACAO,EAAAR,EAAAK,EAAAtwB,EAAAkwB,kBAEA,GAAAlwB,EAAAqI,aAAA,CAEA,KAAYoB,EAAA,EAASA,IACrB,IAAAklB,EAAArkB,EAAAb,EAAA,IACA,MAIA,KAAYD,EAAAC,EAASD,IACrB,IAAAmlB,EAAArkB,EAAAd,IACA,MAKA,MAAAA,EAAAC,EAAA,CACA,IAAA8lB,EAAAV,EAAAlT,EAAArR,EAAAd,EAAAC,IAAA,EAAA+mB,EAAA3xB,IAAA2xB,EAAA5xB,IAAAoB,EAAAgI,OAAAC,EAAAjI,EAAAqI,cACAwmB,EAAAlT,EAAA2U,EAAA9mB,EAAA+lB,EAAA,EAAAA,EAAA9lB,GAAA,EAAAgnB,EAAA5xB,IAAA4xB,EAAA7xB,IAAAoB,EAAAuwB,gBAAAtoB,EAAAjI,EAAAqI,cACAmB,GAAA+lB,EAAA,EACA5T,EAAA+U,gBAIA3zB,EAAAuR,WACAvR,EAAAsR,gCCxWA,IAAA5O,EAAAtG,EAAA,QAEA0H,EAAA1H,EAAA,SAEA2H,EAAAD,EAAAC,gBAoBA,SAAAkX,EAAA2Y,EAAAvqB,EAAAtB,EAAA1C,EAAAkB,EAAA3I,EAAA0gB,GACA,IAAA5W,EAAAK,EAAAE,SAAA,SACAN,EAAAI,EAAAE,SAAA,kBACAvF,EAAAoG,cAAA8qB,EAAAvqB,EAAA3B,EAAAC,GACAoB,aAAAxC,EACAyC,eAAApL,EACAqL,YAAAlF,EAAAwC,EAAAzI,UAAAF,GACAsL,YAAA,EACAC,UAAA9D,IAEAwuB,EAAAD,GACAC,EAAAxqB,GAGA,SAAAwqB,EAAA3wB,EAAAob,GACA,YAAApb,EAAA4wB,eACA5wB,EAAA4wB,aAAAxV,GAIAte,EAAAib,iCC5CA,IAAAhb,EAAA7D,EAAA,QAEA23B,EAAA33B,EAAA,QA+BAiY,EAAA,SAAAvT,EAAA2E,EAAAuuB,EAAAjd,EAAAxX,GACAw0B,EAAA5vB,KAAArH,KAAAgE,EAAA2E,EAAAuuB,GAUAl3B,KAAAJ,KAAAqa,GAAA,QASAja,KAAAyC,YAAA,UAGA8U,EAAA/P,WACA6nB,YAAA9X,EAKAzD,MAAA,EAQAlQ,gBAAA,KAMAsU,MAAA,KACApF,aAAA,WACA,IAAArQ,EAAAzC,KAAAyC,SACA,cAAAA,GAAA,WAAAA,GAWA00B,gBAAA,SAAAC,GACA,IAAAC,EAAAr3B,KAAA+Y,YAIA,OAHAse,EAAA,GAAAr3B,KAAA4E,cAAAyyB,EAAA,IACAA,EAAA,GAAAr3B,KAAA4E,cAAAyyB,EAAA,IACAD,GAAAC,EAAA,GAAAA,EAAA,IAAAA,EAAAxlB,UACAwlB,GAEA3a,aAAA,WACA1c,KAAAwD,KAAAkZ,gBAMAzB,YAAA,SAAAQ,EAAA6b,GACA,OAAAt3B,KAAAkb,YAAAlb,KAAAkZ,aAAAuC,EAAA,MAAAzb,KAAAgE,IAAA,MAAAszB,IASApe,aAAA,KAQAtU,cAAA,MAEAzB,EAAAiK,SAAAmK,EAAA0f,GACA,IAAAj0B,EAAAuU,EACAtU,EAAAC,QAAAF,wBC9HA,IAAA3D,EAAAC,EAAA,QAEAA,EAAA,SAEAA,EAAA,QAEA,IAAAi4B,EAAAj4B,EAAA,QAEAk4B,EAAAl4B,EAAA,QAEAm4B,EAAAn4B,EAAA,QAEAA,EAAA,QAqBAD,EAAAunB,eAAA2Q,EAAA,yBACAl4B,EAAAqnB,eAAA8Q,EAAA,SAEAn4B,EAAAiqB,kBAAAjqB,EAAAq4B,SAAAC,UAAAC,UAAAH,EAAA,+BCpCA,IAAAvZ,EAAA5e,EAAA,QAEA8oB,EAAAlK,EAAAkK,qBACAY,EAAA9K,EAAA8K,kBA4CA,SAAA6O,EAAA9hB,EAAA+hB,GACA,IAAAC,KAkBA,OAjBAD,EAAA7hB,KAAAF,GAAA9P,IAAA,SAAA1B,GACAwzB,EAAAp2B,MACAq2B,IAAA,IACAzzB,UAEG6R,OAAA,SAAAC,EAAAC,GACHyhB,EAAAp2B,MACAq2B,IAAA,IACAzzB,IAAA+R,EACA2hB,KAAA5hB,MAEGI,OAAA,SAAAlS,GACHwzB,EAAAp2B,MACAq2B,IAAA,IACAzzB,UAEGmS,UACHqhB,EAGA,SAAA/0B,EAAA+S,EAAA+hB,EAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,IAAAtiB,EAAA4hB,EAAA9hB,EAAA+hB,GAMAU,KACAC,KAEAC,KACAC,KACApF,KACAqF,KACAC,KACAC,EAAA1Q,EAAAgQ,EAAAN,EAAAQ,GACAS,EAAA3Q,EAAAiQ,EAAAtiB,EAAAwiB,GAEA5oB,EAAA,EAAiBA,EAAAsG,EAAAvT,OAAiBiN,IAAA,CAClC,IAAAqpB,EAAA/iB,EAAAtG,GACAspB,GAAA,EAGA,OAAAD,EAAAhB,KACA,QACA,IAAAkB,EAAAnjB,EAAAvF,cAAAwoB,EAAAz0B,KACA40B,EAAArB,EAAAtnB,cAAAwoB,EAAAf,OAEA9R,MAAA+S,EAAA,KAAA/S,MAAA+S,EAAA,OACAA,EAAAC,EAAAtxB,SAGA2wB,EAAA72B,KAAAu3B,GACAT,EAAA92B,KAAAw3B,GACAT,EAAA/2B,KAAAu2B,EAAAc,EAAAz0B,MACAo0B,EAAAh3B,KAAAw2B,EAAAa,EAAAf,OACAY,EAAAl3B,KAAAm2B,EAAAsB,YAAAJ,EAAAf,OACA,MAEA,QACA,IAAA1zB,EAAAy0B,EAAAz0B,IACAi0B,EAAA72B,KAAAy2B,EAAA7lB,aAAAulB,EAAAt2B,IAAAs3B,EAAAhQ,iBAAA,GAAAvkB,GAAAuzB,EAAAt2B,IAAAs3B,EAAAhQ,iBAAA,GAAAvkB,MACAk0B,EAAA92B,KAAAm2B,EAAAtnB,cAAAjM,GAAAsD,SACA6wB,EAAA/2B,KAAAqnB,EAAA8P,EAAAV,EAAAN,EAAAvzB,IACAo0B,EAAAh3B,KAAAw2B,EAAA5zB,IACAs0B,EAAAl3B,KAAAm2B,EAAAsB,YAAA70B,IACA,MAEA,QACAA,EAAAy0B,EAAAz0B,IAAA,IACA80B,EAAAtjB,EAAAqjB,YAAA70B,GAGA80B,IAAA90B,GACAi0B,EAAA72B,KAAAoU,EAAAvF,cAAAjM,IACAk0B,EAAA92B,KAAA02B,EAAA9lB,aAAAwD,EAAAvU,IAAAu3B,EAAAjQ,iBAAA,GAAAvkB,GAAAwR,EAAAvU,IAAAu3B,EAAAjQ,iBAAA,GAAAvkB,MACAm0B,EAAA/2B,KAAAu2B,EAAA3zB,IACAo0B,EAAAh3B,KAAAqnB,EAAA+P,EAAAV,EAAAtiB,EAAAxR,IACAs0B,EAAAl3B,KAAA03B,IAEAJ,GAAA,EAMAA,IACA1F,EAAA5xB,KAAAq3B,GACAJ,EAAAj3B,KAAAi3B,EAAAl2B,SAMAk2B,EAAAt2B,KAAA,SAAAwN,EAAAC,GACA,OAAA8oB,EAAA/oB,GAAA+oB,EAAA9oB,KAEA,IAAAupB,KACAC,KACAC,KACAC,KACAC,KAEA,IAAA/pB,EAAA,EAAiBA,EAAAipB,EAAAl2B,OAA0BiN,IAAA,CAC3CpL,EAAAq0B,EAAAjpB,GACA2pB,EAAA3pB,GAAA6oB,EAAAj0B,GACAg1B,EAAA5pB,GAAA8oB,EAAAl0B,GACAi1B,EAAA7pB,GAAA+oB,EAAAn0B,GACAk1B,EAAA9pB,GAAAgpB,EAAAp0B,GACAm1B,EAAA/pB,GAAA4jB,EAAAhvB,GAGA,OACAo1B,QAAAL,EACAM,KAAAL,EACAM,iBAAAL,EACAM,cAAAL,EACAlG,OAAAmG,GAIAz2B,EAAAC,QAAAF,wBC1KA,IAAA4K,EAAAtO,EAAA,QAIA6D,GAFAyK,EAAAE,QAEAxO,EAAA,SAEAy6B,EAAAz6B,EAAA,QAEA4H,EAAA5H,EAAA,QAEA06B,EAAA16B,EAAA,QAEAsG,EAAAtG,EAAA,QAEA26B,EAAA36B,EAAA,QAEA46B,EAAA56B,EAAA,QAEAmV,EAAAylB,EAAAzlB,SACAD,EAAA0lB,EAAA1lB,QAEAH,EAAA/U,EAAA,QAEAwH,EAAAxH,EAAA,QAEA66B,EAAArzB,EAAAqzB,MAEAjc,EAAA5e,EAAA,QAEA8oB,EAAAlK,EAAAkK,qBACAY,EAAA9K,EAAA8K,kBAqBA,SAAAoR,EAAAC,EAAAC,GACA,GAAAD,EAAA33B,SAAA43B,EAAA53B,OAAA,CAIA,QAAAiN,EAAA,EAAiBA,EAAA0qB,EAAA33B,OAAoBiN,IAAA,CACrC,IAAA4qB,EAAAF,EAAA1qB,GACA6qB,EAAAF,EAAA3qB,GAEA,GAAA4qB,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAIA,UAGA,SAAAC,EAAAtsB,GACA,wBAAAA,MAAA,KAGA,SAAAusB,EAAAh3B,GACA,IAAAiW,EAAAjW,EAAAyzB,kBAEA,GAAAzzB,EAAAqY,OAAA,CAEA,IAAA4e,EAAAj3B,EAAAk3B,eAAA,IACAzF,EAAAxb,EAAA,GAAAA,EAAA,QACAA,EAAA,IAAAwb,EAAAwF,EACAhhB,EAAA,IAAAwb,EAAAwF,EAGA,OAAAhhB,EAUA,SAAAkhB,EAAAxoB,EAAAtR,EAAAkoB,GACA,IAAAA,EAAA9nB,SACA,SAKA,IAFA,IAAAsP,KAEAlM,EAAA,EAAAqL,EAAA7O,EAAA8O,QAAuCtL,EAAAqL,EAAWrL,IAClDkM,EAAA9O,KAAAqnB,EAAAC,EAAA5W,EAAAtR,EAAAwD,IAGA,OAAAkM,EAGA,SAAAqqB,EAAA/f,EAAAggB,EAAAC,EAAAvxB,GACA,IAAAwxB,EAAAP,EAAA3f,EAAAf,QAAA,MACAkhB,EAAAR,EAAA3f,EAAAf,QAAA,MACAlH,EAAAiI,EAAAlI,cAAAC,eACA1O,EAAAU,KAAAE,IAAAi2B,EAAA,GAAAA,EAAA,IACA52B,EAAAS,KAAAE,IAAAk2B,EAAA,GAAAA,EAAA,IACAt4B,EAAAkC,KAAAC,IAAAk2B,EAAA,GAAAA,EAAA,IAAA72B,EACAE,EAAAQ,KAAAC,IAAAm2B,EAAA,GAAAA,EAAA,IAAA72B,EAGA,GAAA22B,EACA52B,GAAA,GACAxB,GAAA,GACAyB,GAAA,GACAC,GAAA,OACG,CACH,IAAAod,EAAAjY,EAAAjI,IAAA,sBAEA25B,EAAA1xB,EAAAjI,IAAA,gBAAAkgB,EAAA,EAAA5c,KAAAC,IAAAnC,EAAA0B,GAEAwO,GACAzO,GAAA82B,EACA72B,GAAA,EAAA62B,IAEA/2B,GAAA+2B,EACAv4B,GAAA,EAAAu4B,GAIA,IAAAC,EAAA,IAAAx1B,EAAAM,MACAC,OACA/B,IACAC,IACAzB,QACA0B,YAcA,OAVAy2B,IACAK,EAAAj1B,MAAA2M,EAAA,oBACAlN,EAAAqE,UAAAmxB,GACAj1B,OACAvD,QACA0B,WAEKmF,IAGL2xB,EAGA,SAAAC,EAAA/a,EAAAya,EAAAC,EAAAvxB,GACA,IAAA6xB,EAAAhb,EAAAib,eACAC,EAAAlb,EAAAmb,gBACAC,EAAAF,EAAAziB,YAAAlR,QACA6zB,EAAA,GAAAA,EAAA,IAAAA,EAAA7pB,UACA,IAAA8pB,EAAAL,EAAAviB,YACA6iB,EAAA92B,KAAAI,GAAA,IAEA81B,IACAU,EAAA,OACAA,EAAA,QAGA,IAAAN,EAAA,IAAAx1B,EAAAgb,QACAza,OACAib,GAAA+Y,EAAA7Z,EAAAc,GAAA,GACAC,GAAA8Y,EAAA7Z,EAAAe,GAAA,GACAN,GAAAoZ,EAAAuB,EAAA,MACA5a,EAAAqZ,EAAAuB,EAAA,MACAjb,YAAAkb,EAAA,GAAAC,EACAlb,UAAAib,EAAA,GAAAC,EACApb,UAAA8a,EAAA1hB,WAaA,OATAmhB,IACAK,EAAAj1B,MAAAua,UAAAib,EAAA,GAAAC,EACAh2B,EAAAqE,UAAAmxB,GACAj1B,OACAua,UAAAib,EAAA,GAAAC,IAEKnyB,IAGL2xB,EAGA,SAAAS,EAAAxpB,EAAA0oB,EAAAC,EAAAvxB,GACA,gBAAA4I,EAAAzS,KAAAy7B,EAAAhpB,EAAA0oB,EAAAC,EAAAvxB,GAAAqxB,EAAAzoB,EAAA0oB,EAAAC,EAAAvxB,GAGA,SAAAqyB,EAAArrB,EAAA4B,EAAA0pB,GAKA,IAJA,IAAAtf,EAAApK,EAAAQ,cACAmpB,EAAA,MAAAvf,EAAAzY,KAAA,WAAAyY,EAAAzY,IAAA,IACAi4B,KAEAtsB,EAAA,EAAiBA,EAAAc,EAAA/N,OAAA,EAAuBiN,IAAA,CACxC,IAAAwpB,EAAA1oB,EAAAd,EAAA,GACA2C,EAAA7B,EAAAd,GACAssB,EAAAt6B,KAAA2Q,GACA,IAAA4pB,KAEA,OAAAH,GACA,UACAG,EAAAF,GAAA7C,EAAA6C,GACAE,EAAA,EAAAF,GAAA1pB,EAAA,EAAA0pB,GAEAC,EAAAt6B,KAAAu6B,GACA,MAEA,aAEA,IAAAC,GAAA7pB,EAAA0pB,GAAA7C,EAAA6C,IAAA,EACAI,KACAF,EAAAF,GAAAI,EAAAJ,GAAAG,EACAD,EAAA,EAAAF,GAAA1pB,EAAA,EAAA0pB,GACAI,EAAA,EAAAJ,GAAA7C,EAAA,EAAA6C,GACAC,EAAAt6B,KAAAu6B,GACAD,EAAAt6B,KAAAy6B,GACA,MAEA,QACAF,EAAAF,GAAA1pB,EAAA0pB,GACAE,EAAA,EAAAF,GAAA7C,EAAA,EAAA6C,GAEAC,EAAAt6B,KAAAu6B,IAMA,OADAzrB,EAAAd,IAAAssB,EAAAt6B,KAAA8O,EAAAd,IACAssB,EAGA,SAAAI,EAAAt7B,EAAAsR,GACA,IAAAiqB,EAAAv7B,EAAAuhB,UAAA,cAEA,GAAAga,KAAA55B,QAAA3B,EAAA8O,SAKA,gBAAAwC,EAAAzS,KAAA,CAOA,IAHA,IAAAipB,EACA0T,EAEA5sB,EAAA2sB,EAAA55B,OAAA,EAAyCiN,GAAA,EAAQA,IAAA,CACjD,IAAA6sB,EAAAF,EAAA3sB,GAAA8sB,UACAC,EAAA37B,EAAA+b,WAAA0f,GACAG,EAAA57B,EAAA67B,iBAAAF,GAGA,GAFA7T,EAAA8T,KAAA9T,SAEA,MAAAA,GAAA,MAAAA,EAAA,CACA0T,EAAAD,EAAA3sB,GACA,OAIA,GAAA4sB,EAAA,CAUA,IAAA74B,EAAA2O,EAAA2H,QAAA6O,GAEAgU,EAAA15B,EAAA2T,IAAAylB,EAAAO,MAAA,SAAAC,GACA,OACA9jB,MAAAvV,EAAAkB,cAAAlB,EAAAmB,YAAAk4B,EAAA3qB,QACA7J,MAAAw0B,EAAAx0B,SAGAy0B,EAAAH,EAAAn6B,OACAu6B,EAAAV,EAAAU,YAAAp1B,QAEAm1B,GAAAH,EAAA,GAAA5jB,MAAA4jB,EAAAG,EAAA,GAAA/jB,QACA4jB,EAAAhrB,UACAorB,EAAAprB,WAGA,IAAAqrB,EAAA,GAEAC,EAAAN,EAAA,GAAA5jB,MAAAikB,EACAE,EAAAP,EAAAG,EAAA,GAAA/jB,MAAAikB,EACAG,EAAAD,EAAAD,EAEA,GAAAE,EAAA,KACA,oBAGAl6B,EAAA8M,KAAA4sB,EAAA,SAAAE,GACAA,EAAAtqB,QAAAsqB,EAAA9jB,MAAAkkB,GAAAE,IAEAR,EAAAl7B,MACA8Q,OAAAuqB,EAAAH,EAAAG,EAAA,GAAAvqB,OAAA,GACAlK,MAAA00B,EAAA,oBAEAJ,EAAAS,SAEA7qB,OAAAuqB,EAAAH,EAAA,GAAApqB,OAAA,GACAlK,MAAA00B,EAAA,oBAMA,IAAAM,EAAA,IAAA33B,EAAA43B,eAAA,QAAAX,GAAA,GAGA,OAFAU,EAAA1U,GAAAsU,EACAI,EAAA1U,EAAA,KAAAuU,EACAG,IAGA,SAAAE,EAAAh0B,EAAA1I,EAAAsR,GACA,IAAA9D,EAAA9E,EAAAjI,IAAA,iBACAk8B,EAAA,SAAAnvB,EAEA,IAAAA,GAAAmvB,EAAA,CAIA,IAAA9Z,EAAAvR,EAAAid,eAAA,cAEA,GAAA1L,KAOA8Z,IACAC,EAAA/Z,EAAA7iB,IADA,CAMA,IAAA68B,EAAA78B,EAAAK,aAAAwiB,EAAA5f,KACA65B,KAIA,OAHA16B,EAAA8M,KAAA2T,EAAAka,gBAAA,SAAAC,GACAF,EAAAE,EAAAC,WAAA,IAEA,SAAAl9B,GACA,OAAA+8B,EAAAnlB,eAAA3X,EAAAS,IAAAo8B,EAAA98B,OAIA,SAAA68B,EAAA/Z,EAAA7iB,GAKA,IAAA+X,EAAA8K,EAAA7K,YACAklB,EAAAn5B,KAAA6c,IAAA7I,EAAA,GAAAA,EAAA,IAAA8K,EAAAjb,MAAAkH,QACAsW,MAAA8X,OAAA,GAMA,IAHA,IAAAC,EAAAn9B,EAAA8O,QACA3B,EAAApJ,KAAAC,IAAA,EAAAD,KAAAq1B,MAAA+D,EAAA,IAEAp9B,EAAA,EAAyBA,EAAAo9B,EAAqBp9B,GAAAoN,EAC9C,GAEA,IAFAhH,EAAAO,cAAA1G,EAAAD,GACA8iB,EAAA9Q,eAAA,KACAmrB,EACA,SAIA,SAGA,IAAAj7B,EAAAqR,EAAAhJ,QACAzL,KAAA,OACAC,KAAA,WACA,IAAAs+B,EAAA,IAAAv4B,EAAAwB,MACAg3B,EAAA,IAAArE,EACA/5B,KAAA+F,MAAAE,IAAAm4B,EAAAr4B,OACA/F,KAAAq+B,YAAAD,EACAp+B,KAAAs+B,WAAAH,GAEAr4B,OAAA,SAAA2D,EAAAnJ,EAAA0O,GACA,IAAAqD,EAAA5I,EAAAhG,iBACAsC,EAAA/F,KAAA+F,MACAhF,EAAA0I,EAAAzI,UACAu9B,EAAA90B,EAAA0B,SAAA,aACAqzB,EAAA/0B,EAAA0B,SAAA,aACAsF,EAAA1P,EAAAwO,SAAAxO,EAAAyP,eACAiuB,EAAA,UAAApsB,EAAAzS,KACA8+B,EAAA1+B,KAAA2+B,UACAP,EAAAp+B,KAAAq+B,YACAO,EAAA5+B,KAAA6+B,UACAtqB,EAAAvU,KAAA8+B,SACAX,EAAAn+B,KAAAs+B,WACAvD,EAAAtxB,EAAAjI,IAAA,aACAu9B,GAAAP,EAAAQ,UACA3W,EAAAmW,EAAAh9B,IAAA,UACAynB,EAAAb,EAAA/V,EAAAtR,EAAAsnB,GACAoO,EAAAoE,EAAAxoB,EAAAtR,EAAAkoB,GACA3a,EAAA7E,EAAAjI,IAAA,cACAy9B,EAAA3wB,IAAAmwB,GAAAhB,EAAAh0B,EAAA1I,EAAAsR,GAEA0D,EAAA/V,KAAAgW,MACAD,KAAAiK,kBAAA,SAAAT,EAAAhb,GACAgb,EAAA2f,SACAn5B,EAAA0Q,OAAA8I,GACAxJ,EAAAI,iBAAA5R,EAAA,SAIA+J,GACA8vB,EAAA3nB,SAGA1Q,EAAAE,IAAAk4B,GAEA,IAAAjwB,GAAAuwB,GAAAh1B,EAAAjI,IAAA,QAEAo9B,GAAAF,EAAA9+B,OAAAyS,EAAAzS,MAAAsO,IAAAlO,KAAAm/B,OAoBAJ,IAAAxqB,EAEAA,EAAAvU,KAAAo/B,YAAA3uB,EAAAgmB,EAAApkB,EAAA0oB,GACOxmB,IAAAwqB,IAEPZ,EAAA1nB,OAAAlC,GACAA,EAAAvU,KAAA8+B,SAAA,MAIAX,EAAAkB,YAAAxD,EAAAxpB,GAAA,KAAA5I,IAGA6E,GAAA8vB,EAAA92B,WAAAvG,GACAu+B,SAAAL,EACAM,UAAA1D,EAAAxpB,GAAA,KAAA5I,KAIA1I,EAAAif,kBAAA,SAAAT,GACAA,EAAAvW,eAAA,KAIAoxB,EAAAp6B,KAAAw/B,iBAAA/I,IAAA2D,EAAAp6B,KAAAy/B,QAAAhvB,KACAsqB,EACA/6B,KAAA0/B,iBAAA3+B,EAAA01B,EAAApkB,EAAArD,EAAAd,EAAAma,IAGAna,IAEAuC,EAAAqrB,EAAArrB,EAAA4B,EAAAnE,GACAuoB,EAAAqF,EAAArF,EAAApkB,EAAAnE,IAGA0wB,EAAA3pB,UACAxE,WAEA8D,KAAAU,UACAxE,SACAgmB,wBA3DAnoB,GAAA8vB,EAAA92B,WAAAvG,GACAu+B,SAAAL,EACAM,UAAA1D,EAAAxpB,GAAA,KAAA5I,KAGAyE,IAEAuC,EAAAqrB,EAAArrB,EAAA4B,EAAAnE,GACAuoB,EAAAqF,EAAArF,EAAApkB,EAAAnE,IAGA0wB,EAAA5+B,KAAA2/B,aAAAlvB,EAAA4B,EAAA0oB,GAEAgE,IACAxqB,EAAAvU,KAAAo/B,YAAA3uB,EAAAgmB,EAAApkB,EAAA0oB,IAGAoD,EAAAkB,YAAAxD,EAAAxpB,GAAA,KAAA5I,KAgDA,IAAA0L,EAAAknB,EAAAt7B,EAAAsR,IAAAtR,EAAAuhB,UAAA,SACAsc,EAAAr0B,SAAApH,EAAAkD,SACAk4B,EAAA1oB,gBACAvP,KAAA,OACAsP,OAAAT,EACAC,SAAA,WAEA,IAAAjH,EAAA1E,EAAAjI,IAAA,UAQA,GAPA2M,EAAAssB,EAAAhxB,EAAAjI,IAAA,WACAo9B,EAAA3pB,UACA9G,SACAC,eAAA3E,EAAAjI,IAAA,kBACAgN,aAAA/E,EAAAjI,IAAA,kBAGA+S,EAAA,CACA,IAAAqrB,EAAA7+B,EAAA8kB,mBAAA,mBACA6Q,EAAA,EACAniB,EAAAhK,SAAApH,EAAAkD,SAAAm4B,EAAAqB,gBACAv5B,KAAA6O,EACAnL,QAAA,GACAoL,SAAA,WAGAwqB,IACAlJ,EAAA+D,EAAAmF,EAAAp+B,IAAA,YAGA+S,EAAAU,UACA9G,SACAuoB,kBACAtoB,eAAA3E,EAAAjI,IAAA,kBACAgN,aAAA/E,EAAAjI,IAAA,kBAIAxB,KAAAgW,MAAAjV,EAEAf,KAAA2+B,UAAAtsB,EACArS,KAAAw/B,iBAAA/I,EACAz2B,KAAAy/B,QAAAhvB,EACAzQ,KAAAm/B,MAAAjxB,EACAlO,KAAA8/B,aAAAzX,GAEA1R,QAAA,aACAzN,UAAA,SAAAO,EAAAnJ,EAAA0O,EAAAkC,GACA,IAAAnQ,EAAA0I,EAAAzI,UACAF,EAAAm5B,EAAA8F,eAAAh/B,EAAAmQ,GAEA,KAAApQ,aAAA8G,QAAA,MAAA9G,MAAA,GACA,IAAAuN,EAAAtN,EAAAyV,iBAAA1V,GAEA,IAAAuN,EAAA,CAEA,IAAAiE,EAAAvR,EAAAyP,cAAA1P,GAEA,IAAAwR,EAEA,OAGAjE,EAAA,IAAAnH,EAAAnG,EAAAD,GACAuN,EAAA5L,SAAA6P,EACAjE,EAAAhF,KAAAI,EAAAjI,IAAA,UAAAiI,EAAAjI,IAAA,MACA6M,EAAAsG,OAAAwR,MAAA7T,EAAA,KAAA6T,MAAA7T,EAAA,IACAjE,EAAA6wB,QAAA,EACAn+B,EAAAoV,iBAAArV,EAAAuN,GAEAA,EAAAxF,qBAAA,GACA7I,KAAA+F,MAAAE,IAAAoI,GAGAA,EAAAnF,iBAGAmL,EAAA7M,UAAA0B,UAAA7B,KAAArH,KAAAyJ,EAAAnJ,EAAA0O,EAAAkC,IAGA9H,SAAA,SAAAK,EAAAnJ,EAAA0O,EAAAkC,GACA,IAAAnQ,EAAA0I,EAAAzI,UACAF,EAAAm5B,EAAA8F,eAAAh/B,EAAAmQ,GAEA,SAAApQ,MAAA,GACA,IAAAuN,EAAAtN,EAAAyV,iBAAA1V,GAEAuN,IACAA,EAAA6wB,QACAn+B,EAAAoV,iBAAArV,EAAA,MACAd,KAAA+F,MAAA0Q,OAAApI,IAEAA,EAAAjF,iBAOAiL,EAAA7M,UAAA4B,SAAA/B,KAAArH,KAAAyJ,EAAAnJ,EAAA0O,EAAAkC,IASAyuB,aAAA,SAAAlvB,GACA,IAAAmuB,EAAA5+B,KAAA6+B,UAiBA,OAfAD,GACA5+B,KAAAs+B,WAAA7nB,OAAAmoB,GAGAA,EAAA,IAAAnqB,GACAtO,OACAsK,UAEAjK,QAAA,EACAb,GAAA,KAGA3F,KAAAs+B,WAAAr4B,IAAA24B,GAEA5+B,KAAA6+B,UAAAD,EACAA,GASAQ,YAAA,SAAA3uB,EAAAgmB,GACA,IAAAliB,EAAAvU,KAAA8+B,SAiBA,OAfAvqB,GACAvU,KAAAs+B,WAAA7nB,OAAAlC,GAGAA,EAAA,IAAAC,GACArO,OACAsK,SACAgmB,mBAEAjwB,QAAA,IAGAxG,KAAAs+B,WAAAr4B,IAAAsO,GAEAvU,KAAA8+B,SAAAvqB,EACAA,GAOAmrB,iBAAA,SAAA3+B,EAAA01B,EAAApkB,EAAArD,EAAAd,EAAAma,GACA,IAAAuW,EAAA5+B,KAAA6+B,UACAtqB,EAAAvU,KAAA8+B,SACAr1B,EAAA1I,EAAA2I,UACAuM,EAAA+jB,EAAAh6B,KAAAgW,MAAAjV,EAAAf,KAAAw/B,iBAAA/I,EAAAz2B,KAAA2+B,UAAAtsB,EAAArS,KAAA8/B,aAAAzX,GACAsR,EAAA1jB,EAAA0jB,QACAE,EAAA5jB,EAAA4jB,iBACAD,EAAA3jB,EAAA2jB,KACAE,EAAA7jB,EAAA6jB,cAEA5rB,IAEAyrB,EAAAmC,EAAA7lB,EAAA0jB,QAAAtnB,EAAAnE,GACA2rB,EAAAiC,EAAA7lB,EAAA4jB,iBAAAxnB,EAAAnE,GACA0rB,EAAAkC,EAAA7lB,EAAA2jB,KAAAvnB,EAAAnE,GACA4rB,EAAAgC,EAAA7lB,EAAA6jB,cAAAznB,EAAAnE,IAMA0wB,EAAAz4B,MAAA65B,SAAA/pB,EAAA0jB,QACAiF,EAAAz4B,MAAAsK,OAAAkpB,EACA/zB,EAAAgE,YAAAg1B,GACAz4B,OACAsK,OAAAmpB,IAEKnwB,GAEL8K,IACAA,EAAAU,UACAxE,OAAAkpB,EACAlD,gBAAAoD,IAEAj0B,EAAAgE,YAAA2K,GACApO,OACAsK,OAAAmpB,EACAnD,gBAAAqD,IAEOrwB,IAMP,IAHA,IAAAw2B,KACAC,EAAAjqB,EAAAsd,OAEA5jB,EAAA,EAAmBA,EAAAuwB,EAAAx9B,OAAuBiN,IAAA,CAC1C,IAAAqoB,EAAAkI,EAAAvwB,GAAAqoB,IAEA,SAAAA,EAAA,CACA,IAAAzY,EAAAxe,EAAAyV,iBAAA0pB,EAAAvwB,GAAAsoB,MAEA1Y,GACA0gB,EAAAt+B,MACA4d,KACA4gB,MAAAxwB,KAOAivB,EAAAwB,WAAAxB,EAAAwB,UAAA19B,QACAk8B,EAAAwB,UAAA,GAAAC,OAAA,WACA,QAAA1wB,EAAA,EAAuBA,EAAAswB,EAAAv9B,OAA4BiN,IAAA,CACnD,IAAA4P,EAAA0gB,EAAAtwB,GAAA4P,GACAA,EAAA9W,KAAA,WAAAm2B,EAAAz4B,MAAA65B,SAAAC,EAAAtwB,GAAAwwB,YAKA1pB,OAAA,SAAAnW,GACA,IAAAyF,EAAA/F,KAAA+F,MACAgQ,EAAA/V,KAAAgW,MAEAhW,KAAAs+B,WAAAt4B,YAEAhG,KAAAq+B,YAAA5nB,QAAA,GAGAV,KAAAiK,kBAAA,SAAAT,EAAAhb,GACAgb,EAAA2f,SACAn5B,EAAA0Q,OAAA8I,GACAxJ,EAAAI,iBAAA5R,EAAA,SAGAvE,KAAA6+B,UAAA7+B,KAAA8+B,SAAA9+B,KAAA2+B,UAAA3+B,KAAAy/B,QAAAz/B,KAAAw/B,iBAAAx/B,KAAAgW,MAAA,QAIA/S,EAAAC,QAAAF,wBCvuBA,IAAAG,EAAA7D,EAAA,QAEAsG,EAAAtG,EAAA,QAEAghC,EAAAhhC,EAAA,SAEA2d,EAAA3d,EAAA,QAEAihC,EAAAjhC,EAAA,QAoBAkhC,GAAA,uCACAC,GAAA,yBAQAC,EAAAzjB,EAAA5R,QACAzL,KAAA,gBACAud,iBAAA,uBAKArX,OAAA,SAAAxC,EAAAhD,EAAA0O,EAAAkC,GACAlR,KAAA+F,MAAAC,YACA,IAAA26B,EAAA3gC,KAAA4gC,WAIA,GAHA5gC,KAAA4gC,WAAA,IAAAh7B,EAAAwB,MACApH,KAAA+F,MAAAE,IAAAjG,KAAA4gC,YAEAt9B,EAAA9B,IAAA,SAIA,IAAA6B,EAAAC,EAAAqQ,mBACAvQ,EAAAm9B,EAAAn9B,OAAAC,EAAAC,GACAu9B,EAAA,IAAAP,EAAAh9B,EAAAF,GACAD,EAAA8M,KAAAuwB,EAAAK,EAAA56B,IAAA46B,GAEA7gC,KAAA4gC,WAAA36B,IAAA46B,EAAAC,YAEA39B,EAAA8M,KAAAwwB,EAAA,SAAArmB,GACA9W,EAAA9B,IAAA4Y,EAAA,UACApa,KAAA,IAAAoa,GAAA9W,EAAAD,IAEKrD,MACL4F,EAAAm7B,gBAAAJ,EAAA3gC,KAAA4gC,WAAAt9B,GACAo9B,EAAAx/B,UAAAlB,KAAA,SAAAsD,EAAAhD,EAAA0O,EAAAkC,KAEAuF,OAAA,WACAzW,KAAAghC,iBAAA,MAQAC,WAAA,SAAA39B,EAAAD,GACA,IAAAK,EAAAJ,EAAAI,KAEA,IAAAA,EAAAiF,MAAA6qB,UAAA,CAIA,IAAA0N,EAAA59B,EAAA6H,SAAA,aACAozB,EAAA2C,EAAA/1B,SAAA,aACAg2B,EAAA5C,EAAA/8B,IAAA,SACA2/B,EAAAh+B,EAAAkwB,QAAA8N,SAaA,IAZA,IAAA3nB,EAAAnW,EAAAI,iBAAAS,UACA4O,EAAApP,EAAAoP,eACAsuB,EAAA,EACAC,EAAA39B,EAAA49B,gBACAC,UAAAL,IAEA3G,KACAC,KAGA73B,EAAA47B,EAAA1oB,eAEAlG,EAAA,EAAmBA,EAAA0xB,EAAA3+B,OAAwBiN,IAAA,CAC3C,IAAA6xB,EAAA99B,EAAAkB,cAAAy8B,EAAA1xB,GAAAsJ,OAEAnG,GACAynB,EAAA,GAAAiH,EACAjH,EAAA,GAAA/gB,EAAAnV,EACAm2B,EAAA,GAAAgH,EACAhH,EAAA,GAAAhhB,EAAAnV,EAAAmV,EAAAlV,SAEAi2B,EAAA,GAAA/gB,EAAApV,EACAm2B,EAAA,GAAAiH,EACAhH,EAAA,GAAAhhB,EAAApV,EAAAoV,EAAA5W,MACA43B,EAAA,GAAAgH,GAGA,IAAAC,EAAAL,IAAAD,EAAAz+B,OACAs7B,EAAAqD,EAAA1xB,GAAAquB,UAEAh+B,KAAA4gC,WAAA36B,IAAA,IAAAL,EAAA87B,KAAA97B,EAAA+7B,sBACAC,KAAA,MAAA5D,EAAA,QAAAqD,EAAA1xB,GAAAquB,UAAA,KACA73B,OACAwK,GAAA4pB,EAAA,GACA3pB,GAAA2pB,EAAA,GACA1pB,GAAA2pB,EAAA,GACAzpB,GAAAypB,EAAA,IAEAp0B,MAAAjD,EAAAkD,UACAuP,OAAAurB,EAAAM,IACS9+B,GACT6D,QAAA,SAUAq7B,WAAA,SAAAv+B,EAAAD,GACA,IAAAK,EAAAJ,EAAAI,KAEA,IAAAA,EAAAiF,MAAA6qB,UAAA,CAIA,IAAAsO,EAAAx+B,EAAA6H,SAAA,aACAqzB,EAAAsD,EAAA32B,SAAA,aACA42B,EAAAvD,EAAAh9B,IAAA,SACAgY,EAAAnW,EAAAI,iBAAAS,UACAm9B,EAAA39B,EAAA49B,gBACAC,UAAAO,EACAxK,OAAA,IAGA,GAAA+J,EAAA3+B,OAAA,CAMA,IAAAs/B,EAAAD,EAAAr/B,OACAu/B,EAAAjiC,KAAAghC,iBACAkB,EAAA/+B,EAAAg/B,gBACAV,EAAA,EAEA,GAAAQ,EACA,QAAAtyB,EAAA,EAAqBA,EAAA0xB,EAAA3+B,OAAwBiN,IAAA,CAC7C,IAAAyyB,EAAAH,EAAAzgC,IAAA6/B,EAAA1xB,GAAAquB,WAEA,SAAAoE,EAAA,CACAX,GAAAW,GAAAJ,EAAA,GAAAryB,GAAAqyB,EACA,OAKA,IAAAK,EAAA3+B,EAAAkB,cAAAy8B,EAAA,GAAApoB,OACAyK,EAAA8a,EAAAqB,eACAkC,EAAA5+B,EAAAkwB,QAAA0O,SAEA,IAAApyB,EAAA,EAAmBA,EAAA0xB,EAAA3+B,OAAwBiN,IAAA,CAC3C,IACAvL,EACAC,EACAzB,EACA0B,EAJAk9B,EAAA99B,EAAAkB,cAAAy8B,EAAA1xB,GAAAsJ,OAMAvV,EAAAoP,gBACA1O,EAAAi+B,EACAh+B,EAAAmV,EAAAnV,EACAzB,EAAA4+B,EAAAp9B,EACAE,EAAAkV,EAAAlV,OACA+9B,EAAAj+B,EAAAxB,IAEAwB,EAAAoV,EAAApV,EACAC,EAAAg+B,EACAz/B,EAAA4W,EAAA5W,MACA0B,EAAAk9B,EAAAn9B,EACAg+B,EAAAh+B,EAAAC,GAGA,IAAA05B,EAAAqD,EAAA1xB,EAAA,GAAAquB,UACA,MAAAA,GAAAkE,EAAAI,IAAAtE,EAAAyD,GAEAzhC,KAAA4gC,WAAA36B,IAAA,IAAAL,EAAAM,MACA07B,KAAA,MAAA5D,EAAA,QAAAA,EAAA,KACA73B,OACA/B,IACAC,IACAzB,QACA0B,UAEA8B,MAAAjD,EAAAkD,UACAC,KAAAy7B,EAAAN,IACS/d,GACTld,QAAA,KAGAi7B,KAAA,GAAAO,EAGAhiC,KAAAghC,iBAAAkB,OAGAxB,EAAAr1B,QACAzL,KAAA,UAEA8gC,EAAAr1B,QACAzL,KAAA,gCCtOA,IAAAgG,EAAAtG,EAAA,QAEA4H,EAAA5H,EAAA,QAEAsX,EAAAtX,EAAA,QAEAuX,EAAAD,EAAAC,SA8BA,SAAAkjB,EAAAwI,GACAviC,KAAA+F,MAAA,IAAAH,EAAAwB,MACApH,KAAAwiC,YAAAD,GAAAr7B,EAGA,IAAAu7B,EAAA1I,EAAAvyB,UAEA,SAAAk7B,EAAA3hC,EAAA0a,EAAAlX,EAAAhB,GACA,OAAAkY,IAAA0K,MAAA1K,EAAA,MAAA0K,MAAA1K,EAAA,OAAAlY,EAAA+7B,UAAA/7B,EAAA+7B,SAAA/6B,OAGAhB,EAAAg8B,YAAAh8B,EAAAg8B,UAAA9P,QAAAhU,EAAA,GAAAA,EAAA,eAAA1a,EAAA4G,cAAApD,EAAA,UAoHA,SAAAo+B,EAAAp/B,GAOA,OANA,MAAAA,GAAAsT,EAAAtT,KACAA,GACA+7B,SAAA/7B,IAIAA,MAkBA,SAAAq/B,EAAA7hC,GACA,IAAA0I,EAAA1I,EAAA2I,UACA,OACA7G,UAAA4G,EAAA0B,SAAA,aAAA5E,cAAA,UACAkE,eAAAhB,EAAA0B,SAAA,sBAAA5E,eACAmE,aAAAjB,EAAAjI,IAAA,gBACAmJ,aAAAlB,EAAAjI,IAAA,gBACAsJ,eAAArB,EAAAjI,IAAA,kBACAoJ,WAAAnB,EAAA0B,SAAA,SACAN,gBAAApB,EAAA0B,SAAA,kBACAJ,YAAAtB,EAAAjI,IAAA,WA5IAihC,EAAAn7B,WAAA,SAAAvG,EAAAwC,GACAA,EAAAo/B,EAAAp/B,GACA,IAAAwC,EAAA/F,KAAA+F,MACA0D,EAAA1I,EAAA2I,UACAqM,EAAA/V,KAAAgW,MACA6sB,EAAA7iC,KAAAwiC,YACAr7B,EAAAy7B,EAAA7hC,GAGAgV,GACAhQ,EAAAC,YAGAjF,EAAAkV,KAAAF,GAAA9P,IAAA,SAAAoQ,GACA,IAAAoF,EAAA1a,EAAAyP,cAAA6F,GAEA,GAAAqsB,EAAA3hC,EAAA0a,EAAApF,EAAA9S,GAAA,CACA,IAAAu/B,EAAA,IAAAD,EAAA9hC,EAAAsV,EAAAlP,GACA27B,EAAAr6B,KAAA,WAAAgT,GACA1a,EAAAoV,iBAAAE,EAAAysB,GACA/8B,EAAAE,IAAA68B,MAEG1sB,OAAA,SAAAC,EAAAC,GACH,IAAAwsB,EAAA/sB,EAAAS,iBAAAF,GACAmF,EAAA1a,EAAAyP,cAAA6F,GAEAqsB,EAAA3hC,EAAA0a,EAAApF,EAAA9S,IAKAu/B,GAIAA,EAAAx7B,WAAAvG,EAAAsV,EAAAlP,GACAvB,EAAAgE,YAAAk5B,GACArgC,SAAAgZ,GACOhS,KANPq5B,EAAA,IAAAD,EAAA9hC,EAAAsV,GACAysB,EAAAr6B,KAAA,WAAAgT,IASA1V,EAAAE,IAAA68B,GACA/hC,EAAAoV,iBAAAE,EAAAysB,IAhBA/8B,EAAA0Q,OAAAqsB,KAiBGrsB,OAAA,SAAAH,GACH,IAAAiJ,EAAAxJ,EAAAS,iBAAAF,GACAiJ,KAAAvS,QAAA,WACAjH,EAAA0Q,OAAA8I,OAEG7I,UACH1W,KAAAgW,MAAAjV,GAGA0hC,EAAAM,aAAA,WACA,UAGAN,EAAAO,aAAA,WACA,IAAAjiC,EAAAf,KAAAgW,MAEAjV,GAEAA,EAAAif,kBAAA,SAAAT,EAAAhb,GACA,IAAAkX,EAAA1a,EAAAyP,cAAAjM,GACAgb,EAAA9W,KAAA,WAAAgT,MAKAgnB,EAAAQ,yBAAA,SAAAliC,GACAf,KAAAkjC,aAAAN,EAAA7hC,GACAf,KAAAgW,MAAA,KACAhW,KAAA+F,MAAAC,aAWAy8B,EAAAU,kBAAA,SAAAC,EAAAriC,EAAAwC,GAGA,SAAA8/B,EAAA9jB,GACAA,EAAA+jB,UACA/jB,EAAA5S,YAAA4S,EAAAgkB,eAAA,GAJAhgC,EAAAo/B,EAAAp/B,GAQA,QAAAgB,EAAA6+B,EAAArxB,MAAkCxN,EAAA6+B,EAAApxB,IAAsBzN,IAAA,CACxD,IAAAkX,EAAA1a,EAAAyP,cAAAjM,GAEA,GAAAm+B,EAAA3hC,EAAA0a,EAAAlX,EAAAhB,GAAA,CACA,IAAAgc,EAAA,IAAAvf,KAAAwiC,YAAAzhC,EAAAwD,EAAAvE,KAAAkjC,cACA3jB,EAAAikB,SAAAH,GACA9jB,EAAA9W,KAAA,WAAAgT,GACAzb,KAAA+F,MAAAE,IAAAsZ,GACAxe,EAAAoV,iBAAA5R,EAAAgb,MAeAkjB,EAAAhsB,OAAA,SAAAgtB,GACA,IAAA19B,EAAA/F,KAAA+F,MACAhF,EAAAf,KAAAgW,MAEAjV,GAAA0iC,EACA1iC,EAAAif,kBAAA,SAAAT,GACAA,EAAAvS,QAAA,WACAjH,EAAA0Q,OAAA8I,OAIAxZ,EAAAC,aAkBA,IAAAhD,EAAA+2B,EACA92B,EAAAC,QAAAF,yBC3MA,IAAA4T,EAAAtX,EAAA,QAEAkG,EAAAoR,EAAApR,SACAa,EAAAuQ,EAAAvQ,SACAgF,EAAAuL,EAAAvL,OACA4E,EAAA2G,EAAA3G,KAEAyzB,EAAApkC,EAAA,QAEAsG,EAAAtG,EAAA,QAEA8e,EAAA9e,EAAA,QAEAwH,EAAAxH,EAAA,QAEAqkC,EAAA78B,EAAA68B,mBACAC,EAAA98B,EAAA88B,UAEAh9B,EAAAtH,EAAA,QAEAuH,EAAAD,EAAAC,aAEAg9B,EAAAvkC,EAAA,QAEAwkC,EAAAxkC,EAAA,QAEAykC,EAAAD,EAAAE,eAoBA9+B,EAAAJ,KAAAI,GAEA,SAAA++B,EAAA3gC,GACA,IAAA4gC,GACAC,cAAA7gC,EAAAuQ,UAGA,OADAqwB,EAAA5gC,EAAAuQ,SAAA,SAAAvQ,EAAAiY,eACA2oB,EA0CA,IAAA5D,EAAA,SAAAh9B,EAAAC,GAIAvD,KAAAuD,MAKAvD,KAAAsD,YAEA+C,EAAA9C,GACAgC,YAAA,EACAD,cAAA,EACAD,cAAA,EACAD,eAAA,EACAoB,QAAA,IAMAxG,KAAA+F,MAAA,IAAAH,EAAAwB,MAEA,IAAAg9B,EAAA,IAAAx+B,EAAAwB,OACA3E,SAAAc,EAAAd,SAAAoF,QACA5C,SAAA1B,EAAA0B,WAIAm/B,EAAAC,kBACArkC,KAAAskC,WAAAF,EAAAG,UACAvkC,KAAAwkC,WAAAJ,GAGA9D,EAAA94B,WACA6nB,YAAAiR,EACAmE,WAAA,SAAArqB,GACA,QAAAsqB,EAAAtqB,IAEAnU,IAAA,SAAAmU,GACAsqB,EAAAtqB,GAAA/S,KAAArH,OAEA8gC,SAAA,WACA,OAAA9gC,KAAA+F,QAGA,IAAA2+B,GAIAzhB,SAAA,WACA,IAAA1f,EAAAvD,KAAAuD,IACAD,EAAAtD,KAAAsD,UAEA,GAAAA,EAAA9B,IAAA,kBAIA,IAAAmY,EAAA3Z,KAAAsD,UAAAI,KAAAqV,YACA4rB,EAAA3kC,KAAAskC,WACAM,GAAAjrB,EAAA,MACAkrB,GAAAlrB,EAAA,MAEAgrB,IACAZ,EAAAa,IAAAD,GACAZ,EAAAc,IAAAF,IAGA,IAAAhiC,EAAA0I,GACAy5B,QAAA,SACKxhC,EAAA6H,SAAA,sBAAA0K,gBACL7V,KAAA+F,MAAAE,IAAA,IAAAL,EAAA87B,KAAA97B,EAAA+7B,sBAEAC,KAAA,OACAz7B,OACAwK,GAAAi0B,EAAA,GACAh0B,GAAAg0B,EAAA,GACA/zB,GAAAg0B,EAAA,GACA9zB,GAAA8zB,EAAA,IAEAz+B,MAAAzD,EACAoiC,uBAAAxhC,EAAAwhC,wBAAA,EACAv+B,QAAA,EACAb,GAAA,MAEA,IAAAq/B,EAAA1hC,EAAA9B,IAAA,mBACAyjC,EAAA3hC,EAAA9B,IAAA,uBACA0jC,EAAA5hC,EAAA9B,IAAA,4BAMA,GAJA,kBAAA0jC,IACAA,SAGA,MAAAF,EAAA,CACA,kBAAAA,IAEAA,SAGA,kBAAAC,GAAA,kBAAAA,IAEAA,SAGA,IAAAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAh1B,IACAmT,OAAA7f,EAAA0B,SAAAH,KAAAI,GAAA,EACAuN,OAAAyyB,EAAA,GACApkB,EAAA,IAEAsC,OAAA7f,EAAA0B,SAAAH,KAAAI,GAAA,EACAuN,OAAAyyB,EAAA,GACApkB,EAAAhc,KAAAugC,MAAAT,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,OACO,SAAAppB,EAAA3H,GACP,YAAAkxB,EAAAlxB,IAAA,MAAAkxB,EAAAlxB,GAAA,CACA,IAAAzF,EAAAxH,EAAAm+B,EAAAlxB,IAAAqxB,EAAA,GAAAC,EAAA,EAAAD,EAAAC,EAAAziC,EAAAiT,QAAA,GAEAkL,EAAArF,EAAAqF,EAAArF,EAAAhJ,OACA6yB,GAAAV,EAAA,GAAA9jB,EAAAhc,KAAAygC,IAAAhiC,EAAA0B,UAAA2/B,EAAA,GAAA9jB,EAAAhc,KAAA0gC,IAAAjiC,EAAA0B,WACAoJ,EAAA5F,MACAxD,SAAAwW,EAAA2H,OACA3gB,SAAA6iC,EACA9+B,QAAA,IAEAxG,KAAA+F,MAAAE,IAAAoI,KAEOrO,SAOPylC,cAAA,WACA,IAAAniC,EAAAtD,KAAAsD,UACAC,EAAAvD,KAAAuD,IACAmiC,EAAAC,EAAA3lC,KAAAsD,EAAAC,GACAqiC,EAAAC,EAAA7lC,KAAAsD,EAAAC,GACAuiC,EAAAxiC,EAAAsiC,EAAAF,IAMAze,SAAA,WACA,IAAA1jB,EAAAvD,KAAAuD,IACAD,EAAAtD,KAAAsD,UACA8W,EAAA5U,EAAAjC,EAAA0jB,SAAA3jB,EAAA9B,IAAA,SAEA,GAAA4Y,EAAA,CAIA,IASApK,EAOA+1B,EAhBAxjB,EAAAjf,EAAA9B,IAAA,gBACA8D,EAAA/B,EAAA+B,cACA0gC,EAAA1iC,EAAA6H,SAAA,iBACA5I,EAAAe,EAAA9B,IAAA,cACAmY,EAAA3Z,KAAAsD,UAAAI,KAAAqV,YACAktB,EAAAtsB,EAAA,GAAAA,EAAA,QACA2rB,GAAA,UAAA/iB,EAAA5I,EAAA,GAAAssB,EAAA1jC,EAAA,QAAAggB,EAAA5I,EAAA,GAAAssB,EAAA1jC,GAAAoX,EAAA,GAAAA,EAAA,MAEAusB,EAAA3jB,GAAAhf,EAAAgC,YAAAD,EAAA/C,EAAA,GAEA4jC,EAAA7iC,EAAA9B,IAAA,cAEA,MAAA2kC,IACAA,IAAAjhC,EAAA,KAKAghC,EAAA3jB,GACAvS,EAAAo2B,EAAA7iC,EAAA0B,SAAA,MAAAkhC,IAAA5iC,EAAA0B,SACAK,IAEA0K,EAAAq2B,EAAA9iC,EAAAgf,EAAA4jB,GAAA,EAAAxsB,GACAosB,EAAAxiC,EAAAwiC,uBAEA,MAAAA,IACAA,EAAAjhC,KAAA6c,IAAAokB,EAAAjhC,KAAA0gC,IAAAx1B,EAAA/K,YACAqhC,SAAAP,OAAA,QAIA,IAAAQ,EAAAP,EAAAQ,UACAC,EAAAnjC,EAAA9B,IAAA,uBACAmhB,EAAA8jB,EAAA9jB,SACAD,EAAAld,EAAAjC,EAAAmjC,qBAAAD,EAAA/jB,SAAAqjB,GAGAY,EAAA,MAAAhkB,GAAA,MAAAD,EAAAghB,EAAAkD,aAAAxsB,EAAAsI,EAAA6jB,EAAA5jB,GACAkkB,QAAA,EACAjkB,YAAA6jB,EAAA7jB,cACKxI,EACL0sB,EAAAxjC,EAAA9B,IAAA,cACAqS,EAAAvQ,EAAAuQ,SACAkzB,GACA5C,cAAAtwB,EACAuG,OACA1Y,OAAA,SAEAqlC,EAAAlzB,EAAA,SAAAvQ,EAAAiY,eACA,IAAAyrB,EAAA,IAAAphC,EAAA8O,MAEAktB,KAAA,OACAqF,WAAA7sB,EACA8sB,gBAAAP,EACAlkC,SAAA6iC,EACArgC,SAAA+K,EAAA/K,SACAuB,OAAA2gC,EAAA7jC,GACAqC,GAAA,EACAqd,QAAA8jB,KAAAnmC,KAAA0K,GACA+7B,QAAAhtB,EACAmR,UAAA,WACA,OAAAnR,GAEA2sB,mBACOD,GAAA,OAEPlhC,EAAAyhC,aAAAL,EAAA5gC,MAAA4/B,GACA74B,KAAAw5B,EACAJ,WACAe,SAAAtB,EAAAuB,gBAAAjkC,EAAA9B,IAAA,4BACA0O,UAAAF,EAAAE,UACAyF,kBAAA3F,EAAA2F,oBAGArS,EAAA9B,IAAA,kBACAwlC,EAAA9C,UAAAD,EAAA3gC,GACA0jC,EAAA9C,UAAAsD,WAAA,WACAR,EAAA9C,UAAA9pB,QAIApa,KAAAwkC,WAAAv+B,IAAA+gC,GAEAA,EAAA3C,kBACArkC,KAAA+F,MAAAE,IAAA+gC,GACAA,EAAAS,wBAiBArB,EAAA9F,EAAA8F,gBAAA,SAAAsB,EAAAC,EAAAC,GACA,IACA13B,EACAyF,EAFAkyB,EAAAjE,EAAA+D,EAAAD,GAsBA,OAlBA/D,EAAAkE,IAEAlyB,EAAAiyB,EAAA,iBACA13B,EAAA,UACGyzB,EAAAkE,EAAA3iC,IAEHyQ,EAAAiyB,EAAA,iBACA13B,EAAA,WAEAyF,EAAA,SAGAzF,EADA23B,EAAA,GAAAA,EAAA3iC,EACA0iC,EAAA,iBAEAA,EAAA,mBAKA3iC,SAAA4iC,EACA33B,YACAyF,sBAIA,SAAA0wB,EAAA9iC,EAAAyzB,EAAA8Q,EAAAnuB,GACA,IACAzJ,EACAyF,EAFAkyB,EAAAjE,EAAAkE,EAAAvkC,EAAA0B,UAGA2U,EAAAD,EAAA,GAAAA,EAAA,GACAouB,EAAA,UAAA/Q,IAAApd,GAAA,UAAAod,GAAApd,EAkBA,OAhBA+pB,EAAAkE,EAAA3iC,EAAA,IACAyQ,EAAAoyB,EAAA,eACA73B,EAAA,UACGyzB,EAAAkE,EAAA,IAAA3iC,IACHyQ,EAAAoyB,EAAA,eACA73B,EAAA,WAEAyF,EAAA,SAGAzF,EADA23B,EAAA,IAAA3iC,GAAA2iC,EAAA3iC,EAAA,EACA6iC,EAAA,eAEAA,EAAA,iBAKA9iC,SAAA4iC,EACA33B,YACAyF,qBAIA,SAAAwxB,EAAA7jC,GACA,IAAAwjC,EAAAxjC,EAAA9B,IAAA,WACA,OAAA8B,EAAA9B,IAAA,aACA8B,EAAA9B,IAAA,iBAAAslC,KAAAnmC,MAGA,SAAAmlC,EAAAxiC,EAAAsiC,EAAAF,GAIA,IAAAriB,EAAA/f,EAAA9B,IAAA,0BACA8hB,EAAAhgB,EAAA9B,IAAA,0BAGAokC,QACAF,QACA,IAAAsC,EAAApC,EAAA,GACAqC,EAAArC,EAAA,GACAsC,EAAAtC,IAAAljC,OAAA,GACAylC,EAAAvC,IAAAljC,OAAA,GACA0lC,EAAA1C,EAAA,GACA2C,EAAA3C,EAAA,GACA4C,EAAA5C,IAAAhjC,OAAA,GACA6lC,EAAA7C,IAAAhjC,OAAA,IAEA,IAAA2gB,GACAmlB,EAAAR,GACAQ,EAAAJ,IACGK,EAAAT,EAAAC,KACH5kB,GACAmlB,EAAAP,GACAO,EAAAH,KAEAG,EAAAR,GACAQ,EAAAJ,MAIA,IAAA9kB,GACAklB,EAAAN,GACAM,EAAAF,IACGG,EAAAN,EAAAD,KACH5kB,GACAklB,EAAAL,GACAK,EAAAD,KAEAC,EAAAN,GACAM,EAAAF,KAKA,SAAAE,EAAAjpB,GACAA,MAAA5K,QAAA,GAGA,SAAA8zB,EAAA9O,EAAAC,EAAA5pB,GAEA,IAAA04B,EAAA/O,KAAAgP,kBAAAjW,QACAkW,EAAAhP,KAAA+O,kBAAAjW,QAEA,GAAAgW,GAAAE,EAAA,CAMA,IAAAC,EAAAhF,EAAAiF,aAIA,OAHAjF,EAAAzgB,OAAAylB,KAAAlP,EAAA10B,UACAyjC,EAAA1E,eAAAH,EAAAkF,OAAAF,EAAAlP,EAAAqP,sBACAJ,EAAA5E,eAAAH,EAAAkF,OAAAF,EAAAjP,EAAAoP,sBACAN,EAAAO,UAAAL,IAGA,SAAA1C,EAAA3jB,GACA,iBAAAA,GAAA,WAAAA,EAGA,SAAAojB,EAAA9E,EAAAv9B,EAAAC,GACA,IAAAG,EAAAJ,EAAAI,KAEA,GAAAJ,EAAA9B,IAAA,mBAAAkC,EAAAiF,MAAA6qB,UAAA,CAaA,IATA,IAAA+N,EAAAj+B,EAAA6H,SAAA,YACAozB,EAAAgD,EAAAp2B,SAAA,aACA+9B,EAAA3H,EAAA//B,IAAA,UACA6/B,EAAA39B,EAAA49B,iBACAsD,KACAC,KACAF,EAAA9D,EAAAyD,WACAoB,KAEA/1B,EAAA,EAAiBA,EAAA0xB,EAAA3+B,OAAwBiN,IAAA,CACzC,IAAA6xB,EAAAH,EAAA1xB,GAAAsJ,MACA2rB,EAAA,GAAApD,EACAoD,EAAA,KACAC,EAAA,GAAArD,EACAqD,EAAA,GAAAthC,EAAA8B,cAAA6jC,EAEAvE,IACAZ,EAAAa,IAAAD,GACAZ,EAAAc,IAAAF,IAIA,IAAAwE,EAAA,IAAAvjC,EAAA87B,KAAA97B,EAAA+7B,sBAEAC,KAAA,QAAAP,EAAA1xB,GAAAquB,UACA73B,OACAwK,GAAAi0B,EAAA,GACAh0B,GAAAg0B,EAAA,GACA/zB,GAAAg0B,EAAA,GACA9zB,GAAA8zB,EAAA,IAEAz+B,MAAAC,EAAAk4B,EAAA1oB,gBACAD,OAAAtS,EAAA9B,IAAA,8BAEAmE,GAAA,EACAa,QAAA,KAEAq6B,EAAA96B,MAAAE,IAAAkjC,GACAzD,EAAA/jC,KAAAwnC,GAGA,OAAAzD,GAGA,SAAAG,EAAAhF,EAAAv9B,EAAAC,GACA,IAAAG,EAAAJ,EAAAI,KACA/C,EAAA6E,EAAAjC,EAAA6lC,cAAA9lC,EAAA9B,IAAA,mBAEA,GAAAb,IAAA+C,EAAAiF,MAAA6qB,UAAA,CAIA,IAAA5oB,EAAAtH,EAAA6H,SAAA,aACAk+B,EAAAz+B,EAAApJ,IAAA,UACA8nC,EAAA5lC,EAAAo6B,gBAEAyL,GAAA/jC,EAAAjC,EAAAmC,YAAAkF,EAAApJ,IAAA,eAAA0D,EAAA,IACA8K,EAAAo2B,EAAA7iC,EAAA0B,SAAAskC,EAAAhmC,EAAA6B,gBACAokC,EAAAlmC,EAAAwkB,eAAA,GACA8d,KACAp/B,EAAA2gC,EAAA7jC,GACAyf,EAAAzf,EAAA9B,IAAA,gBAkDA,OAjDAyO,EAAAq5B,EAAA,SAAAvL,EAAAjqB,GACA,IAAAkqB,EAAAD,EAAAC,UACAyL,EAAA1L,EAAA0L,eACAC,EAAA3L,EAAA2L,SACAC,EAAA/+B,EAEA4+B,KAAAxL,IAAAwL,EAAAxL,GAAAtR,YACAid,EAAA,IAAAvrB,EAAAorB,EAAAxL,GAAAtR,UAAA9hB,EAAAtH,EAAAhD,UAGA,IAAAspC,EAAAD,EAAApC,gBAAAjkC,EAAA9B,IAAA,4BACAggC,EAAA99B,EAAAmB,YAAAm5B,GACAsH,GAAA9D,EAAAj+B,EAAAgC,YAAAhC,EAAA6B,eAAAikC,GACArC,EAAA,IAAAphC,EAAA8O,MAEAktB,KAAA,SAAA5D,EACAv7B,SAAA6iC,EACArgC,SAAA+K,EAAA/K,SACAuB,SACAb,GAAA,KAEAC,EAAAyhC,aAAAL,EAAA5gC,MAAAujC,GACAx8B,KAAAs8B,EACAv5B,UAAAy5B,EAAAv+B,WAAA,aAAA4E,EAAAE,UACAyF,kBAAAg0B,EAAAv+B,WAAA,qBAAAu+B,EAAAv+B,WAAA,gBAAA4E,EAAA2F,kBACA2xB,SAAA,oBAAAsC,IAOA,aAAAlmC,EAAA9D,KAAA8pC,EAAA,UAAAhmC,EAAA9D,KAAAo+B,EAAA,GAAAA,EAAAlqB,GAAA81B,IAGA7mB,IACAikB,EAAA9C,UAAAD,EAAA3gC,GACA0jC,EAAA9C,UAAAsD,WAAA,YACAR,EAAA9C,UAAA9xB,MAAAs3B,GAIA7I,EAAA2D,WAAAv+B,IAAA+gC,GAEAA,EAAA3C,kBACAuB,EAAAjkC,KAAAqlC,GACAnG,EAAA96B,MAAAE,IAAA+gC,GACAA,EAAAS,uBAEA7B,GAGA,IAAA5iC,EAAAs9B,EACAr9B,EAAAC,QAAAF,sBCllBA,IAAA6mC,GACAC,QAAA,SAAAC,GAIA,IAHA,IAAA1oC,EAAA,EACAwO,EAAA,EAEAF,EAAA,EAAmBA,EAAAo6B,EAAArnC,OAAkBiN,IACrCwW,MAAA4jB,EAAAp6B,MACAtO,GAAA0oC,EAAAp6B,GACAE,KAKA,WAAAA,EAAAkD,IAAA1R,EAAAwO,GAEAxO,IAAA,SAAA0oC,GAGA,IAFA,IAAA1oC,EAAA,EAEAsO,EAAA,EAAmBA,EAAAo6B,EAAArnC,OAAkBiN,IAErCtO,GAAA0oC,EAAAp6B,IAAA,EAGA,OAAAtO,GAEA0D,IAAA,SAAAglC,GAGA,IAFA,IAAAhlC,GAAA8J,IAEAc,EAAA,EAAmBA,EAAAo6B,EAAArnC,OAAkBiN,IACrCo6B,EAAAp6B,GAAA5K,MAAAglC,EAAAp6B,IAIA,OAAA22B,SAAAvhC,KAAAgO,KAEA/N,IAAA,SAAA+kC,GAGA,IAFA,IAAA/kC,EAAA6J,IAEAc,EAAA,EAAmBA,EAAAo6B,EAAArnC,OAAkBiN,IACrCo6B,EAAAp6B,GAAA3K,MAAA+kC,EAAAp6B,IAIA,OAAA22B,SAAAthC,KAAA+N,KAIAi3B,QAAA,SAAAD,GACA,OAAAA,EAAA,KAIAE,EAAA,SAAAF,EAAA33B,GACA,OAAAtN,KAAAq1B,MAAA4P,EAAArnC,OAAA,IAGA,SAAAM,EAAAshB,GACA,OACAA,aACA4lB,iBAAA,EACAxlB,MAAA,SAAAjb,EAAAnJ,EAAA0O,GACA,IAAAjO,EAAA0I,EAAAzI,UACAyN,EAAAhF,EAAAjI,IAAA,YACA6Q,EAAA5I,EAAAhG,iBAEA,mBAAA4O,EAAAzS,MAAA6O,EAAA,CACA,IAQA07B,EARA1tB,EAAApK,EAAAQ,cACAoR,EAAA5R,EAAAqK,aAAAD,GACA9C,EAAA8C,EAAA1D,YAEApG,EAAAgH,EAAA,GAAAA,EAAA,GACAywB,EAAAtlC,KAAAq1B,MAAAp5B,EAAA8O,QAAA8C,GAEA,GAAAy3B,EAAA,EAGA,kBAAA37B,EACA07B,EAAAN,EAAAp7B,GACW,oBAAAA,IACX07B,EAAA17B,GAGA07B,GAEA1gC,EAAA4gC,QAAAtpC,EAAAupC,WAAAvpC,EAAAK,aAAA6iB,EAAAjgB,KAAA,EAAAomC,EAAAD,EAAAF,OAQAhnC,EAAAC,QAAAF","file":"js/chunk-0f6c.6472f79a.js","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('page-title-bar'),_c('v-container',{attrs:{\"fluid\":\"\",\"grid-list-xl\":\"\",\"py-0\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('app-card',{attrs:{\"heading\":_vm.$t('message.barChart'),\"contentCustomClass\":\"overflow-hidden\",\"colClasses\":\"xs12 sm6 md6\",\"fullBlock\":true}},[_c('bar-chart')],1),_c('app-card',{attrs:{\"heading\":_vm.$t('message.doughnutChart'),\"contentCustomClass\":\"overflow-hidden\",\"colClasses\":\"xs12 sm6 md6\",\"fullBlock\":true}},[_c('doughnut-chart')],1),_c('app-card',{attrs:{\"heading\":_vm.$t('message.lineChart'),\"contentCustomClass\":\"overflow-hidden\",\"colClasses\":\"xs12 sm6 md6\",\"fullBlock\":true}},[_c('line-chart')],1),_c('app-card',{attrs:{\"heading\":_vm.$t('message.pieChart'),\"contentCustomClass\":\"overflow-hidden\",\"colClasses\":\"xs12 sm6 md6\",\"fullBlock\":true}},[_c('pie-chart')],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('app-card',{attrs:{\"heading\":_vm.$t('message.funnelChart'),\"contentCustomClass\":\"overflow-hidden\",\"colClasses\":\"xs12\",\"fullBlock\":true}},[_c('funnel-chart')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ECharts',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"options\":_vm.bar}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Bar Chart -->\n<template>\n    <ECharts :options=\"bar\" style=\"width:100%; height:300px\"></ECharts>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts.vue\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\";\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n  name: \"buyers-stats\",\n  components: {\n    ECharts\n  },\n  data() {\n    return {\n      bar: {\n        tooltip: {\n          trigger: \"axis\"\n        },\n        color: [ChartConfig.color.danger],\n        legend: {\n          data: [\"Series A\"]\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: true,\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"]\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value} K\"\n          }\n        },\n        series: [\n          {\n            name: \"Series A\",\n            type: \"bar\",\n            data: [11, 11, 15, 13, 12, 13, 10]\n          }\n        ]\n      }\n    };\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarChart.vue?vue&type=template&id=0753b3d5&\"\nimport script from \"./BarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./BarChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"BarChart.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ECharts',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"options\":_vm.pie}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Doughnut Chart -->\n<template>\n    <ECharts :options=\"pie\" style=\"width:100%; height:300px\"></ECharts>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts.vue\";\nimport \"echarts/lib/chart/pie\";\nimport \"echarts/lib/component/title\";\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n  components: {\n    ECharts\n  },\n  data() {\n    return {\n      pie: {\n        backgroundColor: \"transparent\",\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        color: [\n          ChartConfig.color.primary,\n          ChartConfig.color.danger,\n          ChartConfig.color.info,\n          ChartConfig.color.success,\n          ChartConfig.color.warning\n        ],\n        series: [\n          {\n            name: \"Product Sales\",\n            type: \"pie\",\n            radius: [\"50%\", \"70%\"],\n            avoidLabelOverlap: false,\n            data: [\n              {\n                value: 1548,\n                name: \"Product A\"\n              },\n              {\n                value: 310,\n                name: \"Product B\"\n              },\n              {\n                value: 234,\n                name: \"Product C\"\n              },\n              {\n                value: 135,\n                name: \"Product D\"\n              },\n              {\n                value: 335,\n                name: \"Product E\"\n              }\n            ],\n            label: {\n              normal: {\n                show: false,\n                position: \"center\"\n              },\n              emphasis: {\n                show: true,\n                textStyle: {\n                  fontSize: \"30\",\n                  fontWeight: \"bold\"\n                }\n              }\n            },\n            labelLine: {\n              normal: {\n                show: false\n              }\n            }\n          }\n        ]\n      }\n    };\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoughnutChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoughnutChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DoughnutChart.vue?vue&type=template&id=4510e9c4&\"\nimport script from \"./DoughnutChart.vue?vue&type=script&lang=js&\"\nexport * from \"./DoughnutChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"DoughnutChart.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ECharts',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"options\":_vm.line}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Line Chart -->\n<template>\n    <ECharts :options=\"line\" style=\"width:100%; height:300px\"></ECharts>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts.vue\";\nimport \"echarts/lib/chart/line\";\nimport \"echarts/lib/component/title\";\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n  name: \"buyers-stats\",\n  components: {\n    ECharts\n  },\n  data() {\n    return {\n      line: {\n        tooltip: {\n          trigger: \"axis\"\n        },\n        color: [ChartConfig.color.danger, ChartConfig.color.primary],\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"]\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value} K\"\n          }\n        },\n        legend: {\n          data: [\"Series A\", \"Series B\"]\n        },\n        series: [\n          {\n            name: \"Series A\",\n            type: \"line\",\n            data: [11, 11, 15, 13, 12, 13, 10],\n            markPoint: {\n              data: [{ type: \"max\", name: \"max\" }, { type: \"min\", name: \"min\" }]\n            },\n            markLine: {\n              data: [{ type: \"average\", name: \"average\" }]\n            }\n          },\n          {\n            name: \"Series B\",\n            type: \"line\",\n            data: [1, -2, 2, 5, 3, 2, 0],\n            markPoint: {\n              data: [{ name: \"abc\", value: -2, xAxis: 1, yAxis: -1.5 }]\n            },\n            markLine: {\n              data: [{ type: \"average\", name: \"average\" }]\n            }\n          }\n        ]\n      }\n    };\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LineChart.vue?vue&type=template&id=a472318c&\"\nimport script from \"./LineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"LineChart.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ECharts',{staticStyle:{\"height\":\"350px\"},attrs:{\"options\":_vm.pie}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Pie Chart -->\n<template>\n    <ECharts :options=\"pie\" style=\"height:350px\"></ECharts>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts.vue\";\nimport \"echarts/lib/chart/pie\";\nimport \"echarts/lib/component/title\";\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n  components: {\n    ECharts\n  },\n  data() {\n    return {\n      pie: {\n        backgroundColor: \"transparent\",\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        avoidLabelOverlap: false,\n        color: [\n          ChartConfig.color.primary,\n          ChartConfig.color.danger,\n          ChartConfig.color.warning\n        ],\n        series: [\n          {\n            name: \"Product Sales\",\n            type: \"pie\",\n            radius: \"55%\",\n            center: [\"50%\", \"50%\"],\n            data: [\n              {\n                value: 700,\n                name: \"Product A\"\n              },\n              {\n                value: 300,\n                name: \"Product B\"\n              },\n              {\n                value: 247,\n                name: \"Product C\"\n              }\n            ],\n            label: {\n              normal: {\n                textStyle: {\n                  color: \"rgba(0, 0, 0, 1)\"\n                }\n              }\n            },\n            itemStyle: {\n              normal: {\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              }\n            },\n            animationType: \"scale\",\n            animationEasing: \"elasticOut\",\n            animationDelay: function(idx) {\n              return Math.random() * 20;\n            }\n          }\n        ]\n      }\n    };\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PieChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PieChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PieChart.vue?vue&type=template&id=53226534&\"\nimport script from \"./PieChart.vue?vue&type=script&lang=js&\"\nexport * from \"./PieChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"PieChart.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ECharts',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"options\":_vm.funnel}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Funnel Chart -->\n<template>\n    <ECharts :options=\"funnel\" style=\"width:100%; height:300px\"></ECharts>\n</template>\n\n<script>\nimport ECharts from \"vue-echarts/components/ECharts.vue\";\nimport \"echarts/lib/chart/funnel\";\nimport \"echarts/lib/component/title\";\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n  components: {\n    ECharts\n  },\n  data() {\n    return {\n      funnel: {\n        tooltip: {\n          trigger: \"item\"\n        },\n        legend: {\n          data: [\n            \"Product A\",\n            \"Product B\",\n            \"Product C\",\n            \"Product D\",\n            \"Product E\"\n          ]\n        },\n        calculable: true,\n        color: [\n          ChartConfig.color.primary,\n          ChartConfig.color.danger,\n          ChartConfig.color.success,\n          ChartConfig.color.info,\n          ChartConfig.color.warning\n        ],\n        series: [\n          {\n            name: \"Sales\",\n            type: \"funnel\",\n            left: \"10%\",\n            top: 60,\n            // x2: 80,\n            bottom: 60,\n            width: \"80%\",\n            // height: {totalHeight} - y - y2\n            min: 0,\n            max: 100,\n            minSize: \"0%\",\n            maxSize: \"100%\",\n            sort: \"descending\",\n            gap: 2,\n            label: {\n              normal: {\n                show: true,\n                position: \"inside\"\n              },\n              emphasis: {\n                textStyle: {\n                  fontSize: 20\n                }\n              }\n            },\n            labelLine: {\n              normal: {\n                length: 10,\n                lineStyle: {\n                  width: 1,\n                  type: \"solid\"\n                }\n              }\n            },\n            itemStyle: {\n              normal: {\n                borderColor: \"#fff\",\n                borderWidth: 1\n              }\n            },\n            data: [\n              { value: 60, name: \"Product A\" },\n              { value: 40, name: \"Product B\" },\n              { value: 20, name: \"Product C\" },\n              { value: 80, name: \"Product D\" },\n              { value: 100, name: \"Product E\" }\n            ]\n          }\n        ]\n      }\n    };\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FunnelChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FunnelChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FunnelChart.vue?vue&type=template&id=3cf3f52e&\"\nimport script from \"./FunnelChart.vue?vue&type=script&lang=js&\"\nexport * from \"./FunnelChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"FunnelChart.vue\"\nexport default component.exports","<!-- Vue EChart Page -->\n<template>\n\t<div>\n\t\t<page-title-bar></page-title-bar>\n\t\t<v-container fluid grid-list-xl py-0>\n\t\t\t<v-layout row wrap>\n\t\t\t\t<app-card\n\t\t\t\t\t:heading=\"$t('message.barChart')\"\n\t\t\t\t\tcontentCustomClass=\"overflow-hidden\"\n\t\t\t\t\tcolClasses=\"xs12 sm6 md6\"\n\t\t\t\t\t:fullBlock=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t<bar-chart></bar-chart>\n\t\t\t\t</app-card>\n\t\t\t\t<app-card\n\t\t\t\t\t:heading=\"$t('message.doughnutChart')\"\n\t\t\t\t\tcontentCustomClass=\"overflow-hidden\"\n\t\t\t\t\tcolClasses=\"xs12 sm6 md6\"\n\t\t\t\t\t:fullBlock=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t<doughnut-chart></doughnut-chart>\n\t\t\t\t</app-card>\n\t\t\t\t<app-card\n\t\t\t\t\t:heading=\"$t('message.lineChart')\"\n\t\t\t\t\tcontentCustomClass=\"overflow-hidden\"\n\t\t\t\t\tcolClasses=\"xs12 sm6 md6\"\n\t\t\t\t\t:fullBlock=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t<line-chart></line-chart>\n\t\t\t\t</app-card>\n\t\t\t\t<app-card\n\t\t\t\t\t:heading=\"$t('message.pieChart')\"\n\t\t\t\t\tcontentCustomClass=\"overflow-hidden\"\n\t\t\t\t\tcolClasses=\"xs12 sm6 md6\"\n\t\t\t\t\t:fullBlock=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t<pie-chart></pie-chart>\n\t\t\t\t</app-card>\n\t\t\t</v-layout>\n\t\t\t<v-layout row wrap>\n\t\t\t\t<app-card\n\t\t\t\t\t:heading=\"$t('message.funnelChart')\"\n\t\t\t\t\tcontentCustomClass=\"overflow-hidden\"\n\t\t\t\t\tcolClasses=\"xs12\"\n\t\t\t\t\t:fullBlock=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t<funnel-chart></funnel-chart>\n\t\t\t\t</app-card>\n\t\t\t</v-layout>\n\t\t</v-container>\n\t</div>\n</template>\n\n<script>\nimport BarChart from \"./vue-echarts/BarChart\";\nimport DoughnutChart from \"./vue-echarts/DoughnutChart\";\nimport LineChart from \"./vue-echarts/LineChart\";\nimport PieChart from \"./vue-echarts/PieChart\";\nimport FunnelChart from \"./vue-echarts/FunnelChart\";\n\nexport default {\n  components: {\n    BarChart,\n    PieChart,\n    DoughnutChart,\n    LineChart,\n    FunnelChart\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueEcharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueEcharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueEcharts.vue?vue&type=template&id=3fd4c5de&\"\nimport script from \"./VueEcharts.vue?vue&type=script&lang=js&\"\nexport * from \"./VueEcharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"VueEcharts.vue\"\nexport default component.exports","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;"],"sourceRoot":""}